import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.a7175731.js";const d=JSON.parse('{"title":"CesiumJS --笔记","description":"","frontmatter":{},"headers":[],"relativePath":"GIS/Cesium/CesiumJS.md","filePath":"GIS/Cesium/CesiumJS.md","lastUpdated":null}'),p={name:"GIS/Cesium/CesiumJS.md"},o=l(`<h1 id="cesiumjs-笔记" tabindex="-1">CesiumJS --笔记 <a class="header-anchor" href="#cesiumjs-笔记" aria-label="Permalink to &quot;CesiumJS --笔记&quot;">​</a></h1><p>前言</p><p>viewer的属性和方法在这里</p><p><a href="https://cesium.com/learn/cesiumjs/ref-doc/Viewer.html?classFilter=viewer" target="_blank" rel="noreferrer">https://cesium.com/learn/cesiumjs/ref-doc/Viewer.html?classFilter=viewer</a></p><ul><li><p>Geocode地名地址搜索，默认使用Bing地图</p></li><li><p>主页视图，可自定义覆盖</p></li><li><p>SceneModePicker 2/3D切换</p></li><li><p>BaseLayerPicker 底图切换</p></li><li><p>NavigationHelpButton 帮助信息栏</p></li><li><p>Animation控制播放动画速度，也就是左下角的播放栏</p></li><li><p>CreditsDisplay 版权信息</p><ul><li><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//去除版权信息</span></span>
<span class="line"><span style="color:#E1E4E8;">viewer._cesiumWidget._creditContainer.style.display </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;none&quot;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//去除版权信息</span></span>
<span class="line"><span style="color:#24292E;">viewer._cesiumWidget._creditContainer.style.display </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;none&quot;</span><span style="color:#24292E;">;</span></span></code></pre></div></li></ul></li><li><p>TimeLine 时间条，可拖动</p></li><li><p>FullScreenButton 全屏</p></li><li><p>……</p></li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> arr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> str);</span><span style="color:#6A737D;">//string</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">typeof</span><span style="color:#E1E4E8;"> arr);</span><span style="color:#6A737D;">//object</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> o </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&#39;lee&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">         };</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;reg&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;blue&#39;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(o </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Object</span><span style="color:#E1E4E8;">);</span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(a </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Array</span><span style="color:#E1E4E8;">);</span><span style="color:#6A737D;">//  true</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(o </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Array</span><span style="color:#E1E4E8;">);</span><span style="color:#6A737D;">//  false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;string&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> str);</span><span style="color:#6A737D;">//string</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">typeof</span><span style="color:#24292E;"> arr);</span><span style="color:#6A737D;">//object</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> o </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&#39;lee&#39;</span></span>
<span class="line"><span style="color:#24292E;">         };</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;reg&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;blue&#39;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(o </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Object</span><span style="color:#24292E;">);</span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(a </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Array</span><span style="color:#24292E;">);</span><span style="color:#6A737D;">//  true</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(o </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Array</span><span style="color:#24292E;">);</span><span style="color:#6A737D;">//  false</span></span></code></pre></div><h2 id="其他cesium-和-vue" tabindex="-1">其他Cesium 和 vue <a class="header-anchor" href="#其他cesium-和-vue" aria-label="Permalink to &quot;其他Cesium 和 vue&quot;">​</a></h2><p>![Cesium API结构](CesiumJS.assets/Cesium API结构.png)</p>`,8),e=[o];function t(c,r,y,i,E,u){return a(),n("div",null,e)}const m=s(p,[["render",t]]);export{d as __pageData,m as default};
