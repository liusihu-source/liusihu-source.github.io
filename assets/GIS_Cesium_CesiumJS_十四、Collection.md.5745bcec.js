import{_ as e,o as t,c as i,Q as a}from"./chunks/framework.a7175731.js";const S=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"GIS/Cesium/CesiumJS/十四、Collection.md","filePath":"GIS/Cesium/CesiumJS/十四、Collection.md","lastUpdated":null}'),o={name:"GIS/Cesium/CesiumJS/十四、Collection.md"},l=a('<h2 id="collection-datasources-笔记" tabindex="-1">Collection &amp; dataSources --笔记 <a class="header-anchor" href="#collection-datasources-笔记" aria-label="Permalink to &quot;Collection &amp; dataSources  --笔记&quot;">​</a></h2><blockquote><p>billboardCollection 管理 billBoard</p><p>dataSources 管理 各种数据源数据 和 entity（polyline point polygon等）</p><p>tileseManage 管理 3dtiels合集</p><p>primitivesCollections</p></blockquote><h3 id="一、viewer" tabindex="-1">一、Viewer <a class="header-anchor" href="#一、viewer" aria-label="Permalink to &quot;一、Viewer&quot;">​</a></h3><h4 id="datasourcedisplay-datasourcedisplay" tabindex="-1">dataSourceDisplay : DataSourceDisplay <a class="header-anchor" href="#datasourcedisplay-datasourcedisplay" aria-label="Permalink to &quot;dataSourceDisplay : DataSourceDisplay&quot;">​</a></h4><p>Gets the display used for <a href="http://localhost/Cesium196/Build/Documentation/DataSource.html" target="_blank" rel="noreferrer"><code>DataSource</code></a> visualization.</p><h4 id="datasources-datasourcecollection" tabindex="-1">dataSources：DataSourceCollection <a class="header-anchor" href="#datasources-datasourcecollection" aria-label="Permalink to &quot;dataSources：DataSourceCollection&quot;">​</a></h4><p>Gets the set of <a href="http://localhost/Cesium196/Build/Documentation/DataSource.html" target="_blank" rel="noreferrer"><code>DataSource</code></a> instances to be visualized.</p><h4 id="entities-entitycollection" tabindex="-1">entities：EntityCollection <a class="header-anchor" href="#entities-entitycollection" aria-label="Permalink to &quot;entities：EntityCollection&quot;">​</a></h4><p>Gets the collection of entities not tied to a particular data source. This is a shortcut to <a href="http://localhost/Cesium196/Build/Documentation/Viewer.html#dataSourceDisplay" target="_blank" rel="noreferrer"><code>dataSourceDisplay.defaultDataSource.entities</code></a>.</p><p>💡 其中dataSources可以添加各种DataSource，如czmldataSource等</p><h3 id="二、entity-和-primitive" tabindex="-1">二、entity 和 primitive <a class="header-anchor" href="#二、entity-和-primitive" aria-label="Permalink to &quot;二、entity 和 primitive&quot;">​</a></h3><h4 id="primitive" tabindex="-1">primitive <a class="header-anchor" href="#primitive" aria-label="Permalink to &quot;primitive&quot;">​</a></h4><ul><li><code>primitives</code>是<code>Scene</code>的一个属性，用于添加自定义的几何体（<code>Primitive</code>）。</li><li>适用于需要高度自定义的场景，例如创建复杂的3D模型或特效。</li><li>通常用于创建那些不是简单的点、线、面的对象，比如体积渲染、自定义着色器等。</li><li>可以通过<code>PrimitiveCollection</code>来管理，它提供了优化，特别是在渲染大量相同的几何体时。</li></ul><h5 id="性能优势" tabindex="-1">性能优势： <a class="header-anchor" href="#性能优势" aria-label="Permalink to &quot;性能优势：&quot;">​</a></h5><ul><li><strong>批处理渲染</strong>：<code>PrimitiveCollection</code>可以将多个几何实例打包在一起，减少绘制调用（Draw Calls），从而提高渲染效率。</li><li><strong>内存管理</strong>：由于几何体是批量处理的，内存使用更加高效。</li><li><strong>状态更改优化</strong>：减少 WebGL 状态更改，因为多个几何体可以使用相同的着色器和材质进行渲染。</li></ul><h4 id="entities" tabindex="-1">Entities： <a class="header-anchor" href="#entities" aria-label="Permalink to &quot;Entities：&quot;">​</a></h4><ul><li><code>entities</code>是<code>Viewer</code>的一个属性，用于添加和管理地理空间实体（<code>Entity</code>）。</li><li>适用于表示具有地理坐标的点、线、面等基本图形，如标记点、路径、盒子、圆柱等。</li><li>提供了丰富的属性来定义实体的样式和行为，例如标签、描述、图像等。</li><li>通常用于数据可视化和简单的地理空间标注。</li></ul><h4 id="使用场景" tabindex="-1">使用场景： <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景：&quot;">​</a></h4><ul><li>当需要表示具有地理或屏幕位置的简单图形时，使用<code>entities</code>。</li><li>当需要与时间轴或其他Cesium控件交互时，使用<code>entities</code>。</li></ul><h4 id="区别和适用场景" tabindex="-1">区别和适用场景： <a class="header-anchor" href="#区别和适用场景" aria-label="Permalink to &quot;区别和适用场景：&quot;">​</a></h4><ul><li><strong>复杂度</strong>：<code>primitives</code>适合复杂和高度自定义的几何体，<code>entities</code>适合简单的、标准形状的几何体。</li><li><strong>管理</strong>：<code>primitives</code>使用<code>PrimitiveCollection</code>进行管理，而<code>entities</code>使用<code>EntityCollection</code>。</li><li><strong>性能</strong>：<code>primitives</code>在渲染大量相同的几何体时有性能优势，<code>entities</code>则在管理和交互方面更加方便。</li><li><strong>场景</strong>：如果你需要创建大量的自定义几何体，比如成千上万个点或自定义形状，使用<code>primitives</code>。如果你需要在地图上标记特定的位置或路径，使用<code>entities</code>。</li></ul><p>选择使用<code>primitives</code>还是<code>entities</code>，取决于你的具体需求，包括所需的几何体复杂度、性能要求、以及是否需要与Cesium的其他功能（如时间轴）进行交互。</p>',22),r=[l];function c(s,n,d,u,h,p){return t(),i("div",null,r)}const _=e(o,[["render",c]]);export{S as __pageData,_ as default};
