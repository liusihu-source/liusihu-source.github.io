import{_ as e,c as t,a2 as s,o as i}from"./chunks/framework.BQmytedh.js";const r="/assets/image-20240910205304462.4_zT15cJ.png",o="/assets/image-20240910205316983.CfpHfWqS.png",p="/assets/image-20240910205529980.Cof6r9a1.png",m="/assets/image-20240910205547483.d5gThucQ.png",c="/assets/image-20240910205758305.BUnmuIyB.png",l="/assets/image-20240910210002640.CkK16O04.png",n="/assets/image-20240910210120167.CPEscAFC.png",g="/assets/image-20240910210201552.BYZVZcwb.png",h="/assets/image-20240910210931592.NYKIrmcp.png",d="/assets/image-20240910212755050.MP4me8Gu.png",_="/assets/image-20240910212922991.zSyja1W6.png",u="/assets/image-20240910215033399.Fl1XGaMi.png",x="/assets/image-20240910213033531.D7cS6FNx.png",b="/assets/image-20240910215511335.CRlODez0.png",q="/assets/image-20240910215706148.zhJIn85k.png",f="/assets/image-20240910220117489.CoQ1l6sA.png",k="/assets/image-20240910220151091.CF-ruAFi.png",F=JSON.parse('{"title":"矩阵到空间变换","description":"","frontmatter":{},"headers":[],"relativePath":"GIS/Cesium/CesiumJS/细致分析_矩阵到空间变换.md","filePath":"GIS/Cesium/CesiumJS/细致分析_矩阵到空间变换.md","lastUpdated":null}'),P={name:"GIS/Cesium/CesiumJS/细致分析_矩阵到空间变换.md"};function S(C,a,M,I,J,B){return i(),t("div",null,a[0]||(a[0]=[s('<h1 id="矩阵到空间变换" tabindex="-1">矩阵到空间变换 <a class="header-anchor" href="#矩阵到空间变换" aria-label="Permalink to &quot;矩阵到空间变换&quot;">​</a></h1><h2 id="一、向量点乘-与-×乘" tabindex="-1">一、向量点乘 与 ×乘 <a class="header-anchor" href="#一、向量点乘-与-×乘" aria-label="Permalink to &quot;一、向量点乘 与 ×乘&quot;">​</a></h2><blockquote><p>向量默认表示为列向量</p></blockquote><p><img src="'+r+'" alt="image-20240910205304462"></p><p><img src="'+o+'" alt="image-20240910205316983"></p><h2 id="二、矩阵到二维空间变换" tabindex="-1">二、矩阵到二维空间变换 <a class="header-anchor" href="#二、矩阵到二维空间变换" aria-label="Permalink to &quot;二、矩阵到二维空间变换&quot;">​</a></h2><blockquote><p>线性变换矩阵：变换能用<code>矩阵</code> 乘 输入坐标得到输出坐标，则该种变换时线性变换，如下的 <code>缩放、反射、剪切和旋转等</code>都属于线性变换。</p></blockquote><h4 id="缩放矩阵-scale-matrix" tabindex="-1">缩放矩阵--Scale Matrix <a class="header-anchor" href="#缩放矩阵-scale-matrix" aria-label="Permalink to &quot;缩放矩阵--Scale Matrix&quot;">​</a></h4><p>💡 在坐标轴方向缩放</p><p><img src="'+p+'" alt="image-20240910205529980"></p><p><img src="'+m+'" alt="image-20240910205547483"></p><h4 id="反射矩阵-reflect-matrix" tabindex="-1">反射矩阵--reflect Matrix <a class="header-anchor" href="#反射矩阵-reflect-matrix" aria-label="Permalink to &quot;反射矩阵--reflect Matrix&quot;">​</a></h4><p>💡 坐标轴对称</p><p><img src="'+c+'" alt="image-20240910205758305"></p><h4 id="剪切矩阵-shear-matrix" tabindex="-1">剪切矩阵--Shear Matrix <a class="header-anchor" href="#剪切矩阵-shear-matrix" aria-label="Permalink to &quot;剪切矩阵--Shear Matrix&quot;">​</a></h4><p>💡 拉扯原图像</p><p><img src="'+l+'" alt="image-20240910210002640"></p><h4 id="旋转矩阵-rotation-matrix" tabindex="-1">旋转矩阵--Rotation Matrix <a class="header-anchor" href="#旋转矩阵-rotation-matrix" aria-label="Permalink to &quot;旋转矩阵--Rotation Matrix&quot;">​</a></h4><p>💡 角度关系确定变换矩阵</p><p><img src="'+n+'" alt="image-20240910210120167"></p><p>💡 推导过程</p><p><img src="'+g+'" alt="image-20240910210201552"></p><p>平移，除了矩阵相乘 还需补充 <code>加法</code> ，这种变换是 <code>仿射变换</code></p><p><img src="'+h+'" alt="image-20240910210931592"></p><p><img src="'+d+'" alt="image-20240910212755050"></p><p>尝试将平移操作 更改 为线性变换--<code>齐次坐标</code></p><p><img src="'+_+'" alt="image-20240910212922991"></p><h2 id="三、齐次坐标" tabindex="-1">三、齐次坐标 <a class="header-anchor" href="#三、齐次坐标" aria-label="Permalink to &quot;三、齐次坐标&quot;">​</a></h2><blockquote><p>向量加0</p><p>坐标加1</p></blockquote><p><img src="'+u+'" alt="image-20240910215033399"></p><p>💡 理解齐次坐标</p><p>向量的平移不会导致向量改变</p><p>坐标点改变，如(x,y,w) 理解为 (x/w, y/w, 1)</p><p><img src="'+x+'" alt="image-20240910213033531"></p><h2 id="四、逆变换" tabindex="-1">四、逆变换 <a class="header-anchor" href="#四、逆变换" aria-label="Permalink to &quot;四、逆变换&quot;">​</a></h2><p><img src="'+b+'" alt="image-20240910215511335"></p><h2 id="五、变换组合" tabindex="-1">五、变换组合 <a class="header-anchor" href="#五、变换组合" aria-label="Permalink to &quot;五、变换组合&quot;">​</a></h2><blockquote><p>先平移再旋转 和 先旋转再平移是不同的</p></blockquote><p><img src="'+q+'" alt="image-20240910215706148"></p><p>💡 可以把多个仿射变换 预乘积为 单一矩阵</p><p><img src="'+f+'" alt="image-20240910220117489"></p><p><img src="'+k+'" alt="image-20240910220151091"></p><h2 id="六、3d变换" tabindex="-1">六、3D变换 <a class="header-anchor" href="#六、3d变换" aria-label="Permalink to &quot;六、3D变换&quot;">​</a></h2><p>P04</p>',44)]))}const G=e(P,[["render",S]]);export{F as __pageData,G as default};
