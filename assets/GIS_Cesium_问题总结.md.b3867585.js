import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.a7175731.js";const C=JSON.parse('{"title":"问题总结 --笔记","description":"","frontmatter":{},"headers":[],"relativePath":"GIS/Cesium/问题总结.md","filePath":"GIS/Cesium/问题总结.md","lastUpdated":null}'),l={name:"GIS/Cesium/问题总结.md"},o=p(`<h1 id="问题总结-笔记" tabindex="-1">问题总结 --笔记 <a class="header-anchor" href="#问题总结-笔记" aria-label="Permalink to &quot;问题总结 --笔记&quot;">​</a></h1><h3 id="_1、二次位置点类型检查" tabindex="-1">1、二次位置点类型检查 <a class="header-anchor" href="#_1、二次位置点类型检查" aria-label="Permalink to &quot;1、二次位置点类型检查&quot;">​</a></h3><blockquote><p>在该代码中，<code>that.HkScrViewer.scene.pickPosition(px)</code> 方法用于获取鼠标位置在场景中的笛卡尔坐标，而 <code>that.HkScrViewer.scene.pick(px)</code> 方法则是用于检测场景中是否存在可拾取的物体。</p><p>当鼠标点在3Dtiles模型上时， <code>that.HkScrViewer.scene.pick(px)</code>方法会返回拾取到的 <code>pick</code> 对象，该对象的 <code>primitive</code> 属性为被拾取到的物体，如 <code>Cesium.Cesium3DTileset</code> 或 <code>Cesium.Model</code>。因此，通过判断 <code>primitive</code> 是否为 3Dtiles 模型，可以判断鼠标点是否在3Dtiles模型上。</p><p>为了确保场景中存在可拾取的物体，该代码在检测到鼠标点在3Dtiles模型上时，使用了 <code>that.HkScrViewer.scene.pick(px)</code> 方法来进行二次检测。这样做是为了避免 <code>that.HkScrView er.scene.pickPosition(px)</code> 方法返回一个非3Dtiles模型的场景中的点，从而导致后续的坐标转换出现错误。</p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">that.HkScrViewer.scene.pick(px)</span></span>
<span class="line"><span style="color:#e1e4e8;">cartesian = that.HkScrViewer.scene.pickPosition(px);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">that.HkScrViewer.scene.pick(px)</span></span>
<span class="line"><span style="color:#24292e;">cartesian = that.HkScrViewer.scene.pickPosition(px);</span></span></code></pre></div><h3 id="_2、底层数学原理" tabindex="-1">2、底层数学原理 <a class="header-anchor" href="#_2、底层数学原理" aria-label="Permalink to &quot;2、底层数学原理&quot;">​</a></h3><ol><li><p>底层数学原理无法理解</p><ul><li><p>暂时无法理解geodesic.surfaceDistance 和 Math.sqrt内部的具体数学公式（后面有时间再尝试推导）</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">getPositionDistance</span><span style="color:#E1E4E8;">(positions:any) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> distance </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> positions.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> point1cartographic </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">transformWGS84ToCartographic</span><span style="color:#E1E4E8;">(positions[i])</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> point2cartographic </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">transformWGS84ToCartographic</span><span style="color:#E1E4E8;">(positions[i </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> geodesic </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Cesium.</span><span style="color:#B392F0;">EllipsoidGeodesic</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">      geodesic.</span><span style="color:#B392F0;">setEndPoints</span><span style="color:#E1E4E8;">(point1cartographic, point2cartographic)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> geodesic.surfaceDistance</span></span>
<span class="line"><span style="color:#E1E4E8;">      s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Math.</span><span style="color:#B392F0;">sqrt</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        Math.</span><span style="color:#B392F0;">pow</span><span style="color:#E1E4E8;">(s, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">        Math.</span><span style="color:#B392F0;">pow</span><span style="color:#E1E4E8;">(point2cartographic.height </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> point1cartographic.height, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      )</span></span>
<span class="line"><span style="color:#E1E4E8;">      distance </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> distance </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> s</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> distance.</span><span style="color:#B392F0;">toFixed</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">getPositionDistance</span><span style="color:#24292E;">(positions:any) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> distance </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> positions.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> point1cartographic </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">transformWGS84ToCartographic</span><span style="color:#24292E;">(positions[i])</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> point2cartographic </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">transformWGS84ToCartographic</span><span style="color:#24292E;">(positions[i </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> geodesic </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Cesium.</span><span style="color:#6F42C1;">EllipsoidGeodesic</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">      geodesic.</span><span style="color:#6F42C1;">setEndPoints</span><span style="color:#24292E;">(point1cartographic, point2cartographic)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> geodesic.surfaceDistance</span></span>
<span class="line"><span style="color:#24292E;">      s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Math.</span><span style="color:#6F42C1;">sqrt</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        Math.</span><span style="color:#6F42C1;">pow</span><span style="color:#24292E;">(s, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">        Math.</span><span style="color:#6F42C1;">pow</span><span style="color:#24292E;">(point2cartographic.height </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> point1cartographic.height, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      )</span></span>
<span class="line"><span style="color:#24292E;">      distance </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> distance </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> s</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> distance.</span><span style="color:#6F42C1;">toFixed</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span></code></pre></div></li><li><p>暂时无法理解 h += oel.x * el.y - el.x * oel.y（后面有时间再尝试推导）</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">getPositionsArea</span><span style="color:#E1E4E8;">(positions:any) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (positions) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> h </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> ellipsoid </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Cesium.Ellipsoid.</span><span style="color:#79B8FF;">WGS84</span></span>
<span class="line"><span style="color:#E1E4E8;">      positions.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(positions[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> positions.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> oel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ellipsoid.</span><span style="color:#B392F0;">cartographicToCartesian</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">transformWGS84ToCartographic</span><span style="color:#E1E4E8;">(positions[i </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> el </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ellipsoid.</span><span style="color:#B392F0;">cartographicToCartesian</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">transformWGS84ToCartographic</span><span style="color:#E1E4E8;">(positions[i])</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span></span>
<span class="line"><span style="color:#E1E4E8;">        h </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> oel.x </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> el.y </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> el.x </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> oel.y</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseInt</span><span style="color:#E1E4E8;">(Math.</span><span style="color:#B392F0;">abs</span><span style="color:#E1E4E8;">(h).</span><span style="color:#B392F0;">toFixed</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">getPositionsArea</span><span style="color:#24292E;">(positions:any) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (positions) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> h </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> ellipsoid </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Cesium.Ellipsoid.</span><span style="color:#005CC5;">WGS84</span></span>
<span class="line"><span style="color:#24292E;">      positions.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(positions[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> positions.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> oel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ellipsoid.</span><span style="color:#6F42C1;">cartographicToCartesian</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">transformWGS84ToCartographic</span><span style="color:#24292E;">(positions[i </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">        )</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> el </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ellipsoid.</span><span style="color:#6F42C1;">cartographicToCartesian</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">transformWGS84ToCartographic</span><span style="color:#24292E;">(positions[i])</span></span>
<span class="line"><span style="color:#24292E;">        )</span></span>
<span class="line"><span style="color:#24292E;">        h </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> oel.x </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> el.y </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> el.x </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> oel.y</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseInt</span><span style="color:#24292E;">(Math.</span><span style="color:#6F42C1;">abs</span><span style="color:#24292E;">(h).</span><span style="color:#6F42C1;">toFixed</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span></code></pre></div></li></ul></li><li><p>无法理解部分代码作用</p><ul><li><p>位置点二次类型校验，暂时无法理解that.HkScrViewer.scene.pick(px)代码含义，（后面有时间再尝试理解）</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 拾取位置点</span></span>
<span class="line"><span style="color:#6A737D;">   * 判断是否在3dtiles模型上 / 是其他terrainProvider / 还是EllipsoidTerrainProvider上， 最后不同的点位拾取</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Object}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">px</span><span style="color:#6A737D;"> 屏幕坐标</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{Object}</span><span style="color:#6A737D;"> Cartesian3 三维坐标</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">HkScrGetCatesian3FromPX</span><span style="color:#E1E4E8;">(px:any) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> that </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (px) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">picks</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> that.HkScrViewer.scene.</span><span style="color:#B392F0;">drillPick</span><span style="color:#E1E4E8;">(px)</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> cartesian </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> isOn3dtiles, isOnTerrain </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> picks) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> pick </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> picks[i]</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (pick </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> pick.primitive </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Cesium</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Cesium3DTileFeature</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> pick </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> pick.primitive </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Cesium</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Cesium3DTileset</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> pick </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> pick.primitive </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Cesium</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">Model</span><span style="color:#E1E4E8;">) { </span><span style="color:#6A737D;">//单个gltf 或者 glb模型上拾取</span></span>
<span class="line"><span style="color:#E1E4E8;">          isOn3dtiles </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (isOn3dtiles) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;">//位置点在3dtiles上</span></span>
<span class="line"><span style="color:#E1E4E8;">          that.HkScrViewer.scene.</span><span style="color:#B392F0;">pick</span><span style="color:#E1E4E8;">(px)</span></span>
<span class="line"><span style="color:#E1E4E8;">          cartesian </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> that.HkScrViewer.scene.</span><span style="color:#B392F0;">pickPosition</span><span style="color:#E1E4E8;">(px);</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (cartesian) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> cartographic </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Cesium.Cartographic.</span><span style="color:#B392F0;">fromCartesian</span><span style="color:#E1E4E8;">(cartesian);</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (cartographic.height </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) cartographic.height </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> lon </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Cesium.Math.</span><span style="color:#B392F0;">toDegrees</span><span style="color:#E1E4E8;">(cartographic.longitude)</span></span>
<span class="line"><span style="color:#E1E4E8;">              , lat </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Cesium.Math.</span><span style="color:#B392F0;">toDegrees</span><span style="color:#E1E4E8;">(cartographic.latitude)</span></span>
<span class="line"><span style="color:#E1E4E8;">              , height </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cartographic.height;</span></span>
<span class="line"><span style="color:#E1E4E8;">            cartesian </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> that.</span><span style="color:#B392F0;">HkScrTransformWGS84ToCartesian</span><span style="color:#E1E4E8;">({ lng: lon, lat: lat, alt: height },lat)</span></span>
<span class="line"><span style="color:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> boolTerrain </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> that.HkScrViewer.terrainProvider </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Cesium</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">EllipsoidTerrainProvider</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">isOn3dtiles </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">boolTerrain) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//位置点在其他terrainProvider上</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ray</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> that.HkScrViewer.scene.camera.</span><span style="color:#B392F0;">getPickRay</span><span style="color:#E1E4E8;">(px);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">ray) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        cartesian </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> that.HkScrViewer.scene.globe.</span><span style="color:#B392F0;">pick</span><span style="color:#E1E4E8;">(ray, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.HkScrViewer.scene);</span></span>
<span class="line"><span style="color:#E1E4E8;">        isOnTerrain </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">isOn3dtiles </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">isOnTerrain </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> boolTerrain) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">//位置点在EllipsoidTerrainProvider上</span></span>
<span class="line"><span style="color:#E1E4E8;">        cartesian </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> that.HkScrViewer.scene.camera.</span><span style="color:#B392F0;">pickEllipsoid</span><span style="color:#E1E4E8;">(px, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.HkScrViewer.scene.globe.ellipsoid);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (cartesian) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> position </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> that.</span><span style="color:#B392F0;">HkScrTransformCartesianToWGS84</span><span style="color:#E1E4E8;">(cartesian)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (position </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> position.alt </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          cartesian </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> that.</span><span style="color:#B392F0;">HkScrTransformWGS84ToCartesian</span><span style="color:#E1E4E8;">(position, </span><span style="color:#79B8FF;">0.1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> cartesian;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">   * 拾取位置点</span></span>
<span class="line"><span style="color:#6A737D;">   * 判断是否在3dtiles模型上 / 是其他terrainProvider / 还是EllipsoidTerrainProvider上， 最后不同的点位拾取</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Object}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">px</span><span style="color:#6A737D;"> 屏幕坐标</span></span>
<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{Object}</span><span style="color:#6A737D;"> Cartesian3 三维坐标</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">HkScrGetCatesian3FromPX</span><span style="color:#24292E;">(px:any) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> that </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (px) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">picks</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> that.HkScrViewer.scene.</span><span style="color:#6F42C1;">drillPick</span><span style="color:#24292E;">(px)</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> cartesian </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> isOn3dtiles, isOnTerrain </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> picks) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> pick </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> picks[i]</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (pick </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> pick.primitive </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Cesium</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Cesium3DTileFeature</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> pick </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> pick.primitive </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Cesium</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Cesium3DTileset</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> pick </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> pick.primitive </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Cesium</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">Model</span><span style="color:#24292E;">) { </span><span style="color:#6A737D;">//单个gltf 或者 glb模型上拾取</span></span>
<span class="line"><span style="color:#24292E;">          isOn3dtiles </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (isOn3dtiles) {</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">//位置点在3dtiles上</span></span>
<span class="line"><span style="color:#24292E;">          that.HkScrViewer.scene.</span><span style="color:#6F42C1;">pick</span><span style="color:#24292E;">(px)</span></span>
<span class="line"><span style="color:#24292E;">          cartesian </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> that.HkScrViewer.scene.</span><span style="color:#6F42C1;">pickPosition</span><span style="color:#24292E;">(px);</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (cartesian) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> cartographic </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Cesium.Cartographic.</span><span style="color:#6F42C1;">fromCartesian</span><span style="color:#24292E;">(cartesian);</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (cartographic.height </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) cartographic.height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> lon </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Cesium.Math.</span><span style="color:#6F42C1;">toDegrees</span><span style="color:#24292E;">(cartographic.longitude)</span></span>
<span class="line"><span style="color:#24292E;">              , lat </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Cesium.Math.</span><span style="color:#6F42C1;">toDegrees</span><span style="color:#24292E;">(cartographic.latitude)</span></span>
<span class="line"><span style="color:#24292E;">              , height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cartographic.height;</span></span>
<span class="line"><span style="color:#24292E;">            cartesian </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> that.</span><span style="color:#6F42C1;">HkScrTransformWGS84ToCartesian</span><span style="color:#24292E;">({ lng: lon, lat: lat, alt: height },lat)</span></span>
<span class="line"><span style="color:#24292E;">          }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> boolTerrain </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> that.HkScrViewer.terrainProvider </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Cesium</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">EllipsoidTerrainProvider</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">isOn3dtiles </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">boolTerrain) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//位置点在其他terrainProvider上</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ray</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> that.HkScrViewer.scene.camera.</span><span style="color:#6F42C1;">getPickRay</span><span style="color:#24292E;">(px);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">ray) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        cartesian </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> that.HkScrViewer.scene.globe.</span><span style="color:#6F42C1;">pick</span><span style="color:#24292E;">(ray, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.HkScrViewer.scene);</span></span>
<span class="line"><span style="color:#24292E;">        isOnTerrain </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">isOn3dtiles </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;">isOnTerrain </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> boolTerrain) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">//位置点在EllipsoidTerrainProvider上</span></span>
<span class="line"><span style="color:#24292E;">        cartesian </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> that.HkScrViewer.scene.camera.</span><span style="color:#6F42C1;">pickEllipsoid</span><span style="color:#24292E;">(px, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.HkScrViewer.scene.globe.ellipsoid);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (cartesian) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> position </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> that.</span><span style="color:#6F42C1;">HkScrTransformCartesianToWGS84</span><span style="color:#24292E;">(cartesian)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (position </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> position.alt </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">          cartesian </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> that.</span><span style="color:#6F42C1;">HkScrTransformWGS84ToCartesian</span><span style="color:#24292E;">(position, </span><span style="color:#005CC5;">0.1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> cartesian;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span></code></pre></div></li></ul></li></ol>`,6),e=[o];function t(c,r,E,y,i,F){return n(),a("div",null,e)}const d=s(l,[["render",t]]);export{C as __pageData,d as default};
