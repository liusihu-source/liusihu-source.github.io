import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.a7175731.js";const p="/assets/image-20221105163155285.b97e917a.png",o="/assets/image-20221106145314947.f6848d9f.png",e="/assets/image-20221106142436123.b3c0757c.png",t="/assets/image-20221106142504364.f2225747.png",r="/assets/image-20221106142517637.e6d6cef8.png",c="/assets/image-20221106142526421.d29e8e88.png",g=JSON.parse('{"title":"Osgeo(Gdal3.4.3) --笔记","description":"","frontmatter":{},"headers":[],"relativePath":"python/Osgeo.md","filePath":"python/Osgeo.md","lastUpdated":null}'),y={name:"python/Osgeo.md"},E=l('<h1 id="osgeo-gdal3-4-3-笔记" tabindex="-1">Osgeo(Gdal3.4.3) --笔记 <a class="header-anchor" href="#osgeo-gdal3-4-3-笔记" aria-label="Permalink to &quot;Osgeo(Gdal3.4.3) --笔记&quot;">​</a></h1><blockquote><p>osgeo: gdal + ogr</p><p>具体再需要确定什么去官网 <a href="https://gdal.org/" target="_blank" rel="noreferrer">https://gdal.org/</a></p></blockquote><p><img src="'+p+'" alt="image-20221105163155285"></p><p><img src="'+o+`" alt="image-20221106145314947"></p><h2 id="一、gdal" tabindex="-1">一、gdal <a class="header-anchor" href="#一、gdal" aria-label="Permalink to &quot;一、gdal&quot;">​</a></h2><h3 id="_1-打开栅格数据集" tabindex="-1">1.打开栅格数据集 <a class="header-anchor" href="#_1-打开栅格数据集" aria-label="Permalink to &quot;1.打开栅格数据集&quot;">​</a></h3><ul><li><p>Rasterdataset = ‘geotiff.tif’</p></li><li><p>Datasource = <strong>gdal.Open</strong>(RasterDataset)</p><ul><li>rasterDataset:栅格数据所在路径及栅格数据名称</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">设置栅格配置信息</span></span>
<span class="line"><span style="color:#9ECBFF;">@DriverName：具体的驱动类型</span></span>
<span class="line"><span style="color:#9ECBFF;">@source：栅格数据的路径</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setRasterConfig</span><span style="color:#E1E4E8;">(DriverName, source):</span></span>
<span class="line"><span style="color:#E1E4E8;">    driver </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gdal.GetDriverByName(DriverName)</span><span style="color:#6A737D;">#设置驱动</span></span>
<span class="line"><span style="color:#E1E4E8;">    dataSource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gdal.Open(source)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> dataSource</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">读取栅格信息</span></span>
<span class="line"><span style="color:#9ECBFF;">@RasterObject:已经得到的栅格数据集对象</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">readRaster</span><span style="color:#E1E4E8;">(RasterObject):</span></span>
<span class="line"><span style="color:#E1E4E8;">    xRowNum </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> RasterObject.RasterXSize</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;栅格数据x方向的像素数&quot;</span><span style="color:#E1E4E8;"> , xRowNum , </span><span style="color:#9ECBFF;">&quot;return索引值为0&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    yRowNum </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> RasterObject.RasterYSize</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;栅格数据y方向的像素数&quot;</span><span style="color:#E1E4E8;"> , yRowNum , </span><span style="color:#9ECBFF;">&quot;return索引值为1&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    bandCountNum </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> RasterObject.RasterCount</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;栅格数据的波段数（块）&quot;</span><span style="color:#E1E4E8;"> , bandCountNum , </span><span style="color:#9ECBFF;">&quot;return索引值为2&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    rasProjection </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> RasterObject.GetProjection()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;获取栅格数据的坐标信息&quot;</span><span style="color:#E1E4E8;"> , rasProjection , </span><span style="color:#9ECBFF;">&quot;return索引值为3&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    rasSixList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> RasterObject.GetGeoTransform()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;列表信息六参数&quot;</span><span style="color:#E1E4E8;"> , rasSixList , </span><span style="color:#9ECBFF;">&quot;return索引值为4&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    band_arr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> RasterObject.GetRasterBand(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">).ReadAsArray()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;这里我们测试波段一，共有7个波段&quot;</span><span style="color:#E1E4E8;"> , band_arr , </span><span style="color:#9ECBFF;">&quot;return索引值为5&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    sub_band </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> RasterObject.GetRasterBand(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">).ReadAsArray(</span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">600</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;第400列，600行，10 * 10格子&quot;</span><span style="color:#E1E4E8;"> , sub_band , </span><span style="color:#9ECBFF;">&quot;return索引值为6&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> xRowNum,yRowNum,bandCountNum,rasProjection,rasSixList,band_arr,sub_band</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    tifpath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;D:/data/python/gdal/image/&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    outpath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tifpath </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;/&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;outPutImage/exampleOne&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    tifname </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;enter_union.tif&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    readResult </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> setRasterConfig(</span><span style="color:#9ECBFF;">&#39;GTiff&#39;</span><span style="color:#E1E4E8;">, tifpath </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> tifname)</span></span>
<span class="line"><span style="color:#E1E4E8;">    readRaster(readResult)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">设置栅格配置信息</span></span>
<span class="line"><span style="color:#032F62;">@DriverName：具体的驱动类型</span></span>
<span class="line"><span style="color:#032F62;">@source：栅格数据的路径</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setRasterConfig</span><span style="color:#24292E;">(DriverName, source):</span></span>
<span class="line"><span style="color:#24292E;">    driver </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gdal.GetDriverByName(DriverName)</span><span style="color:#6A737D;">#设置驱动</span></span>
<span class="line"><span style="color:#24292E;">    dataSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gdal.Open(source)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> dataSource</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">读取栅格信息</span></span>
<span class="line"><span style="color:#032F62;">@RasterObject:已经得到的栅格数据集对象</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">readRaster</span><span style="color:#24292E;">(RasterObject):</span></span>
<span class="line"><span style="color:#24292E;">    xRowNum </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> RasterObject.RasterXSize</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;栅格数据x方向的像素数&quot;</span><span style="color:#24292E;"> , xRowNum , </span><span style="color:#032F62;">&quot;return索引值为0&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    yRowNum </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> RasterObject.RasterYSize</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;栅格数据y方向的像素数&quot;</span><span style="color:#24292E;"> , yRowNum , </span><span style="color:#032F62;">&quot;return索引值为1&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    bandCountNum </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> RasterObject.RasterCount</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;栅格数据的波段数（块）&quot;</span><span style="color:#24292E;"> , bandCountNum , </span><span style="color:#032F62;">&quot;return索引值为2&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    rasProjection </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> RasterObject.GetProjection()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;获取栅格数据的坐标信息&quot;</span><span style="color:#24292E;"> , rasProjection , </span><span style="color:#032F62;">&quot;return索引值为3&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    rasSixList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> RasterObject.GetGeoTransform()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;列表信息六参数&quot;</span><span style="color:#24292E;"> , rasSixList , </span><span style="color:#032F62;">&quot;return索引值为4&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    band_arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> RasterObject.GetRasterBand(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">).ReadAsArray()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;这里我们测试波段一，共有7个波段&quot;</span><span style="color:#24292E;"> , band_arr , </span><span style="color:#032F62;">&quot;return索引值为5&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    sub_band </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> RasterObject.GetRasterBand(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">).ReadAsArray(</span><span style="color:#005CC5;">400</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">600</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;第400列，600行，10 * 10格子&quot;</span><span style="color:#24292E;"> , sub_band , </span><span style="color:#032F62;">&quot;return索引值为6&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> xRowNum,yRowNum,bandCountNum,rasProjection,rasSixList,band_arr,sub_band</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    tifpath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;D:/data/python/gdal/image/&#39;</span></span>
<span class="line"><span style="color:#24292E;">    outpath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tifpath </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;outPutImage/exampleOne&#39;</span></span>
<span class="line"><span style="color:#24292E;">    tifname </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;enter_union.tif&#39;</span></span>
<span class="line"><span style="color:#24292E;">    readResult </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> setRasterConfig(</span><span style="color:#032F62;">&#39;GTiff&#39;</span><span style="color:#24292E;">, tifpath </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> tifname)</span></span>
<span class="line"><span style="color:#24292E;">    readRaster(readResult)</span></span></code></pre></div></li></ul><h3 id="_2-查看栅格数据集的信息" tabindex="-1">2.查看栅格数据集的信息 <a class="header-anchor" href="#_2-查看栅格数据集的信息" aria-label="Permalink to &quot;2.查看栅格数据集的信息&quot;">​</a></h3><ul><li><p>Datasource.RasterXsize:栅格数据x方向的像素数</p></li><li><p>Datasource.RasterYsize:栅格数据y方向的像素数</p></li><li><p>Datasource.RasterCount:栅格数据的波段数（块）</p></li><li><p>Datasource.<strong>GetProjection</strong>()：获取栅格数据的坐标信息</p></li><li><p>Geoinfo <strong>=</strong> **datasource.**GetGeoTransform() //得到六参数信息</p><ul><li><p>返回的Geoinfo是一个列表(list)</p><ul><li>0：原点的X坐标</li><li>1：像素宽度，pixelwidth</li><li>2：x像素旋转（0°，正北向）</li><li>3.原点的Y坐标</li><li>4.y像素旋转（0°，正北向）</li><li>5.像素高度（负值）,pixelheight</li></ul></li><li><p>某一坐标对应像素的**相对位置（pixel,offset),即改坐标与左上角的相对位置</p><p>xOffset = int(x-originX)/PixelWidth</p><p>yOffset = int(y-originY)/PixelHeight</p></li></ul></li></ul><h3 id="_3-查看单波段信息" tabindex="-1">3.查看单波段信息 <a class="header-anchor" href="#_3-查看单波段信息" aria-label="Permalink to &quot;3.查看单波段信息&quot;">​</a></h3><ul><li><p>Band = datasource.<strong>GetRasterBand</strong>(index):获取指定索引的波段</p><ul><li>Band.Xsize：某波段的x方向的像素数</li><li>Band.Ysize:某波段的y方向的像素数</li><li>Band.GetNoDataValue:NoData的值</li><li>Band.GetMaximum()：最大值</li><li>Band.GetMinimum()：最小值</li><li>Band.GetMetadata()：元数据</li><li>Band.ComputeRasterMinMax()：最大最小值</li></ul></li><li><p>读取波段某位置数值信息</p><ul><li><p><strong>Band.ReadAsArray</strong>([xoff],[yoff],[win_xsize],[win_ysize],[buf_xsize],[buf_ysize],[buf_obj])</p><ul><li>Xoff:列的起点，默认为0</li><li>Yoff:行的起点，默认为0</li><li>Win_xsize:要读取得列数，默认读取所有列</li><li>Win_ysize:要读取得行数，默认读取所有行</li><li>Buf_xsize:输出数组的列数，默认等于win_xsize,不等于数据将会重采样</li><li>Buf_ysize:输出数组的行数，默认等于win_ysize,不等于数据将会重采样</li><li>Buf_obj:存放数组，不同于numpy数组</li></ul></li><li><p>读取某个像素：ReadRasterAsArray(xoff,yoff,1,1):读取1*1矩阵</p><p>读取所有像素：ReadRasterAsArray(0,0,cols,rows)：读取cols*rows矩阵</p></li></ul></li></ul><h3 id="_4-创建一个栅格数据集" tabindex="-1">4.创建一个栅格数据集 <a class="header-anchor" href="#_4-创建一个栅格数据集" aria-label="Permalink to &quot;4.创建一个栅格数据集&quot;">​</a></h3><ul><li><strong>outRaster=Driver.Create</strong>(filename,xsize,ysize,[bands],[data_type],[options]) <ul><li>Filename:创建的栅格数据集路径</li><li>Xsize：创建的栅格数据集的行数</li><li>Ysize:创建的栅格数据集的列数</li><li>Bands：创建的栅格数据集的波段数，默认为1</li><li>Data_type:存储在创建的栅格数据集中的数据类型，默认是GDT_Byte</li><li>Options:字符串列表，基于所创建的数据集的类型</li></ul></li><li>outRaster.SetProjection(prjinfo) #设置地理坐标信息</li><li>outRaster.SetGeoTransform(geoinfo) #设置六参数信息</li><li>outband = outRaster.GetRasterBand(<strong>index</strong>) <ul><li>OutRaster:新建的单波段或多波段栅格数据集</li><li>Index:新建的单波段或多波段的波段索引号</li></ul></li><li>outband.WriteArray(bandArray) <ul><li>bandArray:待写入的栅格数组，栅格数组写入outband</li><li>FlushCache():把缓存数据写入磁盘</li></ul></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env python</span></span>
<span class="line"><span style="color:#6A737D;"># _*_ coding:utf-8 _*_</span></span>
<span class="line"><span style="color:#E1E4E8;">__author__ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;SmallTiger&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> osgeo </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> gdal</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">设置栅格配置信息</span></span>
<span class="line"><span style="color:#9ECBFF;">@DriverName：具体的驱动类型</span></span>
<span class="line"><span style="color:#9ECBFF;">@source：栅格数据的路径</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setRasterConfig</span><span style="color:#E1E4E8;">(DriverName, source):</span></span>
<span class="line"><span style="color:#E1E4E8;">    driver </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gdal.GetDriverByName(DriverName)</span><span style="color:#6A737D;">#设置驱动</span></span>
<span class="line"><span style="color:#E1E4E8;">    dataSource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gdal.Open(source)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> dataSource</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">导出单个波段栅格影像</span></span>
<span class="line"><span style="color:#9ECBFF;">@RasterObject：数据集对象</span></span>
<span class="line"><span style="color:#9ECBFF;">@outPath：输出路径</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">exportSingleRaster</span><span style="color:#E1E4E8;">(RasterObject,outPath):</span></span>
<span class="line"><span style="color:#E1E4E8;">    bandCount </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> RasterObject.RasterCount  </span><span style="color:#6A737D;">#波段数</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">range</span><span style="color:#E1E4E8;">(bandCount):</span></span>
<span class="line"><span style="color:#E1E4E8;">        band </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> RasterObject.GetRasterBand(i</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#读取第一波段</span></span>
<span class="line"><span style="color:#E1E4E8;">        band_arr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> band.ReadAsArray()</span><span style="color:#6A737D;">#读取二维数组</span></span>
<span class="line"><span style="color:#E1E4E8;">        gtiffDriver </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gdal.GetDriverByName(</span><span style="color:#9ECBFF;">&#39;GTiff&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        outPutImage </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gtiffDriver.Create(outPath </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/exmaple&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(i</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Result.tif&#39;</span><span style="color:#E1E4E8;">, \\</span></span>
<span class="line"><span style="color:#E1E4E8;">                                         band.XSize, band.YSize, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, band.DataType)</span><span style="color:#6A737D;">#创建tif</span></span>
<span class="line"><span style="color:#E1E4E8;">        outPutImage.SetProjection(RasterObject.GetProjection())</span><span style="color:#6A737D;">#设置坐标系</span></span>
<span class="line"><span style="color:#E1E4E8;">        outPutImage.SetGeoTransform(RasterObject.GetGeoTransform())</span><span style="color:#6A737D;">#设置六参数</span></span>
<span class="line"><span style="color:#E1E4E8;">        outband </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> outPutImage.GetRasterBand(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#创建第一波段</span></span>
<span class="line"><span style="color:#E1E4E8;">        outband.WriteArray(band_arr)</span><span style="color:#6A737D;">#写入数组</span></span>
<span class="line"><span style="color:#E1E4E8;">        outPutImage.FlushCache()</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">del</span><span style="color:#E1E4E8;"> outPutImage</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    tifpath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/images&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    outpath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tifpath </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;/&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;outPutImage/exampleTwo&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    tifname </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;union1234567.tif&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    readResult </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> setRasterConfig(</span><span style="color:#9ECBFF;">&#39;GTiff&#39;</span><span style="color:#E1E4E8;">,tifpath </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;/unionResult/&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> tifname)</span></span>
<span class="line"><span style="color:#E1E4E8;">    exportSingleRaster(readResult,outpath)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env python</span></span>
<span class="line"><span style="color:#6A737D;"># _*_ coding:utf-8 _*_</span></span>
<span class="line"><span style="color:#24292E;">__author__ </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;SmallTiger&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> osgeo </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> gdal</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">设置栅格配置信息</span></span>
<span class="line"><span style="color:#032F62;">@DriverName：具体的驱动类型</span></span>
<span class="line"><span style="color:#032F62;">@source：栅格数据的路径</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setRasterConfig</span><span style="color:#24292E;">(DriverName, source):</span></span>
<span class="line"><span style="color:#24292E;">    driver </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gdal.GetDriverByName(DriverName)</span><span style="color:#6A737D;">#设置驱动</span></span>
<span class="line"><span style="color:#24292E;">    dataSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gdal.Open(source)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> dataSource</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">导出单个波段栅格影像</span></span>
<span class="line"><span style="color:#032F62;">@RasterObject：数据集对象</span></span>
<span class="line"><span style="color:#032F62;">@outPath：输出路径</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">exportSingleRaster</span><span style="color:#24292E;">(RasterObject,outPath):</span></span>
<span class="line"><span style="color:#24292E;">    bandCount </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> RasterObject.RasterCount  </span><span style="color:#6A737D;">#波段数</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(bandCount):</span></span>
<span class="line"><span style="color:#24292E;">        band </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> RasterObject.GetRasterBand(i</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#读取第一波段</span></span>
<span class="line"><span style="color:#24292E;">        band_arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> band.ReadAsArray()</span><span style="color:#6A737D;">#读取二维数组</span></span>
<span class="line"><span style="color:#24292E;">        gtiffDriver </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gdal.GetDriverByName(</span><span style="color:#032F62;">&#39;GTiff&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        outPutImage </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gtiffDriver.Create(outPath </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/exmaple&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(i</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Result.tif&#39;</span><span style="color:#24292E;">, \\</span></span>
<span class="line"><span style="color:#24292E;">                                         band.XSize, band.YSize, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, band.DataType)</span><span style="color:#6A737D;">#创建tif</span></span>
<span class="line"><span style="color:#24292E;">        outPutImage.SetProjection(RasterObject.GetProjection())</span><span style="color:#6A737D;">#设置坐标系</span></span>
<span class="line"><span style="color:#24292E;">        outPutImage.SetGeoTransform(RasterObject.GetGeoTransform())</span><span style="color:#6A737D;">#设置六参数</span></span>
<span class="line"><span style="color:#24292E;">        outband </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> outPutImage.GetRasterBand(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#创建第一波段</span></span>
<span class="line"><span style="color:#24292E;">        outband.WriteArray(band_arr)</span><span style="color:#6A737D;">#写入数组</span></span>
<span class="line"><span style="color:#24292E;">        outPutImage.FlushCache()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">del</span><span style="color:#24292E;"> outPutImage</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    tifpath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/images&#39;</span></span>
<span class="line"><span style="color:#24292E;">    outpath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tifpath </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;outPutImage/exampleTwo&#39;</span></span>
<span class="line"><span style="color:#24292E;">    tifname </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;union1234567.tif&#39;</span></span>
<span class="line"><span style="color:#24292E;">    readResult </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> setRasterConfig(</span><span style="color:#032F62;">&#39;GTiff&#39;</span><span style="color:#24292E;">,tifpath </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/unionResult/&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> tifname)</span></span>
<span class="line"><span style="color:#24292E;">    exportSingleRaster(readResult,outpath)</span></span></code></pre></div><h3 id="_5-矢量边界裁剪-掩膜提取" tabindex="-1">5.矢量边界裁剪（掩膜提取） <a class="header-anchor" href="#_5-矢量边界裁剪-掩膜提取" aria-label="Permalink to &quot;5.矢量边界裁剪（掩膜提取）&quot;">​</a></h3><ul><li>gdal.<strong>Warp</strong>(outTif,originRaster,format,cutlineDSName) <ul><li>outTif:剪裁后的栅格数据</li><li>originRaster：待剪裁的栅格数据</li><li>Format:栅格数据类型</li><li>cutlineDSName:矢量边界</li></ul></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env python</span></span>
<span class="line"><span style="color:#6A737D;"># _*_ coding:utf-8 _*_</span></span>
<span class="line"><span style="color:#E1E4E8;">__author__ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;SmallTiger&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> osgeo </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> gdal</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">裁剪栅格</span></span>
<span class="line"><span style="color:#9ECBFF;">@outPut：输出裁剪结果影像的路径</span></span>
<span class="line"><span style="color:#9ECBFF;">@intPut：被裁减的原始影像</span></span>
<span class="line"><span style="color:#9ECBFF;">@Geoformat：栅格数据类型</span></span>
<span class="line"><span style="color:#9ECBFF;">@featureShp：矢量图层</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ClipRaster</span><span style="color:#E1E4E8;">(outPut, intPut, Geoformat, featureShp):</span></span>
<span class="line"><span style="color:#E1E4E8;">    source </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gdal.Open(intPut)</span></span>
<span class="line"><span style="color:#E1E4E8;">    ClipProcess </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gdal.Warp(outPut, \\</span></span>
<span class="line"><span style="color:#E1E4E8;">                            source, \\</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#FFAB70;">format</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Geoformat, \\</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#FFAB70;">cutlineDSName</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> featureShp, \\</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#FFAB70;">cropToCutline</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#wrap是裁剪命令具体参数意思见前边</span></span>
<span class="line"><span style="color:#E1E4E8;">    ClipProcess.FlushCache()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">del</span><span style="color:#E1E4E8;"> ClipProcess</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    tifpath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleTwo/exmaple1Result.tif&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    outpath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleFive/ClipResRaster.tif&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    ClipShp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/images/clip.shp&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    ClipRaster(outpath,tifpath,</span><span style="color:#9ECBFF;">&#39;GTiff&#39;</span><span style="color:#E1E4E8;">,ClipShp)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env python</span></span>
<span class="line"><span style="color:#6A737D;"># _*_ coding:utf-8 _*_</span></span>
<span class="line"><span style="color:#24292E;">__author__ </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;SmallTiger&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> osgeo </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> gdal</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">裁剪栅格</span></span>
<span class="line"><span style="color:#032F62;">@outPut：输出裁剪结果影像的路径</span></span>
<span class="line"><span style="color:#032F62;">@intPut：被裁减的原始影像</span></span>
<span class="line"><span style="color:#032F62;">@Geoformat：栅格数据类型</span></span>
<span class="line"><span style="color:#032F62;">@featureShp：矢量图层</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ClipRaster</span><span style="color:#24292E;">(outPut, intPut, Geoformat, featureShp):</span></span>
<span class="line"><span style="color:#24292E;">    source </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gdal.Open(intPut)</span></span>
<span class="line"><span style="color:#24292E;">    ClipProcess </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gdal.Warp(outPut, \\</span></span>
<span class="line"><span style="color:#24292E;">                            source, \\</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#E36209;">format</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Geoformat, \\</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#E36209;">cutlineDSName</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> featureShp, \\</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#E36209;">cropToCutline</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#wrap是裁剪命令具体参数意思见前边</span></span>
<span class="line"><span style="color:#24292E;">    ClipProcess.FlushCache()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">del</span><span style="color:#24292E;"> ClipProcess</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    tifpath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleTwo/exmaple1Result.tif&#39;</span></span>
<span class="line"><span style="color:#24292E;">    outpath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleFive/ClipResRaster.tif&#39;</span></span>
<span class="line"><span style="color:#24292E;">    ClipShp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/images/clip.shp&#39;</span></span>
<span class="line"><span style="color:#24292E;">    ClipRaster(outpath,tifpath,</span><span style="color:#032F62;">&#39;GTiff&#39;</span><span style="color:#24292E;">,ClipShp)</span></span></code></pre></div><h3 id="_6-坐标转换" tabindex="-1">6.坐标转换 <a class="header-anchor" href="#_6-坐标转换" aria-label="Permalink to &quot;6.坐标转换&quot;">​</a></h3><ul><li><p>import osr：导入osr模块</p></li><li><p>srs = osr.SpatialReference():创建一个空间参考对象</p></li><li><p>srs.ImportFromEPSG(Index)：根据EPSG的索引编号获取空间坐标信息</p></li><li><p>srs.ExportToWkt()：空间坐标信息导出为WKT格式</p></li><li><p>Gdal.warp(outtif,intif,format,srcSRS,dstSRS)</p><ul><li>Outtif:输出的数据</li><li>Intif:原始数据</li><li>Format:数据格式</li><li>srcSRS:原始数据空间坐标信息</li><li>dstSRS:输出数据空间坐标信息</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env python</span></span>
<span class="line"><span style="color:#6A737D;"># _*_ coding:utf-8 _*_</span></span>
<span class="line"><span style="color:#E1E4E8;">__author__ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;SmallTiger&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> osgeo </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> osr</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> osgeo </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> gdal</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#source 要被读取的数据源</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">returnSrcPro</span><span style="color:#E1E4E8;">(source):</span></span>
<span class="line"><span style="color:#E1E4E8;">    dataSource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gdal.Open(source)</span><span style="color:#6A737D;">#读取数据源</span></span>
<span class="line"><span style="color:#E1E4E8;">    dataSourcePro </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dataSource.GetProjection()</span><span style="color:#6A737D;">#读取做消息</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> dataSource,dataSourcePro</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#proNumber EPSG的索引编号，用来获取空间坐标信息</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">returnOutPrj</span><span style="color:#E1E4E8;">(proNumber):</span></span>
<span class="line"><span style="color:#E1E4E8;">    resPro </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> osr.SpatialReference()</span><span style="color:#6A737D;">#创建一个空间参考对象</span></span>
<span class="line"><span style="color:#E1E4E8;">    resPro.ImportFromEPSG(proNumber)</span><span style="color:#6A737D;">#这是个CGCS2000</span></span>
<span class="line"><span style="color:#E1E4E8;">    cgcs2000 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> resPro.ExportToWkt()</span><span style="color:#6A737D;">#转wkt格式</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> cgcs2000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">转换原始影像坐标系</span></span>
<span class="line"><span style="color:#9ECBFF;">@outTif：输出的文件</span></span>
<span class="line"><span style="color:#9ECBFF;">@oriDataSou：原始影像数据集</span></span>
<span class="line"><span style="color:#9ECBFF;">@format：驱动类型</span></span>
<span class="line"><span style="color:#9ECBFF;">@oriDataPro：原始影像坐标系</span></span>
<span class="line"><span style="color:#9ECBFF;">@resPro：输出文件的坐标系</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">transPro</span><span style="color:#E1E4E8;">(outTif,oriDataSou,format,oriDataPro,resPro):</span></span>
<span class="line"><span style="color:#E1E4E8;">    gdal.Warp(outTif,oriDataSou,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#FFAB70;">format</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">format</span><span style="color:#E1E4E8;">,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#FFAB70;">srcSRS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> oriDataPro, \\</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#FFAB70;">dstSRS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> resPro)</span><span style="color:#6A737D;">#裁剪</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    intif </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleEight/exmaple1Result.tif&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    outTif </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleEight/exmaple2Result.tif&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    dataOri </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> returnSrcPro(intif)</span></span>
<span class="line"><span style="color:#E1E4E8;">    resPrj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> returnOutPrj(</span><span style="color:#79B8FF;">4527</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    transPro(outTif,dataOri[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">],</span><span style="color:#9ECBFF;">&#39;GTiff&#39;</span><span style="color:#E1E4E8;">,dataOri[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">],resPrj)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env python</span></span>
<span class="line"><span style="color:#6A737D;"># _*_ coding:utf-8 _*_</span></span>
<span class="line"><span style="color:#24292E;">__author__ </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;SmallTiger&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> osgeo </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> osr</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> osgeo </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> gdal</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#source 要被读取的数据源</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">returnSrcPro</span><span style="color:#24292E;">(source):</span></span>
<span class="line"><span style="color:#24292E;">    dataSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gdal.Open(source)</span><span style="color:#6A737D;">#读取数据源</span></span>
<span class="line"><span style="color:#24292E;">    dataSourcePro </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dataSource.GetProjection()</span><span style="color:#6A737D;">#读取做消息</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> dataSource,dataSourcePro</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#proNumber EPSG的索引编号，用来获取空间坐标信息</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">returnOutPrj</span><span style="color:#24292E;">(proNumber):</span></span>
<span class="line"><span style="color:#24292E;">    resPro </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> osr.SpatialReference()</span><span style="color:#6A737D;">#创建一个空间参考对象</span></span>
<span class="line"><span style="color:#24292E;">    resPro.ImportFromEPSG(proNumber)</span><span style="color:#6A737D;">#这是个CGCS2000</span></span>
<span class="line"><span style="color:#24292E;">    cgcs2000 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> resPro.ExportToWkt()</span><span style="color:#6A737D;">#转wkt格式</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> cgcs2000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">转换原始影像坐标系</span></span>
<span class="line"><span style="color:#032F62;">@outTif：输出的文件</span></span>
<span class="line"><span style="color:#032F62;">@oriDataSou：原始影像数据集</span></span>
<span class="line"><span style="color:#032F62;">@format：驱动类型</span></span>
<span class="line"><span style="color:#032F62;">@oriDataPro：原始影像坐标系</span></span>
<span class="line"><span style="color:#032F62;">@resPro：输出文件的坐标系</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">transPro</span><span style="color:#24292E;">(outTif,oriDataSou,format,oriDataPro,resPro):</span></span>
<span class="line"><span style="color:#24292E;">    gdal.Warp(outTif,oriDataSou,\\</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#E36209;">format</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">format</span><span style="color:#24292E;">,\\</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#E36209;">srcSRS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> oriDataPro, \\</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#E36209;">dstSRS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> resPro)</span><span style="color:#6A737D;">#裁剪</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    intif </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleEight/exmaple1Result.tif&#39;</span></span>
<span class="line"><span style="color:#24292E;">    outTif </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleEight/exmaple2Result.tif&#39;</span></span>
<span class="line"><span style="color:#24292E;">    dataOri </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> returnSrcPro(intif)</span></span>
<span class="line"><span style="color:#24292E;">    resPrj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> returnOutPrj(</span><span style="color:#005CC5;">4527</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    transPro(outTif,dataOri[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">],</span><span style="color:#032F62;">&#39;GTiff&#39;</span><span style="color:#24292E;">,dataOri[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">],resPrj)</span></span></code></pre></div></li></ul><h3 id="_7-波段运算-如ndvi" tabindex="-1">7.波段运算（如NDVI） <a class="header-anchor" href="#_7-波段运算-如ndvi" aria-label="Permalink to &quot;7.波段运算（如NDVI）&quot;">​</a></h3><ul><li>Ndvi =（NIR-R）/(NIR+R) <ul><li>NIR:近红外波段</li><li>R：红光波段</li></ul></li><li>Landsat8波段： <ul><li>红光波段： band4</li><li>近红外波段：band5</li></ul></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env python</span></span>
<span class="line"><span style="color:#6A737D;"># _*_ coding:utf-8 _*_</span></span>
<span class="line"><span style="color:#E1E4E8;">__author__ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;SmallTiger&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> osgeo </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> gdal</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#source 原始影像数据源</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">returnOri</span><span style="color:#E1E4E8;">(source):</span></span>
<span class="line"><span style="color:#E1E4E8;">    dataSource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gdal.Open(source)</span><span style="color:#6A737D;">#打开数据源</span></span>
<span class="line"><span style="color:#E1E4E8;">    band4Red </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dataSource.GetRasterBand(</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#读取第四波段</span></span>
<span class="line"><span style="color:#E1E4E8;">    band5Nir </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dataSource.GetRasterBand(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#读取第五波段</span></span>
<span class="line"><span style="color:#E1E4E8;">    red4Array </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> band4Red.ReadAsArray()</span><span style="color:#6A737D;">#读取数组</span></span>
<span class="line"><span style="color:#E1E4E8;">    nir5Array </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> band5Nir.ReadAsArray()</span><span style="color:#6A737D;">#读取数组</span></span>
<span class="line"><span style="color:#E1E4E8;">    resArray </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (nir5Array </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> red4Array)</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">(nir5Array </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> red4Array)</span><span style="color:#6A737D;">#计算ndvi</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> band4Red,dataSource,resArray</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">波段计算--ndvi</span></span>
<span class="line"><span style="color:#9ECBFF;">@format：驱动类型</span></span>
<span class="line"><span style="color:#9ECBFF;">@outTif：输出文件位置及文件名</span></span>
<span class="line"><span style="color:#9ECBFF;">@Xnumber：X方向像素数目</span></span>
<span class="line"><span style="color:#9ECBFF;">@Ynumber：Y方向像素数目</span></span>
<span class="line"><span style="color:#9ECBFF;">@bandNumber：生成影像的波段数目</span></span>
<span class="line"><span style="color:#9ECBFF;">@dataType：生成影像的数据类型</span></span>
<span class="line"><span style="color:#9ECBFF;">@Target：原始影像数据源，为了后面用它的坐标系</span></span>
<span class="line"><span style="color:#9ECBFF;">@BandArray：需要被写入生成影像中的二维数组</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createOutTif</span><span style="color:#E1E4E8;">(format,outTif,Xnumber,Ynumber,bandNumber,dataType,Target,BandArray):</span></span>
<span class="line"><span style="color:#E1E4E8;">    driver </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gdal.GetDriverByName(</span><span style="color:#79B8FF;">format</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    out_tif </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> driver.Create(outTif,Xnumber,Ynumber,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">                            bandNumber,dataType)</span><span style="color:#6A737D;">#创建影像</span></span>
<span class="line"><span style="color:#E1E4E8;">    out_tif.SetProjection(Target.GetProjection())</span><span style="color:#6A737D;">#设置坐标系</span></span>
<span class="line"><span style="color:#E1E4E8;">    out_tif.SetGeoTransform(Target.GetGeoTransform())</span><span style="color:#6A737D;">#设置六参数</span></span>
<span class="line"><span style="color:#E1E4E8;">    outBand </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> out_tif.GetRasterBand(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#创建第一波段</span></span>
<span class="line"><span style="color:#E1E4E8;">    outBand.WriteArray(BandArray)</span><span style="color:#6A737D;">#写入数组</span></span>
<span class="line"><span style="color:#E1E4E8;">    out_tif.FlushCache()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">del</span><span style="color:#E1E4E8;"> out_tif</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    intif </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleNine/union1234567.tif&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    outTif </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleNine/exampleNine.tif&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    dataOri </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> returnOri(intif)</span></span>
<span class="line"><span style="color:#E1E4E8;">    createOutTif(</span><span style="color:#9ECBFF;">&#39;GTiff&#39;</span><span style="color:#E1E4E8;">,outTif,dataOri[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].XSize,dataOri[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">].YSize,\\</span></span>
<span class="line"><span style="color:#E1E4E8;">                 </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,gdal.</span><span style="color:#79B8FF;">GDT_Float32</span><span style="color:#E1E4E8;">,dataOri[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">],dataOri[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env python</span></span>
<span class="line"><span style="color:#6A737D;"># _*_ coding:utf-8 _*_</span></span>
<span class="line"><span style="color:#24292E;">__author__ </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;SmallTiger&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> osgeo </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> gdal</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#source 原始影像数据源</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">returnOri</span><span style="color:#24292E;">(source):</span></span>
<span class="line"><span style="color:#24292E;">    dataSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gdal.Open(source)</span><span style="color:#6A737D;">#打开数据源</span></span>
<span class="line"><span style="color:#24292E;">    band4Red </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dataSource.GetRasterBand(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#读取第四波段</span></span>
<span class="line"><span style="color:#24292E;">    band5Nir </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dataSource.GetRasterBand(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#读取第五波段</span></span>
<span class="line"><span style="color:#24292E;">    red4Array </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> band4Red.ReadAsArray()</span><span style="color:#6A737D;">#读取数组</span></span>
<span class="line"><span style="color:#24292E;">    nir5Array </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> band5Nir.ReadAsArray()</span><span style="color:#6A737D;">#读取数组</span></span>
<span class="line"><span style="color:#24292E;">    resArray </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (nir5Array </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> red4Array)</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">(nir5Array </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> red4Array)</span><span style="color:#6A737D;">#计算ndvi</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> band4Red,dataSource,resArray</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">波段计算--ndvi</span></span>
<span class="line"><span style="color:#032F62;">@format：驱动类型</span></span>
<span class="line"><span style="color:#032F62;">@outTif：输出文件位置及文件名</span></span>
<span class="line"><span style="color:#032F62;">@Xnumber：X方向像素数目</span></span>
<span class="line"><span style="color:#032F62;">@Ynumber：Y方向像素数目</span></span>
<span class="line"><span style="color:#032F62;">@bandNumber：生成影像的波段数目</span></span>
<span class="line"><span style="color:#032F62;">@dataType：生成影像的数据类型</span></span>
<span class="line"><span style="color:#032F62;">@Target：原始影像数据源，为了后面用它的坐标系</span></span>
<span class="line"><span style="color:#032F62;">@BandArray：需要被写入生成影像中的二维数组</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createOutTif</span><span style="color:#24292E;">(format,outTif,Xnumber,Ynumber,bandNumber,dataType,Target,BandArray):</span></span>
<span class="line"><span style="color:#24292E;">    driver </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gdal.GetDriverByName(</span><span style="color:#005CC5;">format</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    out_tif </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> driver.Create(outTif,Xnumber,Ynumber,\\</span></span>
<span class="line"><span style="color:#24292E;">                            bandNumber,dataType)</span><span style="color:#6A737D;">#创建影像</span></span>
<span class="line"><span style="color:#24292E;">    out_tif.SetProjection(Target.GetProjection())</span><span style="color:#6A737D;">#设置坐标系</span></span>
<span class="line"><span style="color:#24292E;">    out_tif.SetGeoTransform(Target.GetGeoTransform())</span><span style="color:#6A737D;">#设置六参数</span></span>
<span class="line"><span style="color:#24292E;">    outBand </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> out_tif.GetRasterBand(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#创建第一波段</span></span>
<span class="line"><span style="color:#24292E;">    outBand.WriteArray(BandArray)</span><span style="color:#6A737D;">#写入数组</span></span>
<span class="line"><span style="color:#24292E;">    out_tif.FlushCache()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">del</span><span style="color:#24292E;"> out_tif</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    intif </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleNine/union1234567.tif&#39;</span></span>
<span class="line"><span style="color:#24292E;">    outTif </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleNine/exampleNine.tif&#39;</span></span>
<span class="line"><span style="color:#24292E;">    dataOri </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> returnOri(intif)</span></span>
<span class="line"><span style="color:#24292E;">    createOutTif(</span><span style="color:#032F62;">&#39;GTiff&#39;</span><span style="color:#24292E;">,outTif,dataOri[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].XSize,dataOri[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].YSize,\\</span></span>
<span class="line"><span style="color:#24292E;">                 </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,gdal.</span><span style="color:#005CC5;">GDT_Float32</span><span style="color:#24292E;">,dataOri[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">],dataOri[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">])</span></span></code></pre></div><h3 id="_8-等高线" tabindex="-1">8.等高线 <a class="header-anchor" href="#_8-等高线" aria-label="Permalink to &quot;8.等高线&quot;">​</a></h3><ul><li>gdal.ContourGenerate(0，1，2，3，4，5，6，7，8，9,10) <ul><li>0：srtBand:dem波段</li><li>1：ContourInterval:等高线间隔的单位距离</li><li>2：ContourBase:等高线起始高度</li><li>3：fixedLevelCount:等高线固定距离（像对于间隔距离）</li><li>4：useNodata：是否使用nodata</li><li>5：noDataValue:nodata的值</li><li>6：dstLayer:输出等高线的矢量图层</li><li>7：idField:shappefile中必须有的dbf文件字段名称，通常为ID</li><li>8:elevField:shapefile中必须有的dbf字段名称，高程值</li><li>9:Callback:回调函数</li><li>10:Callback_data:回调函数值</li></ul></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env python</span></span>
<span class="line"><span style="color:#6A737D;"># _*_ coding:utf-8 _*_</span></span>
<span class="line"><span style="color:#E1E4E8;">__author__ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;SmallTiger&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> osgeo </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> gdal</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> osgeo </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> ogr</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#source 待被读取的原始数据</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">readOriTif</span><span style="color:#E1E4E8;">(source):</span></span>
<span class="line"><span style="color:#E1E4E8;">    datasource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gdal.Open(source)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> datasource</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">生成等高线</span></span>
<span class="line"><span style="color:#9ECBFF;">@format：驱动类型</span></span>
<span class="line"><span style="color:#9ECBFF;">@outShp：输出文件的位置及文件名</span></span>
<span class="line"><span style="color:#9ECBFF;">@shpName：文件名，不包含后缀</span></span>
<span class="line"><span style="color:#9ECBFF;">@dataSource：原始数据的数据集</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CreateConLine</span><span style="color:#E1E4E8;">(format,outShp,shpName,dataSource):</span></span>
<span class="line"><span style="color:#E1E4E8;">    ogr_driver </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ogr.GetDriverByName(</span><span style="color:#79B8FF;">format</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    ogr_ds </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ogr_driver.CreateDataSource(outShp)</span><span style="color:#6A737D;">#创建数据源</span></span>
<span class="line"><span style="color:#E1E4E8;">    ogr_lyr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ogr_ds.CreateLayer(shpName, </span><span style="color:#FFAB70;">geom_type</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">ogr.wkbLineString25D)</span><span style="color:#6A737D;">#创建图层</span></span>
<span class="line"><span style="color:#E1E4E8;">    field_defn </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ogr.FieldDefn(</span><span style="color:#9ECBFF;">&quot;ID&quot;</span><span style="color:#E1E4E8;">, ogr.OFTInteger)</span><span style="color:#6A737D;">#创建属性字段</span></span>
<span class="line"><span style="color:#E1E4E8;">    ogr_lyr.CreateField(field_defn)</span></span>
<span class="line"><span style="color:#E1E4E8;">    field_defn </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ogr.FieldDefn(</span><span style="color:#9ECBFF;">&quot;ELEV&quot;</span><span style="color:#E1E4E8;">, ogr.OFTReal)</span></span>
<span class="line"><span style="color:#E1E4E8;">    ogr_lyr.CreateField(field_defn)</span></span>
<span class="line"><span style="color:#E1E4E8;">    gdal.ContourGenerate(dataSource.GetRasterBand(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">), </span><span style="color:#79B8FF;">3000</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">8100</span><span style="color:#E1E4E8;">, [], </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, ogr_lyr, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#设置等高线的参数信息</span></span>
<span class="line"><span style="color:#E1E4E8;">    ogr_ds </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    intif </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleTen/result.tif&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    shpName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;contour_3000&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    outShp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleTen/&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> shpName </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;.shp&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    dataOri </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> readOriTif(intif)</span></span>
<span class="line"><span style="color:#E1E4E8;">    CreateConLine(</span><span style="color:#9ECBFF;">&#39;ESRI Shapefile&#39;</span><span style="color:#E1E4E8;">,outShp,shpName,dataOri)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env python</span></span>
<span class="line"><span style="color:#6A737D;"># _*_ coding:utf-8 _*_</span></span>
<span class="line"><span style="color:#24292E;">__author__ </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;SmallTiger&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> osgeo </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> gdal</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> osgeo </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> ogr</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#source 待被读取的原始数据</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">readOriTif</span><span style="color:#24292E;">(source):</span></span>
<span class="line"><span style="color:#24292E;">    datasource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gdal.Open(source)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> datasource</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">生成等高线</span></span>
<span class="line"><span style="color:#032F62;">@format：驱动类型</span></span>
<span class="line"><span style="color:#032F62;">@outShp：输出文件的位置及文件名</span></span>
<span class="line"><span style="color:#032F62;">@shpName：文件名，不包含后缀</span></span>
<span class="line"><span style="color:#032F62;">@dataSource：原始数据的数据集</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CreateConLine</span><span style="color:#24292E;">(format,outShp,shpName,dataSource):</span></span>
<span class="line"><span style="color:#24292E;">    ogr_driver </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ogr.GetDriverByName(</span><span style="color:#005CC5;">format</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    ogr_ds </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ogr_driver.CreateDataSource(outShp)</span><span style="color:#6A737D;">#创建数据源</span></span>
<span class="line"><span style="color:#24292E;">    ogr_lyr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ogr_ds.CreateLayer(shpName, </span><span style="color:#E36209;">geom_type</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">ogr.wkbLineString25D)</span><span style="color:#6A737D;">#创建图层</span></span>
<span class="line"><span style="color:#24292E;">    field_defn </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ogr.FieldDefn(</span><span style="color:#032F62;">&quot;ID&quot;</span><span style="color:#24292E;">, ogr.OFTInteger)</span><span style="color:#6A737D;">#创建属性字段</span></span>
<span class="line"><span style="color:#24292E;">    ogr_lyr.CreateField(field_defn)</span></span>
<span class="line"><span style="color:#24292E;">    field_defn </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ogr.FieldDefn(</span><span style="color:#032F62;">&quot;ELEV&quot;</span><span style="color:#24292E;">, ogr.OFTReal)</span></span>
<span class="line"><span style="color:#24292E;">    ogr_lyr.CreateField(field_defn)</span></span>
<span class="line"><span style="color:#24292E;">    gdal.ContourGenerate(dataSource.GetRasterBand(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">3000</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">8100</span><span style="color:#24292E;">, [], </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, ogr_lyr, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#设置等高线的参数信息</span></span>
<span class="line"><span style="color:#24292E;">    ogr_ds </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    intif </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleTen/result.tif&#39;</span></span>
<span class="line"><span style="color:#24292E;">    shpName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;contour_3000&#39;</span></span>
<span class="line"><span style="color:#24292E;">    outShp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleTen/&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> shpName </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;.shp&#39;</span></span>
<span class="line"><span style="color:#24292E;">    dataOri </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> readOriTif(intif)</span></span>
<span class="line"><span style="color:#24292E;">    CreateConLine(</span><span style="color:#032F62;">&#39;ESRI Shapefile&#39;</span><span style="color:#24292E;">,outShp,shpName,dataOri)</span></span></code></pre></div><h3 id="_9-坡度-坡向-山体阴影" tabindex="-1">9.坡度/坡向/山体阴影 <a class="header-anchor" href="#_9-坡度-坡向-山体阴影" aria-label="Permalink to &quot;9.坡度/坡向/山体阴影&quot;">​</a></h3><ul><li>gdal.DEMProcessing(outname,srcDS,processing,options)</li><li>Outname:输出数据名称 <ul><li>srcDS:dem名称</li></ul></li><li>Processing:处理过程（”slope”,”aspect”,”hillshade”, &quot;Roughness”…） <ul><li>Option:选择项: format = “GTiff”</li></ul></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env python</span></span>
<span class="line"><span style="color:#6A737D;"># _*_ coding:utf-8 _*_</span></span>
<span class="line"><span style="color:#E1E4E8;">__author__ </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;SmallTiger&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> osgeo </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> gdal</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">坡度、坡向、山体阴影</span></span>
<span class="line"><span style="color:#9ECBFF;">@source：原始数据源</span></span>
<span class="line"><span style="color:#9ECBFF;">@ProcessType：具体处理方案，坡度/坡向/山体阴影</span></span>
<span class="line"><span style="color:#9ECBFF;">@outTif：输出文件位置及文件名</span></span>
<span class="line"><span style="color:#9ECBFF;">@format：数据类型</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CreateSpeDemPro</span><span style="color:#E1E4E8;">(source,ProcessType,outTif,format):</span></span>
<span class="line"><span style="color:#E1E4E8;">    dataSource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> gdal.Open(source)</span><span style="color:#6A737D;">#打开数据源</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(ProcessType </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;slope&#39;</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">        gdal.DEMProcessing(outTif,dataSource,</span><span style="color:#9ECBFF;">&#39;slope&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">format</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">format</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#坡度</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">elif</span><span style="color:#E1E4E8;">(ProcessType </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;aspect&#39;</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">        gdal.DEMProcessing(outTif, dataSource, </span><span style="color:#9ECBFF;">&#39;aspect&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">format</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">format</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#坡向</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        gdal.DEMProcessing(outTif, dataSource, </span><span style="color:#9ECBFF;">&#39;hillshade&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">format</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">format</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#山体阴影</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    iniTiff </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleEleven/result.tif&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    outNameArr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;slope_1&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;aspect_1&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;hillshade_1&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    outTif </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleEleven/&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    CreateSpeDemPro(iniTiff,</span><span style="color:#9ECBFF;">&#39;slope&#39;</span><span style="color:#E1E4E8;">,outTif </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> outNameArr[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;.tif&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;GTiff&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    CreateSpeDemPro(iniTiff, </span><span style="color:#9ECBFF;">&#39;aspect&#39;</span><span style="color:#E1E4E8;">, outTif </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> outNameArr[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;.tif&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;GTiff&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    CreateSpeDemPro(iniTiff, </span><span style="color:#9ECBFF;">&#39;hillshade&#39;</span><span style="color:#E1E4E8;">, outTif </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> outNameArr[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;.tif&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;GTiff&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env python</span></span>
<span class="line"><span style="color:#6A737D;"># _*_ coding:utf-8 _*_</span></span>
<span class="line"><span style="color:#24292E;">__author__ </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;SmallTiger&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> osgeo </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> gdal</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">坡度、坡向、山体阴影</span></span>
<span class="line"><span style="color:#032F62;">@source：原始数据源</span></span>
<span class="line"><span style="color:#032F62;">@ProcessType：具体处理方案，坡度/坡向/山体阴影</span></span>
<span class="line"><span style="color:#032F62;">@outTif：输出文件位置及文件名</span></span>
<span class="line"><span style="color:#032F62;">@format：数据类型</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CreateSpeDemPro</span><span style="color:#24292E;">(source,ProcessType,outTif,format):</span></span>
<span class="line"><span style="color:#24292E;">    dataSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> gdal.Open(source)</span><span style="color:#6A737D;">#打开数据源</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(ProcessType </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;slope&#39;</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">        gdal.DEMProcessing(outTif,dataSource,</span><span style="color:#032F62;">&#39;slope&#39;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">format</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">format</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#坡度</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">elif</span><span style="color:#24292E;">(ProcessType </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;aspect&#39;</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">        gdal.DEMProcessing(outTif, dataSource, </span><span style="color:#032F62;">&#39;aspect&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">format</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">format</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#坡向</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        gdal.DEMProcessing(outTif, dataSource, </span><span style="color:#032F62;">&#39;hillshade&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">format</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">format</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#山体阴影</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    iniTiff </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleEleven/result.tif&#39;</span></span>
<span class="line"><span style="color:#24292E;">    outNameArr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;slope_1&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;aspect_1&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;hillshade_1&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    outTif </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/images/outPutImage/exampleEleven/&#39;</span></span>
<span class="line"><span style="color:#24292E;">    CreateSpeDemPro(iniTiff,</span><span style="color:#032F62;">&#39;slope&#39;</span><span style="color:#24292E;">,outTif </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> outNameArr[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;.tif&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;GTiff&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    CreateSpeDemPro(iniTiff, </span><span style="color:#032F62;">&#39;aspect&#39;</span><span style="color:#24292E;">, outTif </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> outNameArr[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;.tif&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;GTiff&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    CreateSpeDemPro(iniTiff, </span><span style="color:#032F62;">&#39;hillshade&#39;</span><span style="color:#24292E;">, outTif </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> outNameArr[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;.tif&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;GTiff&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="二、ogr" tabindex="-1">二、ogr <a class="header-anchor" href="#二、ogr" aria-label="Permalink to &quot;二、ogr&quot;">​</a></h2><h3 id="_1-driver" tabindex="-1">1.driver <a class="header-anchor" href="#_1-driver" aria-label="Permalink to &quot;1.driver&quot;">​</a></h3><ul><li>Driver = <strong>ogr.GetDriver</strong>**(index)<strong>:按照索引设置某类数据的驱动</strong></li><li><strong>Driver = <strong>0gr.GetDriverByName（”name”）</strong>:按照名称设置某类型数据的驱动</strong><ul><li><strong>Num <strong>=</strong> <strong>ogr.GetDriverCount</strong></strong>()<strong>：返回支持的驱动数目</strong></li><li><strong>Driver.<strong>Open</strong>(datapath):打开矢量数据</strong></li><li>**Driver.<strong>CreateDataSource</strong>(outpath)：创建矢量数据</li></ul></li></ul><h3 id="_2-datasocurce" tabindex="-1">2.datasocurce <a class="header-anchor" href="#_2-datasocurce" aria-label="Permalink to &quot;2.datasocurce&quot;">​</a></h3><ul><li>Datasource = driver.Open(inshp) <ul><li>GetName():获取矢量数据源（路径）</li><li>GetLayer():获取矢量数据的图层</li><li>CreateLayer():创建矢量数据图层</li><li>CopyLayer():复制矢量数据图层</li><li>DeleteLayer():删除矢量数据图层</li><li>GetLayerCount():获取矢量数据的图层数量</li><li>GetLayerByIndex():按照索引号获取矢量数据图层</li><li>GetLayerByName():按照名称获取矢量数据图层</li><li>FlushCache():清除缓存</li></ul></li></ul><h3 id="_3-layer" tabindex="-1">3.layer <a class="header-anchor" href="#_3-layer" aria-label="Permalink to &quot;3.layer&quot;">​</a></h3><ul><li><strong>Layer</strong> =datasource.GetLayer(index) <ul><li>GetName():获取layer的名称</li><li>CreateFeature()：在layer中创建一个新的feature</li><li>DeleteFeature():删除layer中的某index的feature</li><li>GetFeatureCount():获取layer中的feature数量</li><li>GetExtend():获取layer范围</li><li>FindFieldIndex(fieldname,True):查找field的索引号</li><li>CreateField(fielddefn):根据属性表字段属性创建字段</li><li>DeleteField(index):按照索引号删除字段</li></ul></li></ul><h3 id="_4-feature" tabindex="-1">4.feature <a class="header-anchor" href="#_4-feature" aria-label="Permalink to &quot;4.feature&quot;">​</a></h3><ul><li><strong>Feature</strong> = layer.GetFeature(index) <ul><li>GetDefnRef():获取feature定义</li><li>GetGeometryRef():获取geometry(几何结构)</li><li>GetFieldCount():获取属性字段数量</li><li>GetFieldDefnRef():获取field定义 <ul><li>GetName():获取feature所在Layer名称</li><li>GetFieldCount():获取feature的字段数量</li><li>GetFieldIndex(fieldname):获取字段索引</li><li>GetFieldDefn():获取字段定义 <ul><li>GetName:获取字段名称</li><li>GetNameRef:获取字段名称</li><li>GetTypeName:获取字段内容类型</li></ul></li></ul></li><li>GetFieldIndex(fieldname):获取属性字段索引号</li><li>GetFID():获取feature的FID</li><li>ExportToJson()：输出为json</li></ul></li></ul><h3 id="_5-geometry" tabindex="-1">5.geometry <a class="header-anchor" href="#_5-geometry" aria-label="Permalink to &quot;5.geometry&quot;">​</a></h3><ul><li><strong>Geometry</strong> = Feature.GetGeometryRef() <ul><li>ExportToWkt:导出为wkt格式</li><li>ExportToJson:导出为JSON格式</li><li>GetGeometryName():获取几何名称</li><li>Lengh()：获取几何长度</li><li>Area():获取几何面积</li><li>GetPointCount():获取矢量点数量</li><li>GetPoints():获取几何点列表</li><li>GetPoint(index):获取某个点坐标</li><li>GetX(index):获取某个点的X坐标</li><li>GetY(index):获取某个点的Y坐标</li><li>GetZ(index):获取某个点的Z坐标</li></ul></li></ul><h3 id="_6-geometry的常用空间分析" tabindex="-1">6.geometry的常用空间分析 <a class="header-anchor" href="#_6-geometry的常用空间分析" aria-label="Permalink to &quot;6.geometry的常用空间分析&quot;">​</a></h3><ol><li><p>Intersect 相交</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">@source:原始shp文件</span></span>
<span class="line"><span style="color:#9ECBFF;">@dataType:驱动类型</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test_intersect</span><span style="color:#E1E4E8;">(dataType,source):</span></span>
<span class="line"><span style="color:#E1E4E8;">    driver </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ogr.GetDriverByName(dataType)</span><span style="color:#6A737D;">#驱动</span></span>
<span class="line"><span style="color:#E1E4E8;">    dataSource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> driver.Open(source)</span><span style="color:#6A737D;">#打开数据源</span></span>
<span class="line"><span style="color:#E1E4E8;">    lyr0 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dataSource.GetLayer(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#第一个图层</span></span>
<span class="line"><span style="color:#E1E4E8;">    feat1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> lyr0.GetFeature(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#第一个feature</span></span>
<span class="line"><span style="color:#E1E4E8;">    geom1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> feat1.GetGeometryRef()</span><span style="color:#6A737D;">#几何结构</span></span>
<span class="line"><span style="color:#E1E4E8;">    feat2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> lyr0.GetFeature(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#第二个feature</span></span>
<span class="line"><span style="color:#E1E4E8;">    geom2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> feat2.GetGeometryRef()</span><span style="color:#6A737D;">#几何结构</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(geom1.Intersect(geom2))</span><span style="color:#6A737D;">#是否相交</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    inShp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleNine/polygon.shp&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    test_intersect(</span><span style="color:#9ECBFF;">&#39;ESRI Shapefile&#39;</span><span style="color:#E1E4E8;">,inShp)</span></span>
<span class="line"><span style="color:#E1E4E8;">    test_withIn(</span><span style="color:#9ECBFF;">&#39;ESRI Shapefile&#39;</span><span style="color:#E1E4E8;">, inShp)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">@source:原始shp文件</span></span>
<span class="line"><span style="color:#032F62;">@dataType:驱动类型</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test_intersect</span><span style="color:#24292E;">(dataType,source):</span></span>
<span class="line"><span style="color:#24292E;">    driver </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ogr.GetDriverByName(dataType)</span><span style="color:#6A737D;">#驱动</span></span>
<span class="line"><span style="color:#24292E;">    dataSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> driver.Open(source)</span><span style="color:#6A737D;">#打开数据源</span></span>
<span class="line"><span style="color:#24292E;">    lyr0 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dataSource.GetLayer(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#第一个图层</span></span>
<span class="line"><span style="color:#24292E;">    feat1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lyr0.GetFeature(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#第一个feature</span></span>
<span class="line"><span style="color:#24292E;">    geom1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> feat1.GetGeometryRef()</span><span style="color:#6A737D;">#几何结构</span></span>
<span class="line"><span style="color:#24292E;">    feat2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> lyr0.GetFeature(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#第二个feature</span></span>
<span class="line"><span style="color:#24292E;">    geom2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> feat2.GetGeometryRef()</span><span style="color:#6A737D;">#几何结构</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(geom1.Intersect(geom2))</span><span style="color:#6A737D;">#是否相交</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    inShp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleNine/polygon.shp&#39;</span></span>
<span class="line"><span style="color:#24292E;">    test_intersect(</span><span style="color:#032F62;">&#39;ESRI Shapefile&#39;</span><span style="color:#24292E;">,inShp)</span></span>
<span class="line"><span style="color:#24292E;">    test_withIn(</span><span style="color:#032F62;">&#39;ESRI Shapefile&#39;</span><span style="color:#24292E;">, inShp)</span></span></code></pre></div></li><li><p>Contain 包含</p></li><li><p>Within 被包含</p></li><li><p>Centriod 中心点坐标</p></li><li><p>Distance 空间距离</p></li><li><p>Intersection 相交部分</p><p><img src="`+e+'" alt="image-20221106142436123"></p></li><li><p>Buffer 缓冲区</p></li><li><p>Union 联合</p><p><img src="'+t+'" alt="image-20221106142504364"></p></li><li><p>Difference 几何对象1去掉几何对象2的部分</p><p><img src="'+r+'" alt="image-20221106142517637"></p></li><li><p>SymDifference 交集取反</p><p><img src="'+c+`" alt="image-20221106142526421"></p></li></ol><h3 id="_7-layer的常用空间分析" tabindex="-1">7.layer的常用空间分析 <a class="header-anchor" href="#_7-layer的常用空间分析" aria-label="Permalink to &quot;7.layer的常用空间分析&quot;">​</a></h3><ol><li><p>intersect</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">@dataType:驱动类型</span></span>
<span class="line"><span style="color:#9ECBFF;">@source1:原始shp文件1</span></span>
<span class="line"><span style="color:#9ECBFF;">@source2:原始shp文件2</span></span>
<span class="line"><span style="color:#9ECBFF;">@outPath:输出相交区域的shp文件</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">layerIntersection</span><span style="color:#E1E4E8;">(dataType,source1,source2,outPath):</span></span>
<span class="line"><span style="color:#E1E4E8;">    driver </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ogr.GetDriverByName(dataType)</span><span style="color:#6A737D;">#驱动</span></span>
<span class="line"><span style="color:#E1E4E8;">    ds1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> driver.Open(source1)  </span><span style="color:#6A737D;">#数据源</span></span>
<span class="line"><span style="color:#E1E4E8;">    lyr1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ds1.GetLayer(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">#第一个图层</span></span>
<span class="line"><span style="color:#E1E4E8;">    ds2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> driver.Open(source2)</span></span>
<span class="line"><span style="color:#E1E4E8;">    lyr2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ds2.GetLayer(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    newDataSource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> driver.CreateDataSource(outPath)</span><span style="color:#6A737D;">#创建数据源</span></span>
<span class="line"><span style="color:#E1E4E8;">    newLyr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> newDataSource.CreateLayer(</span><span style="color:#9ECBFF;">&quot;testpolygon&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">geom_type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ogr.wkbPolygon)</span><span style="color:#6A737D;">#创建图层</span></span>
<span class="line"><span style="color:#E1E4E8;">    ogr.Layer.Intersection(lyr1,lyr2,newLyr)</span><span style="color:#6A737D;">#相交图层内容</span></span>
<span class="line"><span style="color:#E1E4E8;">    newDataSource.Destroy()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    inSihuShp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/polygon_sihu.shp&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    inJiaweiShp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/polygon_jiawei.shp&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    outPath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    outNameArr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;interSec.shp&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;union.shp&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;symDiff.shp&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    layerIntersection(</span><span style="color:#9ECBFF;">&#39;ESRI Shapefile&#39;</span><span style="color:#E1E4E8;">,inSihuShp,inJiaweiShp,outPath</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">outNameArr[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">@dataType:驱动类型</span></span>
<span class="line"><span style="color:#032F62;">@source1:原始shp文件1</span></span>
<span class="line"><span style="color:#032F62;">@source2:原始shp文件2</span></span>
<span class="line"><span style="color:#032F62;">@outPath:输出相交区域的shp文件</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">layerIntersection</span><span style="color:#24292E;">(dataType,source1,source2,outPath):</span></span>
<span class="line"><span style="color:#24292E;">    driver </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ogr.GetDriverByName(dataType)</span><span style="color:#6A737D;">#驱动</span></span>
<span class="line"><span style="color:#24292E;">    ds1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> driver.Open(source1)  </span><span style="color:#6A737D;">#数据源</span></span>
<span class="line"><span style="color:#24292E;">    lyr1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ds1.GetLayer(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">#第一个图层</span></span>
<span class="line"><span style="color:#24292E;">    ds2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> driver.Open(source2)</span></span>
<span class="line"><span style="color:#24292E;">    lyr2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ds2.GetLayer(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    newDataSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> driver.CreateDataSource(outPath)</span><span style="color:#6A737D;">#创建数据源</span></span>
<span class="line"><span style="color:#24292E;">    newLyr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> newDataSource.CreateLayer(</span><span style="color:#032F62;">&quot;testpolygon&quot;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">geom_type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ogr.wkbPolygon)</span><span style="color:#6A737D;">#创建图层</span></span>
<span class="line"><span style="color:#24292E;">    ogr.Layer.Intersection(lyr1,lyr2,newLyr)</span><span style="color:#6A737D;">#相交图层内容</span></span>
<span class="line"><span style="color:#24292E;">    newDataSource.Destroy()</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    inSihuShp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/polygon_sihu.shp&#39;</span></span>
<span class="line"><span style="color:#24292E;">    inJiaweiShp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/polygon_jiawei.shp&#39;</span></span>
<span class="line"><span style="color:#24292E;">    outPath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/&#39;</span></span>
<span class="line"><span style="color:#24292E;">    outNameArr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;interSec.shp&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;union.shp&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;symDiff.shp&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    layerIntersection(</span><span style="color:#032F62;">&#39;ESRI Shapefile&#39;</span><span style="color:#24292E;">,inSihuShp,inJiaweiShp,outPath</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">outNameArr[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span></span></code></pre></div></li><li><p>union</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">@dataType:驱动类型</span></span>
<span class="line"><span style="color:#9ECBFF;">@source1:原始shp文件1</span></span>
<span class="line"><span style="color:#9ECBFF;">@source2:原始shp文件2</span></span>
<span class="line"><span style="color:#9ECBFF;">@outPath:输出合并区域的shp文件</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">layerUnion</span><span style="color:#E1E4E8;">(dataType,source1,source2,outPath):</span></span>
<span class="line"><span style="color:#E1E4E8;">    driver </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ogr.GetDriverByName(dataType)  </span><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#E1E4E8;">    ds1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> driver.Open(source1)  </span><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#E1E4E8;">    lyr1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ds1.GetLayer(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#E1E4E8;">    ds2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> driver.Open(source2)</span></span>
<span class="line"><span style="color:#E1E4E8;">    lyr2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ds2.GetLayer(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    newDataSource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> driver.CreateDataSource(outPath)</span></span>
<span class="line"><span style="color:#E1E4E8;">    newLyr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> newDataSource.CreateLayer(</span><span style="color:#9ECBFF;">&quot;testpolygon&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">geom_type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ogr.wkbPolygon)</span></span>
<span class="line"><span style="color:#E1E4E8;">    ogr.Layer.Union(lyr1,lyr2,newLyr)</span><span style="color:#6A737D;">#合并图层内容</span></span>
<span class="line"><span style="color:#E1E4E8;">    newDataSource.Destroy()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    inSihuShp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/polygon_sihu.shp&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    inJiaweiShp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/polygon_jiawei.shp&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    outPath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    outNameArr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;interSec.shp&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;union.shp&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;symDiff.shp&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    layerUnion(</span><span style="color:#9ECBFF;">&#39;ESRI Shapefile&#39;</span><span style="color:#E1E4E8;">, inSihuShp, inJiaweiShp, outPath </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> outNameArr[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">@dataType:驱动类型</span></span>
<span class="line"><span style="color:#032F62;">@source1:原始shp文件1</span></span>
<span class="line"><span style="color:#032F62;">@source2:原始shp文件2</span></span>
<span class="line"><span style="color:#032F62;">@outPath:输出合并区域的shp文件</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">layerUnion</span><span style="color:#24292E;">(dataType,source1,source2,outPath):</span></span>
<span class="line"><span style="color:#24292E;">    driver </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ogr.GetDriverByName(dataType)  </span><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#24292E;">    ds1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> driver.Open(source1)  </span><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#24292E;">    lyr1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ds1.GetLayer(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#24292E;">    ds2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> driver.Open(source2)</span></span>
<span class="line"><span style="color:#24292E;">    lyr2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ds2.GetLayer(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    newDataSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> driver.CreateDataSource(outPath)</span></span>
<span class="line"><span style="color:#24292E;">    newLyr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> newDataSource.CreateLayer(</span><span style="color:#032F62;">&quot;testpolygon&quot;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">geom_type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ogr.wkbPolygon)</span></span>
<span class="line"><span style="color:#24292E;">    ogr.Layer.Union(lyr1,lyr2,newLyr)</span><span style="color:#6A737D;">#合并图层内容</span></span>
<span class="line"><span style="color:#24292E;">    newDataSource.Destroy()</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    inSihuShp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/polygon_sihu.shp&#39;</span></span>
<span class="line"><span style="color:#24292E;">    inJiaweiShp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/polygon_jiawei.shp&#39;</span></span>
<span class="line"><span style="color:#24292E;">    outPath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/&#39;</span></span>
<span class="line"><span style="color:#24292E;">    outNameArr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;interSec.shp&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;union.shp&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;symDiff.shp&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    layerUnion(</span><span style="color:#032F62;">&#39;ESRI Shapefile&#39;</span><span style="color:#24292E;">, inSihuShp, inJiaweiShp, outPath </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> outNameArr[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])</span></span></code></pre></div></li><li><p>symdifference</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">@dataType:驱动类型</span></span>
<span class="line"><span style="color:#9ECBFF;">@source1:原始shp文件1</span></span>
<span class="line"><span style="color:#9ECBFF;">@source2:原始shp文件2</span></span>
<span class="line"><span style="color:#9ECBFF;">@outPath:输出交集取反区域的shp文件</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">layerSymdiff</span><span style="color:#E1E4E8;">(dataType,source1,source2,outPath):</span></span>
<span class="line"><span style="color:#E1E4E8;">    driver </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ogr.GetDriverByName(dataType)  </span><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#E1E4E8;">    ds1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> driver.Open(source1)  </span><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#E1E4E8;">    lyr1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ds1.GetLayer(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#E1E4E8;">    ds2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> driver.Open(source2)</span></span>
<span class="line"><span style="color:#E1E4E8;">    lyr2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ds2.GetLayer(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    newDataSource </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> driver.CreateDataSource(outPath)</span></span>
<span class="line"><span style="color:#E1E4E8;">    newLyr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> newDataSource.CreateLayer(</span><span style="color:#9ECBFF;">&quot;testpolygon&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">geom_type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ogr.wkbPolygon)</span></span>
<span class="line"><span style="color:#E1E4E8;">    ogr.Layer.SymDifference(lyr1,lyr2,newLyr)</span><span style="color:#6A737D;">#交集取反图层内容</span></span>
<span class="line"><span style="color:#E1E4E8;">    newDataSource.Destroy()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    inSihuShp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/polygon_sihu.shp&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    inJiaweiShp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/polygon_jiawei.shp&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    outPath </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    outNameArr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;interSec.shp&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;union.shp&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;symDiff.shp&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    layerSymdiff(</span><span style="color:#9ECBFF;">&#39;ESRI Shapefile&#39;</span><span style="color:#E1E4E8;">, inSihuShp, inJiaweiShp, outPath </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> outNameArr[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">])</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">@dataType:驱动类型</span></span>
<span class="line"><span style="color:#032F62;">@source1:原始shp文件1</span></span>
<span class="line"><span style="color:#032F62;">@source2:原始shp文件2</span></span>
<span class="line"><span style="color:#032F62;">@outPath:输出交集取反区域的shp文件</span></span>
<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">layerSymdiff</span><span style="color:#24292E;">(dataType,source1,source2,outPath):</span></span>
<span class="line"><span style="color:#24292E;">    driver </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ogr.GetDriverByName(dataType)  </span><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#24292E;">    ds1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> driver.Open(source1)  </span><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#24292E;">    lyr1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ds1.GetLayer(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;">#</span></span>
<span class="line"><span style="color:#24292E;">    ds2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> driver.Open(source2)</span></span>
<span class="line"><span style="color:#24292E;">    lyr2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ds2.GetLayer(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    newDataSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> driver.CreateDataSource(outPath)</span></span>
<span class="line"><span style="color:#24292E;">    newLyr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> newDataSource.CreateLayer(</span><span style="color:#032F62;">&quot;testpolygon&quot;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">geom_type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ogr.wkbPolygon)</span></span>
<span class="line"><span style="color:#24292E;">    ogr.Layer.SymDifference(lyr1,lyr2,newLyr)</span><span style="color:#6A737D;">#交集取反图层内容</span></span>
<span class="line"><span style="color:#24292E;">    newDataSource.Destroy()</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    inSihuShp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/polygon_sihu.shp&#39;</span></span>
<span class="line"><span style="color:#24292E;">    inJiaweiShp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/polygon_jiawei.shp&#39;</span></span>
<span class="line"><span style="color:#24292E;">    outPath </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;E:/ArcpyGIS/seconeTerm/shapeFile/exampleTen/&#39;</span></span>
<span class="line"><span style="color:#24292E;">    outNameArr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;interSec.shp&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;union.shp&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;symDiff.shp&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    layerSymdiff(</span><span style="color:#032F62;">&#39;ESRI Shapefile&#39;</span><span style="color:#24292E;">, inSihuShp, inJiaweiShp, outPath </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> outNameArr[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">])</span></span></code></pre></div></li></ol><p>​</p>`,44),i=[E];function u(F,d,m,f,D,h){return a(),n("div",null,i)}const C=s(y,[["render",u]]);export{g as __pageData,C as default};
