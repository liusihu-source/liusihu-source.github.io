import{_ as a,o as e,c as t,Q as s}from"./chunks/framework.a7175731.js";const o="/assets/image-20231108212912934.8a7cb9b5.png",r="/assets/image-20231108213327500.da4a8151.png",_=JSON.parse('{"title":"WEBGIS随心笔记","description":"","frontmatter":{},"headers":[],"relativePath":"个人/其他/WEBGIS随心笔记.md","filePath":"个人/其他/WEBGIS随心笔记.md","lastUpdated":null}'),i={name:"个人/其他/WEBGIS随心笔记.md"},p=s('<h1 id="webgis随心笔记" tabindex="-1">WEBGIS随心笔记 <a class="header-anchor" href="#webgis随心笔记" aria-label="Permalink to &quot;WEBGIS随心笔记&quot;">​</a></h1><h2 id="一、为什么最初的底图使用基于金字塔结构的栅格数据" tabindex="-1">一、为什么最初的底图使用基于金字塔结构的栅格数据？ <a class="header-anchor" href="#一、为什么最初的底图使用基于金字塔结构的栅格数据" aria-label="Permalink to &quot;一、为什么最初的底图使用基于金字塔结构的栅格数据？&quot;">​</a></h2><p>Google Maps证明了tile是一个非常简洁的方案来为公众提供基础地理信息服务。</p><ol><li>兼容性极强，对于浏览器而言，只需要能够显示图片、支持css、异步传输、DOM和javascript，它就能够显示Google Maps。google Map是AJAX的一个经典应用，直接从服务器端搞到切片，传输到客户端，客户端仅仅排序展示就行了。总之一句话，浏览器实时绘制能力不够。</li><li>对于服务器的负载同样很低，由于地图都是预先渲染好的，用户的请求对服务器来讲只有IO代价，而几乎没有CPU代价，相比WMS那种需要实时切图，实时渲染的机制来讲，这种设计的负载真得低了太多了。记住：还有内存数据库可以减少磁盘IO，还有浏览器缓存可以减少图片的请求。矢量引擎要耗费大量的服务器运算资源（因为有完整的空间数据引擎），哪怕只是几十上百的并发用户，都需要极其夸张的服务器运算能力了。矢量引擎是无法满足公众互联网服务的要求的。</li></ol><h2 id="二、从传统纸质地图-电子地图-web墨卡托投影" tabindex="-1">二、从传统纸质地图 -&gt; 电子地图 Web墨卡托投影 <a class="header-anchor" href="#二、从传统纸质地图-电子地图-web墨卡托投影" aria-label="Permalink to &quot;二、从传统纸质地图 -&gt; 电子地图 Web墨卡托投影&quot;">​</a></h2><blockquote><p>回想传统纸质地图，比例尺是固定的，在有限的纸张范围上，既想表现大的地理范围，又需要显示更详细的地理元素，那只有一个方式，就是增加元素的排列密度，所以一般我们看到纸质地图的字特别小。</p><p>而电子地图采用分级的方式解决这个问题。也就是电子地图其实提供了若干个固定的比例尺，比例尺每增加一次，同样的屏幕范围上，能表现的地理范围就变小了，但是能表现的地物元素更细致了。比如在比较小的比例尺下，我们只能看到国家边界，而在较大比例尺下我们能看某个理发店的名称和位置。</p><p>经过行业里的长期发展，业内逐渐采用了分级代替了比例尺，<strong>一般使用0~18这样得分级数表示。级数每增加1级，那么比例尺实际是变大2倍。 这个分级数一般用z表示</strong>，也就是开发中常见到的<code>zoom</code></p></blockquote><p>地图是显示在平面上的，因此需要将球面坐标转换为平面坐标，这个转换过程称为投影。最常见的投影是墨卡托（Mercator）投影，它具有等角性质，即球体上的两点之间的角度方位与平面上的两点之间的角度方位保持不变，因此特别适合用于导航。</p><p>所以墨卡托(Mercator)投影，又名“等角正轴圆柱投影”，是荷兰地图学家墨卡托（Mercator）在1569年拟定，假设地球被围在一个中空的圆柱里，其赤道与圆柱相接触，然后再假想地球中心有一盏灯，把球面上的图形投影到圆柱体上，再把圆柱体展开，这就是一幅标准纬线为零度（即赤道）的“墨卡托投影”绘制出的世界地图。</p><p><img src="'+o+'" alt="image-20231108212912934"></p><h2 id="三、地图底图分块" tabindex="-1">三、地图底图分块 <a class="header-anchor" href="#三、地图底图分块" aria-label="Permalink to &quot;三、地图底图分块&quot;">​</a></h2><p>现在第0级是256<em>256的地图图片，当第1级的时候就是512</em>512，每一级变为2倍。这样当到18级的时候，整个地图的分辨率是个天文数字，这样任意一台计算机都无法在瞬间完成下载，读取和显示。</p><p>实际上把某一级地图 完整下载也是没有意义的，因为我们的屏幕分辨率有限，超出屏幕的范围图片都是浪费。</p><p>所以在<strong>每一级上都分割为256*256的块，然后对每块都编码。经度方向使用x编码。纬度方向使用y编码。每次我们只看需要下载屏幕范围内的相关图片即可</strong>。</p><p>为什么这个分辨率是256<em>256，而不是255</em>255 或者 是32*32</p><ol><li>在以前的图像显示技术里基本会要求图像的分辨率是2的幂次方，在N年前做windows上显示图片开发的时候基本都要把图像宽度调整2的幂次方才能正常绘制。以及一些老的gpu都要求纹理必须是2的幂次方。所以如果为了兼容老设备和性能上的一点提升，必须采用幂次方的宽度高度</li><li>最终选用256 ，还主要考虑到网络的数据传输效率，数据太大容易下载失败，数据太小下载效率又过低。而256的图片压缩后一般是10K左右，而这个数据量在各种网络下还是表现比较好的。另外实际单张图片过大，覆盖整个地图窗口之后，浪费的区域更多。所以业内最终使用了256。</li></ol><h2 id="四、地图图层概念" tabindex="-1">四、地图图层概念 <a class="header-anchor" href="#四、地图图层概念" aria-label="Permalink to &quot;四、地图图层概念&quot;">​</a></h2><p>电子地图对我们实际空间的表达，事实上是<strong>通过不同的图层去描述，然后通过图层叠加显示来进行表达的过程</strong>。对于我们地图应用目标的不同，叠加的图层也是不同的。</p><p><img src="'+r+'" alt="image-20231108213327500"></p><p><strong>矢量模型和栅格模型的概念</strong></p><p>GIS（电子地图）采用两种不同的数学模型来对现实世界进行模拟：</p><ul><li><strong>矢量模型</strong>：同多X,Y（或者X,Y,Z）坐标，把自然界的地物通过点，线，面的方式进行表达</li><li><strong>栅格模型</strong>（瓦片模型）：用方格来模拟实体</li></ul><p>⭐ 论任何国家，真正高精度的地图（例如1：200比例或更高）是受限制不会对外公布的。（相对应给大家参照的是，我国规定互联网上可以公开发布的地图，最高精度是1：10000）公开地图位置精度不得高于50米，等高距不得小于50米，数字高程模型格网不得小于100米。</p><h2 id="五、地图实时数据的来源" tabindex="-1">五、地图实时数据的来源 <a class="header-anchor" href="#五、地图实时数据的来源" aria-label="Permalink to &quot;五、地图实时数据的来源&quot;">​</a></h2><p>实际上实时路况的数据获取有几种情况：</p><ol><li><strong>与出租车公司或公交公司等合作</strong>，在车上安装GPS和数据回传系统，对车辆的行驶状况的数据回传。但此方法是往往成本过高，而且出租车、公交车等车辆有限，而且大部分都集中在城市的中心地带，或者用车需求大的区域。</li><li><strong>交通部门的流量检测系统</strong>，一是对于重点路段会实行流量监控，但目前各大城市的数据往往掌握在交委旗下的公司手里，获取成本也不低。而且往往目前这方面其实给予实时路况的帮助是有限的，毕竟对于整个城市的道路监控能力，即使是政府的职能部门能力也是有限的。二是交通部门会实时收集所有浮动车（大客车、大货车等需要实时发送GPS信息的车）的GPS实时数据。</li><li><strong>UGC数据，也就是数以千万计的APP用户</strong>，手机既能接入移动网络，又能利用GPS定位，实际上现在的手机GPS、水平仪等都已经具备了很不错的精度，当你打开地图APP的一瞬间或地图APP在手机后台运行，GPS开始定位，并且移动网络也已经开始工作了，手机会自动计算你在某段距离里行驶的速度，然后回传到APP所在服务器。当然一个人的数据肯定是不够的，但如果面对一个装机量在上千万甚至上亿水平的地图应用，做到这点肯定不在话下。</li></ol><h2 id="六、地图底图瓦片" tabindex="-1">六、地图底图瓦片 <a class="header-anchor" href="#六、地图底图瓦片" aria-label="Permalink to &quot;六、地图底图瓦片&quot;">​</a></h2><p>使用XYZ这样的坐标来精确定位一张瓦片。<strong>即XY表示某个层级内的平面，X为横坐标，Y为纵坐标</strong>，类似于数学上常见的笛卡尔坐标系。Z一般表示缩放比率zoom，不同地图商定义有分歧、这是目前主流互联网地图商分歧最大的地方。</p><h3 id="xyz加载高德地图" tabindex="-1">xyz加载高德地图 <a class="header-anchor" href="#xyz加载高德地图" aria-label="Permalink to &quot;xyz加载高德地图&quot;">​</a></h3><h3 id="xyz加载天地图" tabindex="-1">xyz加载天地图 <a class="header-anchor" href="#xyz加载天地图" aria-label="Permalink to &quot;xyz加载天地图&quot;">​</a></h3><h3 id="xyz加载谷歌地图" tabindex="-1">xyz加载谷歌地图 <a class="header-anchor" href="#xyz加载谷歌地图" aria-label="Permalink to &quot;xyz加载谷歌地图&quot;">​</a></h3><h3 id="xyz加载openstreetmap" tabindex="-1">XYZ加载OpenStreetMap <a class="header-anchor" href="#xyz加载openstreetmap" aria-label="Permalink to &quot;XYZ加载OpenStreetMap&quot;">​</a></h3><p>...</p><p>摘录文章</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">https://mp.weixin.qq.com/s?__biz=MzAwNzE4NDI0OQ==&amp;mid=2453406597&amp;idx=1&amp;sn=1cf46a1404560ae087e61efb57c06232&amp;chksm=8ccaa993bbbd20852ac3bf44f8acc831aa08cf0f2ee3626863c560e732008c8328fbd3d6c87e&amp;mpshare=1&amp;scene=23&amp;srcid=1108DSNWuDpbSOC0fJaIBa7s&amp;sharer_shareinfo=ba63db5875de4aadf30d15f870c7aee3&amp;sharer_shareinfo_first=ba63db5875de4aadf30d15f870c7aee3#rd</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">https://mp.weixin.qq.com/s?__biz=MzAwNzE4NDI0OQ==&amp;mid=2453406597&amp;idx=1&amp;sn=1cf46a1404560ae087e61efb57c06232&amp;chksm=8ccaa993bbbd20852ac3bf44f8acc831aa08cf0f2ee3626863c560e732008c8328fbd3d6c87e&amp;mpshare=1&amp;scene=23&amp;srcid=1108DSNWuDpbSOC0fJaIBa7s&amp;sharer_shareinfo=ba63db5875de4aadf30d15f870c7aee3&amp;sharer_shareinfo_first=ba63db5875de4aadf30d15f870c7aee3#rd</span></span></code></pre></div>',34),l=[p];function n(c,d,h,m,b,f){return e(),t("div",null,l)}const u=a(i,[["render",n]]);export{_ as __pageData,u as default};
