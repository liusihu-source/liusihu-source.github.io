import{_ as i,c as a,a2 as h,o as t}from"./chunks/framework.BQmytedh.js";const g=JSON.parse('{"title":"shadcnUi --笔记","description":"","frontmatter":{},"headers":[],"relativePath":"个人/其他/shadcnUI.md","filePath":"个人/其他/shadcnUI.md","lastUpdated":null}'),n={name:"个人/其他/shadcnUI.md"};function l(k,s,p,e,F,r){return t(),a("div",null,s[0]||(s[0]=[h(`<h1 id="shadcnui-笔记" tabindex="-1">shadcnUi --笔记 <a class="header-anchor" href="#shadcnui-笔记" aria-label="Permalink to &quot;shadcnUi --笔记&quot;">​</a></h1><blockquote><p><a href="https://github.com/shadcn-ui/ui" target="_blank" rel="noreferrer">https://github.com/shadcn-ui/ui</a></p><p><a href="https://mp.weixin.qq.com/s/oRW61QCTTowKdAQkfEl2tw" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/s/oRW61QCTTowKdAQkfEl2tw</a></p></blockquote><h2 id="一、概述" tabindex="-1">一、概述 <a class="header-anchor" href="#一、概述" aria-label="Permalink to &quot;一、概述&quot;">​</a></h2><p>Shadcn UI 与其他 UI 和组件库如 Material UI、Ant Design、Element UI 的设计理念截然不同。这些库一般通过 npm 包提供对组件的访问，而 <strong>Shadcn UI 允许用户将单个 UI 组件的源代码直接下载到项目中</strong></p><p>💡 <strong>Shadcn UI 实际上并不是一个组件库</strong>，<strong>而是可以复制并粘贴到应用中的可重用组件的集合。</strong></p><h2 id="二、使用" tabindex="-1">二、使用 <a class="header-anchor" href="#二、使用" aria-label="Permalink to &quot;二、使用&quot;">​</a></h2><h3 id="_2-1-初始化" tabindex="-1">2.1 初始化 <a class="header-anchor" href="#_2-1-初始化" aria-label="Permalink to &quot;2.1 初始化&quot;">​</a></h3><p>运行以下命令创建一个新的 Next.js 应用：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-next-app@latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-app</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --typescript</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tailwind</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --eslint</span></span></code></pre></div><p>运行 init 命令来初始化新项目的依赖项：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shadcn-ui@latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><p>CLI 将提示进行一些配置。以下是配置问题的示例：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Would</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TypeScript</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (recommended)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> no / yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> style</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> would</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ›</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Default</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> color</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> would</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> as</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> color?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ›</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Slate</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Where</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CSS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ›</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ›</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app/globals.css</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Do</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> want</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CSS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> variables</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> colors?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ›</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Where</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tailwind.config.js</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> located?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ›</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tailwind.config.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Configure</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> components:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ›</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @/components</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Configure</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> utils:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ›</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @/lib/utils</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Are</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> using</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> React</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Components?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ›</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span></code></pre></div><h3 id="_2-2-添加按钮" tabindex="-1">2.2 添加按钮 <a class="header-anchor" href="#_2-2-添加按钮" aria-label="Permalink to &quot;2.2 添加按钮&quot;">​</a></h3><p>运行以下命令以使用 CLI 添加一个按钮：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shadcn-ui@latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> button</span></span></code></pre></div><p>💡 <code>像elementui直接引入整个UI库。当然也支持按需引入，但在本地开发中也需要将全部资源库下载，只是不需要将所有资源用于项目中，只是打包过程会减少项目体积</code></p><p>CLI 会自动创建一个组件文件夹，只需要从文件夹中导出它：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Button } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@/components/ui/button&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Button variant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;outline&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Button</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Button</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div>`,19)]))}const o=i(n,[["render",l]]);export{g as __pageData,o as default};
