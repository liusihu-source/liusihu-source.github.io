import{_ as e,c as t,a2 as s,o as i}from"./chunks/framework.BQmytedh.js";const r="/assets/image-20240322172645227.vUgCBFmS.png",o="/assets/image-20240322172814480.Q0mEc0Nk.png",n="/assets/image-20240322172931036.BBfcL3Xw.png",l="/assets/image-20240322173014164.Cqk-Pw48.png",p="/assets/image-20240322173106643.DckP-xi5.png",m="/assets/image-20240322173145878.JTR_QayY.png",c="/assets/image-20240322173219878.6F_A3qkl.png",P=JSON.parse('{"title":"UML图 --笔记","description":"","frontmatter":{},"headers":[],"relativePath":"个人/常识/UML图.md","filePath":"个人/常识/UML图.md","lastUpdated":null}'),h={name:"个人/常识/UML图.md"};function d(g,a,_,u,f,q){return i(),t("div",null,a[0]||(a[0]=[s('<h1 id="uml图-笔记" tabindex="-1">UML图 --笔记 <a class="header-anchor" href="#uml图-笔记" aria-label="Permalink to &quot;UML图 --笔记&quot;">​</a></h1><h2 id="继承" tabindex="-1">继承 <a class="header-anchor" href="#继承" aria-label="Permalink to &quot;继承&quot;">​</a></h2><p>实线箭头</p><p><img src="'+r+'" alt="image-20240322172645227"></p><h2 id="双向关联" tabindex="-1">双向关联 <a class="header-anchor" href="#双向关联" aria-label="Permalink to &quot;双向关联&quot;">​</a></h2><p>**从左到右：**Flight扮演assignedFights角色, 有0到1个Plane跟他关联(一个航班要么取消了没有飞机,要么只能对应一架飞机)</p><p>**从右到左：**Plane扮演着assignedPlane角色, 有0到多个Flight跟他关联(一个飞机可以参与多个航班, 也可以停在仓库里面烂掉)</p><p><img src="'+o+'" alt="image-20240322172814480"></p><h2 id="单向关联" tabindex="-1">单向关联 <a class="header-anchor" href="#单向关联" aria-label="Permalink to &quot;单向关联&quot;">​</a></h2><p>右侧类不知道左侧类</p><p><img src="'+n+'" alt="image-20240322172931036"></p><h2 id="软件包" tabindex="-1">软件包 <a class="header-anchor" href="#软件包" aria-label="Permalink to &quot;软件包&quot;">​</a></h2><p>大的包围框叫软件包 , 名字为Account</p><p><img src="'+l+'" alt="image-20240322173014164"></p><h2 id="实现接口" tabindex="-1">实现接口 <a class="header-anchor" href="#实现接口" aria-label="Permalink to &quot;实现接口&quot;">​</a></h2><p>虚线箭头</p><p><img src="'+p+'" alt="image-20240322173106643"></p><h2 id="聚合" tabindex="-1">聚合 <a class="header-anchor" href="#聚合" aria-label="Permalink to &quot;聚合&quot;">​</a></h2><p>带菱形的箭头表示基本聚合, 由下图知道, Wheel类扮演wheels角色, 聚合4个到Car对象里面去, 空心的菱形表示Wheel对象并不随Car的创建而创建,销毁而销毁 .</p><p><img src="'+m+'" alt="image-20240322173145878"></p><p>实心菱形表示Department对象随Company对象的创建而创建,销毁而销毁</p><p><img src="'+c+'" alt="image-20240322173219878"></p>',22)]))}const k=e(h,[["render",d]]);export{P as __pageData,k as default};
