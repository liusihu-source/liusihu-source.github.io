import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.a7175731.js";const d=JSON.parse('{"title":"JavaScript --笔记","description":"","frontmatter":{},"headers":[],"relativePath":"前端/JS/JS基础.md","filePath":"前端/JS/JS基础.md","lastUpdated":null}'),p={name:"前端/JS/JS基础.md"},o=l(`<h1 id="javascript-笔记" tabindex="-1">JavaScript --笔记 <a class="header-anchor" href="#javascript-笔记" aria-label="Permalink to &quot;JavaScript --笔记&quot;">​</a></h1><h2 id="一、用处" tabindex="-1">一、用处 <a class="header-anchor" href="#一、用处" aria-label="Permalink to &quot;一、用处&quot;">​</a></h2><p>JavaScript</p><ul><li>前端</li><li>后端Node.js</li><li>移动端Cordova搭建android的apk和ios的ipa</li><li>PC端Electron搭建windows、macos、linux的应用程序</li><li>ioT物联网</li></ul><h2 id="二、变量" tabindex="-1">二、变量 <a class="header-anchor" href="#二、变量" aria-label="Permalink to &quot;二、变量&quot;">​</a></h2><h4 id="let" tabindex="-1">let <a class="header-anchor" href="#let" aria-label="Permalink to &quot;let&quot;">​</a></h4><ul><li>声明一次后可以更改值</li><li>不可重复声明</li></ul><h4 id="const" tabindex="-1">const <a class="header-anchor" href="#const" aria-label="Permalink to &quot;const&quot;">​</a></h4><ul><li>声明常量使用，一般用于声明对象常量</li><li>常量不可更改 <ul><li>对于数值、布尔或者字符串类常量不可改变</li><li>对于对象，允许修改或重新赋值对象的属性，但变量本身的引用地址不可更改</li></ul></li></ul><h2 id="三、模板字面量" tabindex="-1">三、模板字面量 <a class="header-anchor" href="#三、模板字面量" aria-label="Permalink to &quot;三、模板字面量&quot;">​</a></h2><p>原</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">book</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    name: </span><span style="color:#9ECBFF;">&#39;aaa&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">consolo.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;你正在阅读&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> book.name </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;.,</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">这是新的一行&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">book</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#032F62;">&#39;aaa&#39;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">consolo.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;你正在阅读&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> book.name </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;.,</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">这是新的一行&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>简化</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">book</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    name: </span><span style="color:#9ECBFF;">&#39;aaa&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`你正在阅读\${</span><span style="color:#E1E4E8;">book</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">name</span><span style="color:#9ECBFF;">}。</span></span>
<span class="line"><span style="color:#9ECBFF;">这是新的一行\`</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">book</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    name: </span><span style="color:#032F62;">&#39;aaa&#39;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`你正在阅读\${</span><span style="color:#24292E;">book</span><span style="color:#032F62;">.</span><span style="color:#24292E;">name</span><span style="color:#032F62;">}。</span></span>
<span class="line"><span style="color:#032F62;">这是新的一行\`</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="四、使用类进行面向对象编程" tabindex="-1">四、使用类进行面向对象编程 <a class="header-anchor" href="#四、使用类进行面向对象编程" aria-label="Permalink to &quot;四、使用类进行面向对象编程&quot;">​</a></h2><ul><li>class &amp; constructor <ul><li>extend支持继承</li><li>支持get &amp; set 的属性存取器</li></ul></li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Book</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">constructor</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">title</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">pages</span><span style="color:#E1E4E8;"> , </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.title </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> title</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.pages </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pages</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> name</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">printTitle</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">        console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.title)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Book</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">constructor</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">title</span><span style="color:#24292E;">, </span><span style="color:#E36209;">pages</span><span style="color:#24292E;"> , </span><span style="color:#E36209;">name</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.title </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> title</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.pages </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pages</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> name</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">printTitle</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.title)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li><p>模块导入导出（模块就是单个文件中声明的JS代码，因此可从其他文件导入函数、变量和类）</p><ul><li><p>传统NodeJS -- require（CommonJS模块）</p></li><li><p>方法导入导出</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//A.js 导出</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">circleArea</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (r) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    return </span><span style="color:#79B8FF;">3.14</span><span style="color:#E1E4E8;"> * r * r</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> {circleArea}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//导入使用</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {circleArea} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;A.js&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> {circleArea </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> circleAreaB} </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;A.js&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">//可以导入时重命名该方法</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> area </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;A.js&#39;</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//把整个模块当做一个变量导入，使用按照类的属性、方法使用</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//A.js 导出</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">circleArea</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (r) {</span></span>
<span class="line"><span style="color:#24292E;">    return </span><span style="color:#005CC5;">3.14</span><span style="color:#24292E;"> * r * r</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> {circleArea}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//导入使用</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {circleArea} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;A.js&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> {circleArea </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> circleAreaB} </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;A.js&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//可以导入时重命名该方法</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> area </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;A.js&#39;</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">//把整个模块当做一个变量导入，使用按照类的属性、方法使用</span></span></code></pre></div></li><li><p>类导出导入</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//A.JS导出</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Book</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">constructor</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">title</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.title </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> title</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">printTitle</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.title)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//导入使用</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Book </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;A.js&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//A.JS导出</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Book</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">constructor</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">title</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.title </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> title</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">printTitle</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.title)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//导入使用</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Book </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;A.js&#39;</span></span></code></pre></div><p>&lt;补&gt;原生html引用带有import的A.JS文件</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//test.js</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;testContent&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//B.js</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> test </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/test.js&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">test</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//html</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;module&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">src</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;B.js&#39;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//test.js</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;testContent&#39;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//B.js</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> test </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/test.js&#39;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">test</span><span style="color:#24292E;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//html</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;module&#39;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;B.js&#39;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre></div></li></ul></li></ul><h1 id="javascript高级-笔记" tabindex="-1">javaScript高级 --笔记 <a class="header-anchor" href="#javascript高级-笔记" aria-label="Permalink to &quot;javaScript高级 --笔记&quot;">​</a></h1><h2 id="一、string" tabindex="-1">一、String <a class="header-anchor" href="#一、string" aria-label="Permalink to &quot;一、String&quot;">​</a></h2><h4 id="_1、trim" tabindex="-1">1、trim <a class="header-anchor" href="#_1、trim" aria-label="Permalink to &quot;1、trim&quot;">​</a></h4><p>作用：方法用于删除字符串的头尾空白符，空白符包括：空格、制表符 tab、换行符等其他空白符等</p><ul><li>注意： <ul><li>不会改变原始字符串</li></ul></li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;       Runoob        &quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">alert</span><span style="color:#E1E4E8;">(str.</span><span style="color:#B392F0;">trim</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#6A737D;">//Runoob</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;       Runoob        &quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">alert</span><span style="color:#24292E;">(str.</span><span style="color:#6F42C1;">trim</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#6A737D;">//Runoob</span></span></code></pre></div><h2 id="二、数组" tabindex="-1">二、数组 <a class="header-anchor" href="#二、数组" aria-label="Permalink to &quot;二、数组&quot;">​</a></h2><h4 id="_1、indexof" tabindex="-1">1、indexOf <a class="header-anchor" href="#_1、indexof" aria-label="Permalink to &quot;1、indexOf&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">myCars[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;Saab&quot;</span><span style="color:#E1E4E8;">;      </span></span>
<span class="line"><span style="color:#E1E4E8;">myCars[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;Volvo&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">myCars[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;BMW&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> myArray.</span><span style="color:#B392F0;">indexOf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;hello&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//a 是hello值的索引值,     </span></span>
<span class="line"><span style="color:#6A737D;">// 1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">myCars[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Saab&quot;</span><span style="color:#24292E;">;      </span></span>
<span class="line"><span style="color:#24292E;">myCars[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Volvo&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">myCars[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;BMW&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> myArray.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;hello&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//a 是hello值的索引值,     </span></span>
<span class="line"><span style="color:#6A737D;">// 1</span></span></code></pre></div><h4 id="_2、concat-合并数组" tabindex="-1">2、concat 合并数组 <a class="header-anchor" href="#_2、concat-合并数组" aria-label="Permalink to &quot;2、concat 合并数组&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> hege </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;Cecilie&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Lone&quot;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> stale </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;Emil&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Tobias&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Linus&quot;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> children </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> hege.</span><span style="color:#B392F0;">concat</span><span style="color:#E1E4E8;">(stale);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//children 是 两个数组的合并</span></span>
<span class="line"><span style="color:#6A737D;">//[Cecilie,Lone,Emil,Tobias,Linus]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> hege </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;Cecilie&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Lone&quot;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> stale </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;Emil&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Tobias&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Linus&quot;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> children </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> hege.</span><span style="color:#6F42C1;">concat</span><span style="color:#24292E;">(stale);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//children 是 两个数组的合并</span></span>
<span class="line"><span style="color:#6A737D;">//[Cecilie,Lone,Emil,Tobias,Linus]</span></span></code></pre></div><h4 id="_3、join" tabindex="-1">3、join <a class="header-anchor" href="#_3、join" aria-label="Permalink to &quot;3、join&quot;">​</a></h4><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;demo&quot;</span><span style="color:#E1E4E8;">&gt;点击按钮将数组作为字符串输出。&lt;/</span><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onclick</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">myFunction</span><span style="color:#9ECBFF;">()&quot;</span><span style="color:#E1E4E8;">&gt;点我&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">myFunction</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> fruits </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;Banana&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Orange&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Apple&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Mango&quot;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> x</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;demo&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">	x.innerHTML</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">fruits.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">// join 用于将数组内的元素转为字符串输出</span></span>
<span class="line"><span style="color:#6A737D;">// Banana,Orange,Apple,Mango</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">p</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;demo&quot;</span><span style="color:#24292E;">&gt;点击按钮将数组作为字符串输出。&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onclick</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">myFunction</span><span style="color:#032F62;">()&quot;</span><span style="color:#24292E;">&gt;点我&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">myFunction</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> fruits </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;Banana&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Orange&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Apple&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Mango&quot;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> x</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;demo&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	x.innerHTML</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">fruits.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// join 用于将数组内的元素转为字符串输出</span></span>
<span class="line"><span style="color:#6A737D;">// Banana,Orange,Apple,Mango</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h4 id="_4、pop" tabindex="-1">4、pop <a class="header-anchor" href="#_4、pop" aria-label="Permalink to &quot;4、pop&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</span></span>
<span class="line"><span style="color:#E1E4E8;">function myFunction(){</span></span>
<span class="line"><span style="color:#E1E4E8;">	fruits.</span><span style="color:#B392F0;">pop</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">	var x</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;demo&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">	x.innerHTML</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">fruits;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">//用于删除数组的最后一个元素</span></span>
<span class="line"><span style="color:#6A737D;">//[Banana,Orange,Apple]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</span></span>
<span class="line"><span style="color:#24292E;">function myFunction(){</span></span>
<span class="line"><span style="color:#24292E;">	fruits.</span><span style="color:#6F42C1;">pop</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">	var x</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;demo&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	x.innerHTML</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">fruits;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">//用于删除数组的最后一个元素</span></span>
<span class="line"><span style="color:#6A737D;">//[Banana,Orange,Apple]</span></span></code></pre></div><h4 id="_5、push" tabindex="-1">5、push <a class="header-anchor" href="#_5、push" aria-label="Permalink to &quot;5、push&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</span></span>
<span class="line"><span style="color:#E1E4E8;">function myFunction(){</span></span>
<span class="line"><span style="color:#E1E4E8;">	fruits.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Kiwi&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	var x</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;demo&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">	x.innerHTML</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">fruits;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">//用于向数组最后添加元素</span></span>
<span class="line"><span style="color:#6A737D;">//[Banana,Orange,Apple,Mango,Kiwi]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</span></span>
<span class="line"><span style="color:#24292E;">function myFunction(){</span></span>
<span class="line"><span style="color:#24292E;">	fruits.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Kiwi&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	var x</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;demo&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	x.innerHTML</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">fruits;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">//用于向数组最后添加元素</span></span>
<span class="line"><span style="color:#6A737D;">//[Banana,Orange,Apple,Mango,Kiwi]</span></span></code></pre></div><h4 id="_6、reverse" tabindex="-1">6、reverse <a class="header-anchor" href="#_6、reverse" aria-label="Permalink to &quot;6、reverse&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</span></span>
<span class="line"><span style="color:#E1E4E8;">function myFunction(){</span></span>
<span class="line"><span style="color:#E1E4E8;">	fruits.</span><span style="color:#B392F0;">reverse</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">	var x</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;demo&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">	x.innerHTML</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">fruits;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">//实现数组元素反向排序</span></span>
<span class="line"><span style="color:#6A737D;">//[Mango,Apple,Orange,Banana]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</span></span>
<span class="line"><span style="color:#24292E;">function myFunction(){</span></span>
<span class="line"><span style="color:#24292E;">	fruits.</span><span style="color:#6F42C1;">reverse</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">	var x</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;demo&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	x.innerHTML</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">fruits;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;">//实现数组元素反向排序</span></span>
<span class="line"><span style="color:#6A737D;">//[Mango,Apple,Orange,Banana]</span></span></code></pre></div><h4 id="_7、shift-unshift" tabindex="-1">7、shift unshift <a class="header-anchor" href="#_7、shift-unshift" aria-label="Permalink to &quot;7、shift unshift&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> fruits </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;Banana&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Orange&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Apple&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Mango&quot;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">myFunction</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> delell </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> fruits.</span><span style="color:#B392F0;">shift</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> x</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;demo&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">	x.innerHTML</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;删除后数组为：&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">  fruits;</span></span>
<span class="line"><span style="color:#E1E4E8;">	document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;demo2&quot;</span><span style="color:#E1E4E8;">).innerHTML</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;删除的元素是：&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">  delell;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">//用于删除数组的第一个元素</span></span>
<span class="line"><span style="color:#6A737D;">//删除后数组为：Orange,Apple,Mango;删除的元素是：Banana</span></span>
<span class="line"><span style="color:#6A737D;">//----------------------------------------------</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">myFunction</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> fruits </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;Banana&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Orange&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Apple&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Mango&quot;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">	fruits.</span><span style="color:#B392F0;">unshift</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Lemon&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;Pineapple&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> x</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;demo&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">	x.innerHTML</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">fruits;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">//用于向数组开头加入元素</span></span>
<span class="line"><span style="color:#6A737D;">//[Lemon,Pineapple,Banana,Orange,Apple,Mango]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> fruits </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;Banana&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Orange&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Apple&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Mango&quot;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">myFunction</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> delell </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> fruits.</span><span style="color:#6F42C1;">shift</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> x</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;demo&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	x.innerHTML</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;删除后数组为：&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;">  fruits;</span></span>
<span class="line"><span style="color:#24292E;">	document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;demo2&quot;</span><span style="color:#24292E;">).innerHTML</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;删除的元素是：&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;">  delell;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//用于删除数组的第一个元素</span></span>
<span class="line"><span style="color:#6A737D;">//删除后数组为：Orange,Apple,Mango;删除的元素是：Banana</span></span>
<span class="line"><span style="color:#6A737D;">//----------------------------------------------</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">myFunction</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> fruits </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;Banana&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Orange&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Apple&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Mango&quot;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">	fruits.</span><span style="color:#6F42C1;">unshift</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Lemon&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;Pineapple&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> x</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;demo&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	x.innerHTML</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">fruits;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//用于向数组开头加入元素</span></span>
<span class="line"><span style="color:#6A737D;">//[Lemon,Pineapple,Banana,Orange,Apple,Mango]</span></span></code></pre></div><h4 id="_8、sort" tabindex="-1">8、sort <a class="header-anchor" href="#_8、sort" aria-label="Permalink to &quot;8、sort&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">myFunction</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> fruits </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;Banana&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Orange&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Apple&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Mango&quot;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">	fruits.</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> x</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;demo&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">	x.innerHTML</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">fruits;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">//用于将数组内的元素按照字母顺序排序</span></span>
<span class="line"><span style="color:#6A737D;">//[Apple,Banana,Mango,Orange]</span></span>
<span class="line"><span style="color:#6A737D;">//---------------------------------------------------</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">myFunction</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> points </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">40</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">	points.</span><span style="color:#B392F0;">sort</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">,</span><span style="color:#FFAB70;">b</span><span style="color:#E1E4E8;">){</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> a</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">b});   </span><span style="color:#6A737D;">//这里的a-b指的是从a到b，不是a减b，即从小到大</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> x</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;demo&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">	x.innerHTML</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">points;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">//用于将数组内的元素按照升序排列</span></span>
<span class="line"><span style="color:#6A737D;">//[1,5,10,25,40,100]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">myFunction</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> fruits </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;Banana&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Orange&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Apple&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Mango&quot;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">	fruits.</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> x</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;demo&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	x.innerHTML</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">fruits;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//用于将数组内的元素按照字母顺序排序</span></span>
<span class="line"><span style="color:#6A737D;">//[Apple,Banana,Mango,Orange]</span></span>
<span class="line"><span style="color:#6A737D;">//---------------------------------------------------</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">myFunction</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> points </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">40</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">25</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">	points.</span><span style="color:#6F42C1;">sort</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">a</span><span style="color:#24292E;">,</span><span style="color:#E36209;">b</span><span style="color:#24292E;">){</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> a</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">b});   </span><span style="color:#6A737D;">//这里的a-b指的是从a到b，不是a减b，即从小到大</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> x</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;demo&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	x.innerHTML</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">points;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//用于将数组内的元素按照升序排列</span></span>
<span class="line"><span style="color:#6A737D;">//[1,5,10,25,40,100]</span></span></code></pre></div><h4 id="_9、slice" tabindex="-1">9、slice <a class="header-anchor" href="#_9、slice" aria-label="Permalink to &quot;9、slice&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//情况一</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">];  </span><span style="color:#6A737D;">//定义数组</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">splice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);  </span><span style="color:#6A737D;">//从第三个元素开始执行删除</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(b);  </span><span style="color:#6A737D;">//b是[1,2]</span></span>
<span class="line"><span style="color:#6A737D;">//传递一个参数，则该方法仅执行删除操作，参数值指定删除元素的起始下标（包含该下标元素）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//情况2</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">];  </span><span style="color:#6A737D;">//定义数组</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">splice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);  </span><span style="color:#6A737D;">//从第三个元素开始执行删除，删除元素个数为2个</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(b);  </span><span style="color:#6A737D;">//b是[1,2,5]</span></span>
<span class="line"><span style="color:#6A737D;">// 传递两个参数，则第 2 个参数值表示要删除元素的个数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//情况3</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">];  </span><span style="color:#6A737D;">//定义数组</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">splice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">);  </span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(a);  </span><span style="color:#6A737D;">//a是[1,2,6,7,5]</span></span>
<span class="line"><span style="color:#6A737D;">// 传递3个及以上，第三个及以后的参数作为需要插入的元素。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//情况4</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">];   </span><span style="color:#6A737D;">//定义数组</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">splice</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">);  </span><span style="color:#6A737D;">//第一、二个参数都为负值</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(a);  </span><span style="color:#6A737D;">//返回[1,2,3,6,7,4,5]</span></span>
<span class="line"><span style="color:#6A737D;">// 如果第 1 个参数为负值，则按绝对值从数组右侧开始向左侧定位。如果第 2 个参数为负值，则被视为 0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//情况一</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">];  </span><span style="color:#6A737D;">//定义数组</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">splice</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);  </span><span style="color:#6A737D;">//从第三个元素开始执行删除</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(b);  </span><span style="color:#6A737D;">//b是[1,2]</span></span>
<span class="line"><span style="color:#6A737D;">//传递一个参数，则该方法仅执行删除操作，参数值指定删除元素的起始下标（包含该下标元素）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//情况2</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">];  </span><span style="color:#6A737D;">//定义数组</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">splice</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);  </span><span style="color:#6A737D;">//从第三个元素开始执行删除，删除元素个数为2个</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(b);  </span><span style="color:#6A737D;">//b是[1,2,5]</span></span>
<span class="line"><span style="color:#6A737D;">// 传递两个参数，则第 2 个参数值表示要删除元素的个数</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//情况3</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">];  </span><span style="color:#6A737D;">//定义数组</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">splice</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">);  </span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(a);  </span><span style="color:#6A737D;">//a是[1,2,6,7,5]</span></span>
<span class="line"><span style="color:#6A737D;">// 传递3个及以上，第三个及以后的参数作为需要插入的元素。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//情况4</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">];   </span><span style="color:#6A737D;">//定义数组</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">splice</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">7</span><span style="color:#24292E;">);  </span><span style="color:#6A737D;">//第一、二个参数都为负值</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(a);  </span><span style="color:#6A737D;">//返回[1,2,3,6,7,4,5]</span></span>
<span class="line"><span style="color:#6A737D;">// 如果第 1 个参数为负值，则按绝对值从数组右侧开始向左侧定位。如果第 2 个参数为负值，则被视为 0</span></span></code></pre></div><h4 id="_10、splice" tabindex="-1">10、splice <a class="header-anchor" href="#_10、splice" aria-label="Permalink to &quot;10、splice&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//情况1</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">];  </span><span style="color:#6A737D;">//定义数组</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);  </span><span style="color:#6A737D;">//截取数组中第三个元素，以及后面所有元素</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(b);  </span><span style="color:#6A737D;">//返回[3,4,5]</span></span>
<span class="line"><span style="color:#6A737D;">//如果仅指定一个参数，则表示从该参数值指定的下标位置开始，截取到数组的尾部所有元素</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//情况2</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">];  </span><span style="color:#6A737D;">//定义数组</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);  </span><span style="color:#6A737D;">//截取倒数第四个元素到倒数第二个元素前的元素</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(b);   </span><span style="color:#6A737D;">//返回[2,3]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//情况3</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">];  </span><span style="color:#6A737D;">//定义数组</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a.</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">);  </span><span style="color:#6A737D;">//截取第三个元素到第五个元素前的所有元素</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(b);  </span><span style="color:#6A737D;">//返回[3,4,5]</span></span>
<span class="line"><span style="color:#6A737D;">//能够截取数组中指定区段的元素，并返回这个子数组。该方法包含两个参数，分别指定截取子数组的起始和结束位置的下标</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//情况1</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">];  </span><span style="color:#6A737D;">//定义数组</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);  </span><span style="color:#6A737D;">//截取数组中第三个元素，以及后面所有元素</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(b);  </span><span style="color:#6A737D;">//返回[3,4,5]</span></span>
<span class="line"><span style="color:#6A737D;">//如果仅指定一个参数，则表示从该参数值指定的下标位置开始，截取到数组的尾部所有元素</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//情况2</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">];  </span><span style="color:#6A737D;">//定义数组</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);  </span><span style="color:#6A737D;">//截取倒数第四个元素到倒数第二个元素前的元素</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(b);   </span><span style="color:#6A737D;">//返回[2,3]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//情况3</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">];  </span><span style="color:#6A737D;">//定义数组</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a.</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">);  </span><span style="color:#6A737D;">//截取第三个元素到第五个元素前的所有元素</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(b);  </span><span style="color:#6A737D;">//返回[3,4,5]</span></span>
<span class="line"><span style="color:#6A737D;">//能够截取数组中指定区段的元素，并返回这个子数组。该方法包含两个参数，分别指定截取子数组的起始和结束位置的下标</span></span></code></pre></div><h4 id="_11、map" tabindex="-1">11、map <a class="header-anchor" href="#_11、map" aria-label="Permalink to &quot;11、map&quot;">​</a></h4><p>作用：按照某种映射关系,把数组的每一个元素给修改了</p><ul><li>注意： <ul><li>map()方法不会对空数组进行检测</li><li>map()方法不会改变原始数组， 返回映射之后的新数组</li></ul></li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> numbers </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">myFunction</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    x </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;demo&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    x.innerHTML </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> numbers.</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(Math.sqrt);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">myFunction</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#6A737D;">//2,3,4,5</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> numbers </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">16</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">25</span><span style="color:#24292E;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">myFunction</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    x </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;demo&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    x.innerHTML </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> numbers.</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(Math.sqrt);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">myFunction</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#6A737D;">//2,3,4,5</span></span></code></pre></div><h2 id="三、对象" tabindex="-1">三、对象 <a class="header-anchor" href="#三、对象" aria-label="Permalink to &quot;三、对象&quot;">​</a></h2><h2 id="四、math" tabindex="-1">四、Math <a class="header-anchor" href="#四、math" aria-label="Permalink to &quot;四、Math&quot;">​</a></h2><h2 id="五、常见循环" tabindex="-1">五、常见循环 <a class="header-anchor" href="#五、常见循环" aria-label="Permalink to &quot;五、常见循环&quot;">​</a></h2><h3 id="一、for-循环" tabindex="-1">一、for 循环 <a class="header-anchor" href="#一、for-循环" aria-label="Permalink to &quot;一、for 循环&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;i</span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">;i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(i)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;i</span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">;i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(i)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="二、for-in-循环对象-不要循环数组" tabindex="-1">二、for in <code>循环对象，不要循环数组</code> <a class="header-anchor" href="#二、for-in-循环对象-不要循环数组" aria-label="Permalink to &quot;二、for in \`循环对象，不要循环数组\`&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {a:</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, b:</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, c:</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> prop </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> obj) {    </span><span style="color:#6A737D;">//prop指对象的属性名</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(prop, obj[prop]);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 输出:</span></span>
<span class="line"><span style="color:#6A737D;">// a,1</span></span>
<span class="line"><span style="color:#6A737D;">// b,2</span></span>
<span class="line"><span style="color:#6A737D;">// c,3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {a:</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, b:</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, c:</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> prop </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> obj) {    </span><span style="color:#6A737D;">//prop指对象的属性名</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(prop, obj[prop]);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 输出:</span></span>
<span class="line"><span style="color:#6A737D;">// a,1</span></span>
<span class="line"><span style="color:#6A737D;">// b,2</span></span>
<span class="line"><span style="color:#6A737D;">// c,3</span></span></code></pre></div><h3 id="三、foreach-循环数组" tabindex="-1">三、forEach <code>循环数组</code> <a class="header-anchor" href="#三、foreach-循环数组" aria-label="Permalink to &quot;三、forEach \`循环数组\`&quot;">​</a></h3><blockquote><p>forEach里面没办法跳出break循环</p></blockquote><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> arr </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;123&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;qwewq&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;sfds&#39;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">myArray.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">index</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(value,index);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#6A737D;">//输出</span></span>
<span class="line"><span style="color:#6A737D;">//&quot;123&quot;,1</span></span>
<span class="line"><span style="color:#6A737D;">//&quot;qwewq&quot;,2</span></span>
<span class="line"><span style="color:#6A737D;">//&quot;sfds&quot;,3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> arr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;123&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;qwewq&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;sfds&#39;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">myArray.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">value</span><span style="color:#24292E;">, </span><span style="color:#E36209;">index</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(value,index);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#6A737D;">//输出</span></span>
<span class="line"><span style="color:#6A737D;">//&quot;123&quot;,1</span></span>
<span class="line"><span style="color:#6A737D;">//&quot;qwewq&quot;,2</span></span>
<span class="line"><span style="color:#6A737D;">//&quot;sfds&quot;,3</span></span></code></pre></div><h3 id="四、for-of-循环数组" tabindex="-1">四、for of 循环数组 <a class="header-anchor" href="#四、for-of-循环数组" aria-label="Permalink to &quot;四、for of 循环数组&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//遍历字符串, 有对应值，但是没有index索引</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Asher&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> char </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> name){</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(char);         </span><span style="color:#6A737D;">//A s h e r</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//遍历字符串, 有对应值，但是没有index索引</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Asher&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> char </span><span style="color:#D73A49;">of</span><span style="color:#24292E;"> name){</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(char);         </span><span style="color:#6A737D;">//A s h e r</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,61),e=[o];function t(c,r,E,y,i,F){return a(),n("div",null,e)}const A=s(p,[["render",t]]);export{d as __pageData,A as default};
