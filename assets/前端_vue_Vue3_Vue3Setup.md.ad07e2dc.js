import{_ as s,c as a,o as e,a as l}from"./app.eb215157.js";const F=JSON.parse('{"title":"Vue3Setup --笔记","description":"","frontmatter":{},"headers":[{"level":2,"title":"使用方式","slug":"使用方式","link":"#使用方式","children":[]}],"relativePath":"前端/vue/Vue3/Vue3Setup.md","lastUpdated":1669705325000}'),t={name:"前端/vue/Vue3/Vue3Setup.md"},p=l(`<h1 id="vue3setup-笔记" tabindex="-1">Vue3Setup --笔记 <a class="header-anchor" href="#vue3setup-笔记" aria-hidden="true">#</a></h1><h2 id="使用方式" tabindex="-1">使用方式 <a class="header-anchor" href="#使用方式" aria-hidden="true">#</a></h2><blockquote><p>方式一：script标签直接添加setup</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">script setup lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#A6ACCD;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><ul><li><p>内部不需要单独通过setup 来return对象，可直接在template使用</p></li><li><p>组件名称不需要单独声明，外部直接引用文件名即可</p><ul><li><p>如需声明，可直接在script标签上声明即可，如下</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">lang</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">system-user</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></li></ul></li></ul></blockquote><blockquote><p>方式二：script 内部单独建立setup，略</p></blockquote><p>文件全局搜索 + 文件中查找 =&gt; 定位文件</p><ul><li>全局搜索：只会搜索文件名 <code>两次shift</code></li><li>文件中查找：所有文件中查找指定代码 Alt + F</li></ul>`,6),n=[p];function o(c,r,i,u,D,d){return e(),a("div",null,n)}const _=s(t,[["render",o]]);export{F as __pageData,_ as default};
