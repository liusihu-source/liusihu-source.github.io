import{_ as s,o as a,c as p,Q as l}from"./chunks/framework.a7175731.js";const h=JSON.parse('{"title":"Vue3Setup --笔记","description":"","frontmatter":{},"headers":[],"relativePath":"前端/vue/Vue3/Vue3Setup.md","filePath":"前端/vue/Vue3/Vue3Setup.md","lastUpdated":null}'),t={name:"前端/vue/Vue3/Vue3Setup.md"},e=l(`<h1 id="vue3setup-笔记" tabindex="-1">Vue3Setup --笔记 <a class="header-anchor" href="#vue3setup-笔记" aria-label="Permalink to &quot;Vue3Setup --笔记&quot;">​</a></h1><h2 id="使用方式" tabindex="-1">使用方式 <a class="header-anchor" href="#使用方式" aria-label="Permalink to &quot;使用方式&quot;">​</a></h2><blockquote><p>方式一：script标签直接添加setup</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">script setup lang</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;ts&quot;</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&lt;/</span><span style="color:#E1E4E8;">script</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">script setup lang</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;ts&quot;</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&lt;/</span><span style="color:#24292E;">script</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><ul><li><p>内部不需要单独通过setup 来return对象，可直接在template使用</p></li><li><p>组件名称不需要单独声明，外部直接引用文件名即可</p><ul><li><p>如需声明，可直接在script标签上声明即可，如下</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;ts&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setup</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;system-user&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;ts&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setup</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;system-user&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span></code></pre></div></li></ul></li></ul></blockquote><blockquote><p>方式二：script 内部单独建立setup，略</p></blockquote><p>文件全局搜索 + 文件中查找 =&gt; 定位文件</p><ul><li>全局搜索：只会搜索文件名 <code>两次shift</code></li><li>文件中查找：所有文件中查找指定代码 Alt + F</li></ul>`,6),n=[e];function o(c,r,i,u,y,E){return a(),p("div",null,n)}const g=s(t,[["render",o]]);export{h as __pageData,g as default};
