import{_ as o,c as a,a2 as t,o as d}from"./chunks/framework.BQmytedh.js";const h=JSON.parse('{"title":"VNode及Diff --笔记","description":"","frontmatter":{},"headers":[],"relativePath":"前端/vue/共用/VNode及Diff.md","filePath":"前端/vue/共用/VNode及Diff.md","lastUpdated":null}'),r={name:"前端/vue/共用/VNode及Diff.md"};function i(f,e,n,c,l,s){return d(),a("div",null,e[0]||(e[0]=[t('<h1 id="vnode及diff-笔记" tabindex="-1">VNode及Diff --笔记 <a class="header-anchor" href="#vnode及diff-笔记" aria-label="Permalink to &quot;VNode及Diff --笔记&quot;">​</a></h1><blockquote><p><a href="https://vue3js.cn/interview/vue/vnode.html#%E4%B8%80%E3%80%81%E4%BB%80%E4%B9%88%E6%98%AF%E8%99%9A%E6%8B%9Fdom" target="_blank" rel="noreferrer">https://vue3js.cn/interview/vue/vnode.html#一、什么是虚拟dom</a></p></blockquote><h2 id="vnode" tabindex="-1">VNode <a class="header-anchor" href="#vnode" aria-label="Permalink to &quot;VNode&quot;">​</a></h2><p>概念：真实DOM的抽象</p><p>作用：利用diff算法 减少 JS操作真实DOM带来的性能消耗、 跨平台(安卓 IOS)表示</p><p>构成：表现为一个JS Object对象，至少包含tag标签名、attrs属性和children子元素对象属性</p><p><code>src/core/vdom/vnode.js</code></p><h2 id="diff算法" tabindex="-1">Diff算法 <a class="header-anchor" href="#diff算法" aria-label="Permalink to &quot;Diff算法&quot;">​</a></h2><p>概念：同层树节点进行比较的高效算法</p><p>特点：从<code>两边向中间比较</code>、且只会在<code>同层级</code>进行比较</p><p>作用：新旧VNode节点比较</p>',11)]))}const u=o(r,[["render",i]]);export{h as __pageData,u as default};
