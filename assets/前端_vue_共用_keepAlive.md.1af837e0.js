import{_ as s,o as e,c as a,Q as l}from"./chunks/framework.a7175731.js";const y=JSON.parse('{"title":"KeepAlive --笔记","description":"","frontmatter":{},"headers":[],"relativePath":"前端/vue/共用/keepAlive.md","filePath":"前端/vue/共用/keepAlive.md","lastUpdated":null}'),n={name:"前端/vue/共用/keepAlive.md"},p=l(`<h1 id="keepalive-笔记" tabindex="-1">KeepAlive --笔记 <a class="header-anchor" href="#keepalive-笔记" aria-label="Permalink to &quot;KeepAlive --笔记&quot;">​</a></h1><h2 id="一、基本概念" tabindex="-1">一、基本概念 <a class="header-anchor" href="#一、基本概念" aria-label="Permalink to &quot;一、基本概念&quot;">​</a></h2><p><code>keep-alive</code> 是 <code>vue</code> 中的内置组件，能够在组件切换过程中将状态保留在内存中，防止重复的渲染 <code>DOM</code>； <code>keep-alive</code> 包裹动态组件时，会缓存不活动的组件实例，而不是销毁它们；</p><p>主要作用：当我们在某些场景下不需要让页面重新加载时我们可以使用<code>keepalive</code></p><h2 id="二、使用场景" tabindex="-1">二、使用场景 <a class="header-anchor" href="#二、使用场景" aria-label="Permalink to &quot;二、使用场景&quot;">​</a></h2><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;app&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&#39;wrapper&#39;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;keep-alive&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;!-- 需要缓存的视图组件 --&gt; </span></span>
<span class="line"><span style="color:#E1E4E8;">        &lt;router-view v-if=&quot;$route.meta.keepAlive&quot;&gt;&lt;/router-view&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">     &lt;/keep-alive&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      &lt;!-- 不需要缓存的视图组件 --&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">     &lt;router-view v-if=&quot;!$route.meta.keepAlive&quot;&gt;&lt;/router-view&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;app&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&#39;wrapper&#39;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;keep-alive&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;!-- 需要缓存的视图组件 --&gt; </span></span>
<span class="line"><span style="color:#24292E;">        &lt;router-view v-if=&quot;$route.meta.keepAlive&quot;&gt;&lt;/router-view&gt;</span></span>
<span class="line"><span style="color:#24292E;">     &lt;/keep-alive&gt;</span></span>
<span class="line"><span style="color:#24292E;">      &lt;!-- 不需要缓存的视图组件 --&gt;</span></span>
<span class="line"><span style="color:#24292E;">     &lt;router-view v-if=&quot;!$route.meta.keepAlive&quot;&gt;&lt;/router-view&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span></code></pre></div>`,6),t=[p];function o(c,r,i,E,d,v){return e(),a("div",null,t)}const g=s(n,[["render",o]]);export{y as __pageData,g as default};
