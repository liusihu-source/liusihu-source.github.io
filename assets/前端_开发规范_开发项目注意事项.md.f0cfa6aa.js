import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.a7175731.js";const d=JSON.parse('{"title":"开发项目注意事项-----笔记","description":"","frontmatter":{},"headers":[],"relativePath":"前端/开发规范/开发项目注意事项.md","filePath":"前端/开发规范/开发项目注意事项.md","lastUpdated":null}'),p={name:"前端/开发规范/开发项目注意事项.md"},o=l(`<h1 id="开发项目注意事项-笔记" tabindex="-1">开发项目注意事项-----笔记 <a class="header-anchor" href="#开发项目注意事项-笔记" aria-label="Permalink to &quot;开发项目注意事项-----笔记&quot;">​</a></h1><h2 id="一、项目文件管理" tabindex="-1">一、项目文件管理 <a class="header-anchor" href="#一、项目文件管理" aria-label="Permalink to &quot;一、项目文件管理&quot;">​</a></h2><ul><li>node_modules文件夹不要传输，内部存放各个依赖包</li><li>README.md 该文件内部有自己的名称即可</li><li>package.json 和 package-lock.json文件要保存好，内部存放各个依赖包的版本信息，可通过包管理工具进行安装</li><li>其他无用文件可删除</li></ul><h2 id="二、编码问题" tabindex="-1">二、编码问题 <a class="header-anchor" href="#二、编码问题" aria-label="Permalink to &quot;二、编码问题&quot;">​</a></h2><h3 id="_1、模块导入方式" tabindex="-1">1、模块导入方式 <a class="header-anchor" href="#_1、模块导入方式" aria-label="Permalink to &quot;1、模块导入方式&quot;">​</a></h3><ul><li>ES Modules ：通过 import 和 export</li><li>CommonJS： 通过require 和 module.export</li></ul><h3 id="_2、代码风格" tabindex="-1">2、代码风格 <a class="header-anchor" href="#_2、代码风格" aria-label="Permalink to &quot;2、代码风格&quot;">​</a></h3><h4 id="_1-分号、单引号和双引号-通过eslint来设置" tabindex="-1">（1）分号、单引号和双引号，通过Eslint来设置 <a class="header-anchor" href="#_1-分号、单引号和双引号-通过eslint来设置" aria-label="Permalink to &quot;（1）分号、单引号和双引号，通过Eslint来设置&quot;">​</a></h4><ul><li>Eslint + Standard 或者 Eslint + Prettier，同时可配置一键修复的快捷键 <ul><li>WebStrom： 中可通过Ctrl + Alt + L</li><li>VsCode: Alt + Shift +F</li></ul></li></ul><h4 id="_2-单文件存在多个import语句" tabindex="-1">（2）单文件存在多个import语句 <a class="header-anchor" href="#_2-单文件存在多个import语句" aria-label="Permalink to &quot;（2）单文件存在多个import语句&quot;">​</a></h4><ul><li><p>考虑引入顺序问题，如将 node模块、vue、js、css等文件分类排列</p></li><li><p>可适当加上注释</p></li><li><p>原型属性</p><ul><li>Vue2中尽量不要再Vue原型上挂属性，可能导致编辑器无法提示对应<code>自定义原型属性</code><ul><li>可将Echarts 或者 axios在各个文件中单独引用</li></ul></li></ul></li></ul><h4 id="_3-跨域数据请求api" tabindex="-1">（3）跨域数据请求API <a class="header-anchor" href="#_3-跨域数据请求api" aria-label="Permalink to &quot;（3）跨域数据请求API&quot;">​</a></h4><ul><li><p>axios可以放到\`\`src/api\`下面，创建一个service实例并分发到各个文件。</p><ul><li>api/index.js</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> axios </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;axios&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Toast } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vant/lib/toast&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Vite项目导入env变量的方式，使得本文件的所在位置能够暴露出来</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ENV</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">meta</span><span style="color:#E1E4E8;">.env </span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">VITE_APP_BASEURL</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ENV</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">service</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> axios.</span><span style="color:#B392F0;">create</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  baseURL: </span><span style="color:#79B8FF;">VITE_APP_BASEURL</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//设置拦截器，用于处理请求回来的结果</span></span>
<span class="line"><span style="color:#E1E4E8;">service.interceptors.response.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  (</span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> response,</span></span>
<span class="line"><span style="color:#E1E4E8;">  (</span><span style="color:#FFAB70;">error</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (error.code </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;ECONNABORTED&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      Toast.</span><span style="color:#B392F0;">fail</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;请求超时！&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      Toast.</span><span style="color:#B392F0;">fail</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;未知错误&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">reject</span><span style="color:#E1E4E8;">(error)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> axios </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;axios&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Toast } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vant/lib/toast&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Vite项目导入env变量的方式，使得本文件的所在位置能够暴露出来</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ENV</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">import</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">meta</span><span style="color:#24292E;">.env </span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#005CC5;">VITE_APP_BASEURL</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ENV</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">service</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> axios.</span><span style="color:#6F42C1;">create</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  baseURL: </span><span style="color:#005CC5;">VITE_APP_BASEURL</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//设置拦截器，用于处理请求回来的结果</span></span>
<span class="line"><span style="color:#24292E;">service.interceptors.response.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  (</span><span style="color:#E36209;">response</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> response,</span></span>
<span class="line"><span style="color:#24292E;">  (</span><span style="color:#E36209;">error</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (error.code </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;ECONNABORTED&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      Toast.</span><span style="color:#6F42C1;">fail</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;请求超时！&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      Toast.</span><span style="color:#6F42C1;">fail</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;未知错误&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Promise</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">reject</span><span style="color:#24292E;">(error)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><ul><li>api/userAPI.js</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { service } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@/api/index&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// 用户路由</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">userAPI</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// POST 添加用户</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">registerData</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> service.</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/pollution/user/add&#39;</span><span style="color:#E1E4E8;">, registerData)</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// POST 登录接口</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">login</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">loginData</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> service.</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/pollution/user/login&#39;</span><span style="color:#E1E4E8;">, loginData)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { service } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@/api/index&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// 用户路由</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">userAPI</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// POST 添加用户</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#E36209;">registerData</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> service.</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/pollution/user/add&#39;</span><span style="color:#24292E;">, registerData)</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// POST 登录接口</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">login</span><span style="color:#24292E;">(</span><span style="color:#E36209;">loginData</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> service.</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/pollution/user/login&#39;</span><span style="color:#24292E;">, loginData)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>具体vue组件使用</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { userAPI } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@/api/userAPI&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> { </span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">res</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> userAPI.</span><span style="color:#B392F0;">login</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  createTime: </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  id: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  password: password.value,</span></span>
<span class="line"><span style="color:#E1E4E8;">  salt: </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  username: username.value</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { userAPI } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@/api/userAPI&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> { </span><span style="color:#E36209;">data</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">res</span><span style="color:#24292E;"> } </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> userAPI.</span><span style="color:#6F42C1;">login</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  createTime: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  id: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  password: password.value,</span></span>
<span class="line"><span style="color:#24292E;">  salt: </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  username: username.value</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div></li></ul><h4 id="_4-标签样式" tabindex="-1">（4）标签样式 <a class="header-anchor" href="#_4-标签样式" aria-label="Permalink to &quot;（4）标签样式&quot;">​</a></h4><ul><li>给对应标签添加一个class类名称</li><li>加上sass 和 scoped <ul><li>有等级划分</li><li>不会造成样式泄露</li></ul></li></ul><h4 id="_5-变量声明" tabindex="-1">（5）变量声明 <a class="header-anchor" href="#_5-变量声明" aria-label="Permalink to &quot;（5）变量声明&quot;">​</a></h4><ul><li>变量名称要易懂</li><li>用途相同的变量可以放到一起，如 let aaLayer, bbLayer</li><li>局部作用域的变量不要放到全局作用域</li><li>Let 声明变量值会变的，const声明引用值不会更改的</li></ul><h3 id="_3、地图开发" tabindex="-1">3、地图开发 <a class="header-anchor" href="#_3、地图开发" aria-label="Permalink to &quot;3、地图开发&quot;">​</a></h3><ul><li>地图操作大多与组件是分离的，一般会将地图操作放到一个map.js文件中，之后以方法的形式暴露出来。</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//封装map对象</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { loadScript, loadModules } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;esri-loader&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MapApp</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">mapView</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__esri</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">MapView</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/** Load ArcGIS JS API scripts. */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">loadScript</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">AGS_SDK</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;https://app.gdeei.cn/arcgis-js-api/library/4.16&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">loadScript</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">      url: </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#79B8FF;">AGS_SDK</span><span style="color:#9ECBFF;">}/init.js\`</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      css: </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#79B8FF;">AGS_SDK</span><span style="color:#9ECBFF;">}/esri/themes/light/main.css\`</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/** Init a map view */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">initMap</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">container</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">Map</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">MapView</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">loadModules</span><span style="color:#E1E4E8;">&lt;[</span><span style="color:#B392F0;">__esri</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">MapConstructor</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">__esri</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">MapViewConstructor</span><span style="color:#E1E4E8;">]&gt;([</span><span style="color:#9ECBFF;">&#39;esri/Map&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;esri/views/MapView&#39;</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">map</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Map</span><span style="color:#E1E4E8;">({ basemap: </span><span style="color:#9ECBFF;">&#39;satellite&#39;</span><span style="color:#E1E4E8;"> });</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.mapView </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MapView</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">      map, container,</span></span>
<span class="line"><span style="color:#E1E4E8;">      extent: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// autocasts as new Extent()</span></span>
<span class="line"><span style="color:#E1E4E8;">        xmin: </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9177811</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        ymin: </span><span style="color:#79B8FF;">4247000</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        xmax: </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">9176791</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        ymax: </span><span style="color:#79B8FF;">4247784</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        spatialReference: { wkid: </span><span style="color:#79B8FF;">102100</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/** add a feature layer to map */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">addFeatureLayer</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 使用 esri-loader 提供的 loadModules 方法加载这两个模块</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">FeatureLayer</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">QueryTask</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">loadModules</span><span style="color:#E1E4E8;">&lt;[</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">__esri</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">FeatureLayerConstructor</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">__esri</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">QueryTaskConstructor</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]&gt;([</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;esri/layers/FeatureLayer&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;esri/tasks/QueryTask&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 使用 FeatureLayer 服务的地址创建 QueryTask ， 并请求数据</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">queryTask</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__esri</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">QueryTask</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">QueryTask</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        url: </span><span style="color:#9ECBFF;">&#39;https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/Landscape_Trees/FeatureServer/0&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">featureSet</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__esri</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">FeatureSet</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> queryTask.</span><span style="color:#B392F0;">execute</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        where: </span><span style="color:#9ECBFF;">&#39;1 = 1&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        outFields: [</span><span style="color:#9ECBFF;">&#39;*&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        outSpatialReference: { wkid: </span><span style="color:#79B8FF;">4326</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">        returnGeometry: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// QueryTask 返回的结果是一个 FeatureSet ， 可以很方便的创建 FeatureLayer</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">featureLayer</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">__esri</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">FeatureLayer</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FeatureLayer</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">        geometryType: featureSet.geometryType </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        fields: featureSet.fields,</span></span>
<span class="line"><span style="color:#E1E4E8;">        source: featureSet.features,</span></span>
<span class="line"><span style="color:#E1E4E8;">        spatialReference: featureSet.spatialReference,</span></span>
<span class="line"><span style="color:#E1E4E8;">        objectIdField: featureSet.fields.</span><span style="color:#B392F0;">find</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">f</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> f.type </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;oid&#39;</span><span style="color:#E1E4E8;">).name</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.mapView.map.layers.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(featureLayer);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//封装map对象</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { loadScript, loadModules } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;esri-loader&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MapApp</span><span style="color:#24292E;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#E36209;">mapView</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">__esri</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">MapView</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/** Load ArcGIS JS API scripts. */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">loadScript</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">AGS_SDK</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;https://app.gdeei.cn/arcgis-js-api/library/4.16&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">loadScript</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      url: </span><span style="color:#032F62;">\`\${</span><span style="color:#005CC5;">AGS_SDK</span><span style="color:#032F62;">}/init.js\`</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      css: </span><span style="color:#032F62;">\`\${</span><span style="color:#005CC5;">AGS_SDK</span><span style="color:#032F62;">}/esri/themes/light/main.css\`</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/** Init a map view */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">initMap</span><span style="color:#24292E;">(</span><span style="color:#E36209;">container</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">Map</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">MapView</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">loadModules</span><span style="color:#24292E;">&lt;[</span><span style="color:#6F42C1;">__esri</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">MapConstructor</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">__esri</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">MapViewConstructor</span><span style="color:#24292E;">]&gt;([</span><span style="color:#032F62;">&#39;esri/Map&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;esri/views/MapView&#39;</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">map</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Map</span><span style="color:#24292E;">({ basemap: </span><span style="color:#032F62;">&#39;satellite&#39;</span><span style="color:#24292E;"> });</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.mapView </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MapView</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">      map, container,</span></span>
<span class="line"><span style="color:#24292E;">      extent: {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// autocasts as new Extent()</span></span>
<span class="line"><span style="color:#24292E;">        xmin: </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9177811</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        ymin: </span><span style="color:#005CC5;">4247000</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        xmax: </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">9176791</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        ymax: </span><span style="color:#005CC5;">4247784</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        spatialReference: { wkid: </span><span style="color:#005CC5;">102100</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/** add a feature layer to map */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">addFeatureLayer</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 使用 esri-loader 提供的 loadModules 方法加载这两个模块</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">FeatureLayer</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">QueryTask</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">loadModules</span><span style="color:#24292E;">&lt;[</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">__esri</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">FeatureLayerConstructor</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">__esri</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">QueryTaskConstructor</span></span>
<span class="line"><span style="color:#24292E;">    ]&gt;([</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;esri/layers/FeatureLayer&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;esri/tasks/QueryTask&#39;</span></span>
<span class="line"><span style="color:#24292E;">    ]);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 使用 FeatureLayer 服务的地址创建 QueryTask ， 并请求数据</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">queryTask</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">__esri</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">QueryTask</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">QueryTask</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        url: </span><span style="color:#032F62;">&#39;https://services.arcgis.com/V6ZHFr6zdgNZuVG0/arcgis/rest/services/Landscape_Trees/FeatureServer/0&#39;</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">featureSet</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">__esri</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">FeatureSet</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> queryTask.</span><span style="color:#6F42C1;">execute</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        where: </span><span style="color:#032F62;">&#39;1 = 1&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        outFields: [</span><span style="color:#032F62;">&#39;*&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        outSpatialReference: { wkid: </span><span style="color:#005CC5;">4326</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">        returnGeometry: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// QueryTask 返回的结果是一个 FeatureSet ， 可以很方便的创建 FeatureLayer</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">featureLayer</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">__esri</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">FeatureLayer</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FeatureLayer</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">        geometryType: featureSet.geometryType </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        fields: featureSet.fields,</span></span>
<span class="line"><span style="color:#24292E;">        source: featureSet.features,</span></span>
<span class="line"><span style="color:#24292E;">        spatialReference: featureSet.spatialReference,</span></span>
<span class="line"><span style="color:#24292E;">        objectIdField: featureSet.fields.</span><span style="color:#6F42C1;">find</span><span style="color:#24292E;">(</span><span style="color:#E36209;">f</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> f.type </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;oid&#39;</span><span style="color:#24292E;">).name</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.mapView.map.layers.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(featureLayer);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//组件调用</span></span>
<span class="line"><span style="color:#6A737D;">// Import stylesheets</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./style.css&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { MapApp } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./map-app&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">pathBase</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">location</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">protocol</span><span style="color:#9ECBFF;">}//\${</span><span style="color:#E1E4E8;">location</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">host</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">window[</span><span style="color:#9ECBFF;">&#39;dojoConfig&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  async: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  packages: [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// { name: &#39;THREE&#39;, location: &#39;https://unpkg.com/three@0.117.1/build&#39;, main: &#39;three.min&#39; },</span></span>
<span class="line"><span style="color:#E1E4E8;">  ]</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#E1E4E8;">window[</span><span style="color:#9ECBFF;">&#39;esriConfig&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { locale: </span><span style="color:#9ECBFF;">&#39;zh-cn&#39;</span><span style="color:#E1E4E8;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">initMap</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">app</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">MapApp</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> app.</span><span style="color:#B392F0;">loadScript</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> app.</span><span style="color:#B392F0;">initMap</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;viewDiv&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> app.</span><span style="color:#B392F0;">addFeatureLayer</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">initMap</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//组件调用</span></span>
<span class="line"><span style="color:#6A737D;">// Import stylesheets</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./style.css&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { MapApp } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./map-app&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">pathBase</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">location</span><span style="color:#032F62;">.</span><span style="color:#24292E;">protocol</span><span style="color:#032F62;">}//\${</span><span style="color:#24292E;">location</span><span style="color:#032F62;">.</span><span style="color:#24292E;">host</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">window[</span><span style="color:#032F62;">&#39;dojoConfig&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  async: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  packages: [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// { name: &#39;THREE&#39;, location: &#39;https://unpkg.com/three@0.117.1/build&#39;, main: &#39;three.min&#39; },</span></span>
<span class="line"><span style="color:#24292E;">  ]</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#24292E;">window[</span><span style="color:#032F62;">&#39;esriConfig&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { locale: </span><span style="color:#032F62;">&#39;zh-cn&#39;</span><span style="color:#24292E;"> };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">initMap</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">app</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MapApp</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> app.</span><span style="color:#6F42C1;">loadScript</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> app.</span><span style="color:#6F42C1;">initMap</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;viewDiv&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> app.</span><span style="color:#6F42C1;">addFeatureLayer</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">initMap</span><span style="color:#24292E;">();</span></span></code></pre></div><h3 id="_4、技术选型" tabindex="-1">4、技术选型 <a class="header-anchor" href="#_4、技术选型" aria-label="Permalink to &quot;4、技术选型&quot;">​</a></h3><ul><li>小项目可用Bus传值，中大型项目可使用Vuex和pinia等状态管理对象</li><li>选择依赖包，查看github上面的更新时间和周下载量</li></ul>`,23),e=[o];function c(t,r,E,y,i,F){return a(),n("div",null,e)}const C=s(p,[["render",c]]);export{d as __pageData,C as default};
