import{_ as l,c as e,o as a,a as s}from"./app.dd805ce0.js";const n="/assets/1664939881754.f3849299.png",o="/assets/1664940347022.650b9e0a.png",g=JSON.parse('{"title":"Node --笔记","description":"","frontmatter":{},"headers":[{"level":2,"title":"一、安装","slug":"一、安装","link":"#一、安装","children":[]},{"level":2,"title":"二、NodeJS 与 JavaScript","slug":"二、nodejs-与-javascript","link":"#二、nodejs-与-javascript","children":[{"level":3,"title":"1、首先要掌握以及概念","slug":"_1、首先要掌握以及概念","link":"#_1、首先要掌握以及概念","children":[]}]},{"level":2,"title":"三、常用命令及笔记","slug":"三、常用命令及笔记","link":"#三、常用命令及笔记","children":[{"level":3,"title":"1、启动 和 关闭Node","slug":"_1、启动-和-关闭node","link":"#_1、启动-和-关闭node","children":[]},{"level":3,"title":"2、读取环境变量（目的区分开发 或者 生产模式）","slug":"_2、读取环境变量-目的区分开发-或者-生产模式","link":"#_2、读取环境变量-目的区分开发-或者-生产模式","children":[]},{"level":3,"title":"3、探索JS对象 和 探索全局对象","slug":"_3、探索js对象-和-探索全局对象","link":"#_3、探索js对象-和-探索全局对象","children":[]},{"level":3,"title":"4、npm & yarn","slug":"_4、npm-yarn","link":"#_4、npm-yarn","children":[]},{"level":3,"title":"5、使用依赖包","slug":"_5、使用依赖包","link":"#_5、使用依赖包","children":[]},{"level":3,"title":"6、Package.json","slug":"_6、package-json","link":"#_6、package-json","children":[]},{"level":3,"title":"7、package-lock.json","slug":"_7、package-lock-json","link":"#_7、package-lock-json","children":[]}]}],"relativePath":"后端/Node/lecture.md","lastUpdated":1667130584000}'),i={name:"后端/Node/lecture.md"},p=s('<h1 id="node-笔记" tabindex="-1">Node --笔记 <a class="header-anchor" href="#node-笔记" aria-hidden="true">#</a></h1><h2 id="一、安装" tabindex="-1">一、安装 <a class="header-anchor" href="#一、安装" aria-hidden="true">#</a></h2><p>安装链接 <a href="http://nodejs.cn/download/" target="_blank" rel="noreferrer">http://nodejs.cn/download/</a> ，直接安装即可</p><h2 id="二、nodejs-与-javascript" tabindex="-1">二、NodeJS 与 JavaScript <a class="header-anchor" href="#二、nodejs-与-javascript" aria-hidden="true">#</a></h2><h3 id="_1、首先要掌握以及概念" tabindex="-1">1、首先要掌握以及概念 <a class="header-anchor" href="#_1、首先要掌握以及概念" aria-hidden="true">#</a></h3><ul><li>词汇结构</li><li>表达式</li><li>类型</li><li>类</li><li>变量</li><li>函数</li><li>this</li><li>箭头函数</li><li>循环</li><li>作用域</li><li>数组</li><li>模板字面量</li><li>分号</li><li>严格模式</li><li>ECMAScript 6、2016、2017</li></ul><h2 id="三、常用命令及笔记" tabindex="-1">三、常用命令及笔记 <a class="header-anchor" href="#三、常用命令及笔记" aria-hidden="true">#</a></h2><h3 id="_1、启动-和-关闭node" tabindex="-1">1、启动 和 关闭Node <a class="header-anchor" href="#_1、启动-和-关闭node" aria-hidden="true">#</a></h3><ul><li>Node app.js</li><li>ctrl + c</li></ul><h3 id="_2、读取环境变量-目的区分开发-或者-生产模式" tabindex="-1">2、读取环境变量（目的区分开发 或者 生产模式） <a class="header-anchor" href="#_2、读取环境变量-目的区分开发-或者-生产模式" aria-hidden="true">#</a></h3><ul><li>p<wbr>rocess.env.Node_ENV //注意：<code>process</code> <em>不需要 &quot;require&quot;，它是自动可用的。</em></li></ul><h3 id="_3、探索js对象-和-探索全局对象" tabindex="-1">3、探索JS对象 和 探索全局对象 <a class="header-anchor" href="#_3、探索js对象-和-探索全局对象" aria-hidden="true">#</a></h3><p><img src="'+n+'" alt="1664939881754"></p><h3 id="_4、npm-yarn" tabindex="-1">4、npm &amp; yarn <a class="header-anchor" href="#_4、npm-yarn" aria-hidden="true">#</a></h3><ul><li><p>npm install xxx@x.x.x //会默认将项目依赖包安装到项目中的node_modules中</p><ul><li>注意这些依赖包中会有自身及其他依赖</li><li>@x.x.x可以指定安装的版本号</li></ul></li><li><p>npm install --D xxx <code>会将该依赖包安装到开发环境中，不涉及生产环境</code></p><ul><li>或者 yarn add --D xxx</li></ul></li><li><p>npm install -g xxx <code>会将该依赖包安装到全局的位置</code></p><ul><li>全局位置查看 npm root -g //尽量不要使用全局安装，跟着项目走</li></ul><p><img src="'+o+`" alt="1664940347022"></p></li><li><p>​ npm outdated 可以查看当下所需依赖包的最新版本</p></li></ul><h3 id="_5、使用依赖包" tabindex="-1">5、使用依赖包 <a class="header-anchor" href="#_5、使用依赖包" aria-hidden="true">#</a></h3><ul><li>const a = require(&#39;xxx&#39;)</li></ul><h3 id="_6、package-json" tabindex="-1">6、Package.json <a class="header-anchor" href="#_6、package-json" aria-hidden="true">#</a></h3><ul><li><p>是工具的配置中心，也是<code>所有已安装</code>依赖包的名称 和 版本的地方</p></li><li><p>内容</p><ul><li><p><code>version</code> 表明了当前的版本。</p><ul><li><p>如&quot;version&quot;: &quot;1.0.0&quot;，其中第一个数字是主版本号，第二个是次版本号，第三个是补丁版本号</p><ul><li>主版本：重大更改的版本</li><li>次版本：引入向后兼容的更改版本</li><li>补丁版本：修复缺陷的版本</li></ul></li><li><p>demo</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">如果写入的是 〜0.13.0，则只更新补丁版本：即 0.13.1 可以，但 0.14.0 不可以。</span></span>
<span class="line"><span style="color:#A6ACCD;">如果写入的是 ^0.13.0，则要更新补丁版本和次版本：即 0.13.1、0.14.0、依此类推。</span></span>
<span class="line"><span style="color:#A6ACCD;">如果写入的是 0.13.0，则始终使用确切的版本。</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div></li></ul></li><li><p><code>name</code> 设置了应用程序/软件包的名称。</p></li><li><p><code>description</code> 是应用程序/软件包的简短描述。</p></li><li><p><code>main</code> 设置了应用程序的入口点。</p></li><li><p><code>private</code> 如果设置为 <code>true</code>，则可以防止应用程序/软件包被意外地发布到 <code>npm</code>。</p></li><li><p><code>scripts</code> 定义了一组可以运行的 node 脚本。</p></li><li><p><code>dependencies</code> 设置了作为依赖安装的 <code>npm</code> 软件包的列表。</p></li><li><p><code>devDependencies</code> 设置了作为开发依赖安装的 <code>npm</code> 软件包的列表。</p></li><li><p><code>engines</code> 设置了此软件包/应用程序在哪个版本的 Node.js 上运行。</p><ul><li>设置当下需要的运行环境，如下例子</li></ul><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">engines</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&gt;= 6.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">npm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&gt;= 3.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">yarn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">^0.13.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p><code>browserslist</code> 用于告知要支持哪些浏览器（及其版本）。</p></li></ul></li></ul><h3 id="_7、package-lock-json" tabindex="-1">7、package-lock.json <a class="header-anchor" href="#_7、package-lock-json" aria-hidden="true">#</a></h3><ul><li>版本锁定</li><li>执行 npm update 会更改package-lock.json内部的版本号</li></ul>`,21),t=[p];function c(r,d,h,u,_,D){return a(),e("div",null,t)}const F=l(i,[["render",c]]);export{g as __pageData,F as default};
