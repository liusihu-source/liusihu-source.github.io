import{_ as s,c as a,o as n,a as l}from"./app.02589403.js";const e="/assets/image-20230711160502470.86cb9643.png",u=JSON.parse('{"title":"PostGre --笔记","description":"","frontmatter":{},"headers":[{"level":3,"title":"1、Publications  &  Subscriptions","slug":"_1、publications-subscriptions","link":"#_1、publications-subscriptions","children":[{"level":4,"title":"Publications（发布）","slug":"publications-发布","link":"#publications-发布","children":[]},{"level":4,"title":"Subscriptions（订阅）","slug":"subscriptions-订阅","link":"#subscriptions-订阅","children":[]},{"level":4,"title":"使用案例","slug":"使用案例","link":"#使用案例","children":[{"level":5,"title":"1.创建发布","slug":"_1-创建发布","link":"#_1-创建发布","children":[]},{"level":5,"title":"2.创建订阅","slug":"_2-创建订阅","link":"#_2-创建订阅","children":[]}]}]},{"level":3,"title":"2、事件触发器","slug":"_2、事件触发器","link":"#_2、事件触发器","children":[{"level":4,"title":"使用案例","slug":"使用案例-1","link":"#使用案例-1","children":[{"level":5,"title":"1.创建表格","slug":"_1-创建表格","link":"#_1-创建表格","children":[]},{"level":5,"title":"2.创建触发器","slug":"_2-创建触发器","link":"#_2-创建触发器","children":[]},{"level":5,"title":"3.插入数据触发Triggers","slug":"_3-插入数据触发triggers","link":"#_3-插入数据触发triggers","children":[]}]}]},{"level":3,"title":"3、外部数据封装器","slug":"_3、外部数据封装器","link":"#_3、外部数据封装器","children":[{"level":4,"title":"使用案例","slug":"使用案例-2","link":"#使用案例-2","children":[{"level":5,"title":"1.创建外部数据服务器","slug":"_1-创建外部数据服务器","link":"#_1-创建外部数据服务器","children":[]},{"level":5,"title":"2.创建外部数据表","slug":"_2-创建外部数据表","link":"#_2-创建外部数据表","children":[]},{"level":5,"title":"3.查询外部数据表","slug":"_3-查询外部数据表","link":"#_3-查询外部数据表","children":[]}]}]},{"level":3,"title":"4、强制转换","slug":"_4、强制转换","link":"#_4、强制转换","children":[{"level":4,"title":"使用案例","slug":"使用案例-3","link":"#使用案例-3","children":[]}]},{"level":3,"title":"5、扩展","slug":"_5、扩展","link":"#_5、扩展","children":[{"level":4,"title":"使用案例","slug":"使用案例-4","link":"#使用案例-4","children":[{"level":5,"title":"1.检查扩展是否安装","slug":"_1-检查扩展是否安装","link":"#_1-检查扩展是否安装","children":[]},{"level":5,"title":"2.安装扩展（可选）","slug":"_2-安装扩展-可选","link":"#_2-安装扩展-可选","children":[]},{"level":5,"title":"3.使用扩展","slug":"_3-使用扩展","link":"#_3-使用扩展","children":[]}]}]},{"level":3,"title":"6、架构","slug":"_6、架构","link":"#_6、架构","children":[{"level":4,"title":"使用案例","slug":"使用案例-5","link":"#使用案例-5","children":[{"level":5,"title":"1.创建架构","slug":"_1-创建架构","link":"#_1-创建架构","children":[]},{"level":5,"title":"2.架构中创建表","slug":"_2-架构中创建表","link":"#_2-架构中创建表","children":[]},{"level":5,"title":"3.查询架构中的数据","slug":"_3-查询架构中的数据","link":"#_3-查询架构中的数据","children":[]}]}]}],"relativePath":"数据库/postgre.md","lastUpdated":1667130584000}'),p={name:"数据库/postgre.md"},o=l(`<h1 id="postgre-笔记" tabindex="-1">PostGre --笔记 <a class="header-anchor" href="#postgre-笔记" aria-hidden="true">#</a></h1><h3 id="_1、publications-subscriptions" tabindex="-1">1、Publications &amp; Subscriptions <a class="header-anchor" href="#_1、publications-subscriptions" aria-hidden="true">#</a></h3><blockquote><p><code>publications</code> 和 <code>subscriptions</code> 是用于支持逻辑复制（Logical Replication）功能的两个重要概念。</p></blockquote><h4 id="publications-发布" tabindex="-1">Publications（发布） <a class="header-anchor" href="#publications-发布" aria-hidden="true">#</a></h4><ul><li><code>publications</code> 是指在源数据库中定义的一组对象，用于指定要复制到订阅者数据库的数据。</li><li>通过创建 <code>publications</code>，您可以<strong>选择要复制的表、视图、函数等对象，并将其发布到订阅者数据库，以便订阅者可以接收和同步这些数据</strong>。</li><li><code>publications</code> 是在源数据库中定义的，用于将数据发送到订阅者数据库。</li></ul><h4 id="subscriptions-订阅" tabindex="-1">Subscriptions（订阅） <a class="header-anchor" href="#subscriptions-订阅" aria-hidden="true">#</a></h4><ul><li><code>subscriptions</code> 是指在订阅者数据库中创建的一组对象，用于订阅并接收源数据库中发布的数据。</li><li>通过创建 <code>subscriptions</code>，您可以连接到源数据库，并订阅特定的 <code>publications</code>，以便将发布的数据复制到订阅者数据库。</li><li><code>subscriptions</code> 是在订阅者数据库中创建的，用于接收和同步发布的数据</li></ul><h4 id="使用案例" tabindex="-1">使用案例 <a class="header-anchor" href="#使用案例" aria-hidden="true">#</a></h4><h5 id="_1-创建发布" tabindex="-1">1.创建发布 <a class="header-anchor" href="#_1-创建发布" aria-hidden="true">#</a></h5><p>在源数据库中创建一个 <code>publication</code>，指定要发布的表，并将其发送到订阅者数据库。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> PUBLICATION my_publication FOR </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> my_table;</span></span>
<span class="line"></span></code></pre></div><h5 id="_2-创建订阅" tabindex="-1">2.创建订阅 <a class="header-anchor" href="#_2-创建订阅" aria-hidden="true">#</a></h5><p>在订阅者数据库中创建一个 <code>subscription</code>，连接到源数据库，并订阅指定的 <code>publication</code>。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> SUBSCRIPTION my_subscription CONNECTION </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">host=source_host dbname=source_db user=replication_user password=replication_password</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> PUBLICATION my_publication;</span></span>
<span class="line"></span></code></pre></div><h3 id="_2、事件触发器" tabindex="-1">2、事件触发器 <a class="header-anchor" href="#_2、事件触发器" aria-hidden="true">#</a></h3><blockquote><p>在 PostgreSQL 数据库中，触发器（Triggers）是一种用于在数据库中特定事件发生时自动执行的数据库对象。触发器可以用于实现数据完整性约束、日志记录、复杂的数据更新逻辑等。</p><ul><li><strong>数据完整性约束</strong>： 触发器可以用于在插入、更新或删除数据时执行验证逻辑，以确保数据的完整性。例如，可以使用触发器验证外键关系、检查数据范围或执行其他自定义的数据验证操作</li><li><strong>日志记录</strong>：触发器可以用于记录对表的更改，包括谁在何时修改了数据。通过触发器，可以自动捕获数据的变化，并将其记录到日志表中，以便进行审计或跟踪操作历史。</li><li><strong>复杂数据更新逻辑</strong>：触发器可以用于执行复杂的数据更新逻辑，例如在数据更新时自动更新其他相关表中的数据，或根据某些条件触发其他操作。</li></ul></blockquote><h4 id="使用案例-1" tabindex="-1">使用案例 <a class="header-anchor" href="#使用案例-1" aria-hidden="true">#</a></h4><h5 id="_1-创建表格" tabindex="-1">1.创建表格 <a class="header-anchor" href="#_1-创建表格" aria-hidden="true">#</a></h5><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">orders</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">    id </span><span style="color:#C792EA;">serial</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PRIMARY KEY</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    order_date </span><span style="color:#C792EA;">date</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    total_amount </span><span style="color:#C792EA;">numeric</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">status</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">text</span></span>
<span class="line"><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h5 id="_2-创建触发器" tabindex="-1">2.创建触发器 <a class="header-anchor" href="#_2-创建触发器" aria-hidden="true">#</a></h5><blockquote><p>定义一个函数 <code>update_order_status()</code>，该函数在每次插入订单前会将状态设置为 &quot;Pending&quot;。然后，将该触发器绑定到 <code>orders</code> 表的 <code>INSERT</code> 事件。</p></blockquote><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">CREATE OR REPLACE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FUNCTION</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">update_order_status</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#F78C6C;">RETURNS</span><span style="color:#A6ACCD;"> TRIGGER </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> $$</span></span>
<span class="line"><span style="color:#F78C6C;">BEGIN</span></span>
<span class="line"><span style="color:#A6ACCD;">    NEW.status </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Pending</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">RETURN</span><span style="color:#A6ACCD;"> NEW;</span></span>
<span class="line"><span style="color:#F78C6C;">END</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">$$ </span><span style="color:#F78C6C;">LANGUAGE</span><span style="color:#A6ACCD;"> plpgsql;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TRIGGER</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">set_order_status</span></span>
<span class="line"><span style="color:#F78C6C;">BEFORE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">INSERT</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">ON</span><span style="color:#A6ACCD;"> orders</span></span>
<span class="line"><span style="color:#A6ACCD;">FOR EACH </span><span style="color:#F78C6C;">ROW</span></span>
<span class="line"><span style="color:#F78C6C;">EXECUTE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FUNCTION</span><span style="color:#A6ACCD;"> update_order_status</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h5 id="_3-插入数据触发triggers" tabindex="-1">3.插入数据触发Triggers <a class="header-anchor" href="#_3-插入数据触发triggers" aria-hidden="true">#</a></h5><blockquote><p>在执行上述插入操作时，触发器会自动将订单的状态设置为 &quot;Pending&quot;</p></blockquote><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">INSERT INTO</span><span style="color:#A6ACCD;"> orders (order_date, total_amount) </span><span style="color:#F78C6C;">VALUES</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2023-05-20</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;">.</span><span style="color:#F78C6C;">00</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>📓 触发器可以根据具体需求进行更复杂的配置和操作。您可以根据需要定义不同类型的触发器，如 <code>BEFORE INSERT</code>、<code>AFTER UPDATE</code> 等，并编写相应的触发器函数来实现所需的逻辑。在实际应用中，触发器可用于实现复杂的数据约束和业务逻辑。</p><h3 id="_3、外部数据封装器" tabindex="-1">3、外部数据封装器 <a class="header-anchor" href="#_3、外部数据封装器" aria-hidden="true">#</a></h3><blockquote><p>一种用于<code>连接和访问外部数据源的工具</code>。它们允许 PostgreSQL 数据库通过定义外部数据源的访问接口，以表的形式访问和查询外部数据。</p></blockquote><h4 id="使用案例-2" tabindex="-1">使用案例 <a class="header-anchor" href="#使用案例-2" aria-hidden="true">#</a></h4><h5 id="_1-创建外部数据服务器" tabindex="-1">1.创建外部数据服务器 <a class="header-anchor" href="#_1-创建外部数据服务器" aria-hidden="true">#</a></h5><p>创建外部数据服务器，用于连接到远程的 PostgreSQL 数据库。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">SERVER</span><span style="color:#A6ACCD;"> my_server</span></span>
<span class="line"><span style="color:#A6ACCD;">FOREIGN </span><span style="color:#F78C6C;">DATA</span><span style="color:#A6ACCD;"> WRAPPER postgres_fdw</span></span>
<span class="line"><span style="color:#A6ACCD;">OPTIONS (host </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">remote_host</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, dbname </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">remote_db</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, port </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">5432</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>该示例创建了一个名为 <code>my_server</code> 的外部数据服务器，使用了 <code>postgres_fdw</code> 数据转换器，并指定了连接到远程数据库的相关参数。</p><h5 id="_2-创建外部数据表" tabindex="-1">2.创建外部数据表 <a class="header-anchor" href="#_2-创建外部数据表" aria-hidden="true">#</a></h5><p>创建一个外部数据表，该表实际上是在 PostgreSQL 数据库中对远程表的引用。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> FOREIGN </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> my_table</span></span>
<span class="line"><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    id </span><span style="color:#C792EA;">serial</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">text</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    age </span><span style="color:#C792EA;">integer</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#F78C6C;">SERVER</span><span style="color:#A6ACCD;"> my_server</span></span>
<span class="line"><span style="color:#A6ACCD;">OPTIONS (table_name </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">remote_table</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>该示例创建了一个名为 <code>my_table</code> 的外部数据表，它引用了远程数据库中的 <code>remote_table</code> 表。定义了表的结构，包括列的名称和数据类型。</p><h5 id="_3-查询外部数据表" tabindex="-1">3.查询外部数据表 <a class="header-anchor" href="#_3-查询外部数据表" aria-hidden="true">#</a></h5><p>在 PostgreSQL 数据库中像查询本地表一样查询外部数据表</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> my_table;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="_4、强制转换" tabindex="-1">4、强制转换 <a class="header-anchor" href="#_4、强制转换" aria-hidden="true">#</a></h3><blockquote><p>用于在不同数据类型之间进行显式的数据类型转换。它允许将一个数据类型的值转换为另一个数据类型，以满足特定的需求，如下</p><ol><li>数据类型转换： 强制转换工具用于将一个数据类型的值转换为另一个数据类型。这在需要将数据从一种类型转换为另一种类型时非常有用，例如将字符串转换为数字、日期转换、布尔值转换等。</li><li>数据计算和操作： 强制转换工具可以用于执行数据计算和操作，其中涉及到不同数据类型之间的转换。通过将数据类型转换为适当的类型，可以执行算术运算、字符串操作、日期比较等操作。</li><li>数据格式化和显示： 强制转换工具可以用于将数据格式化为特定的数据类型，以便在查询结果中以所需的方式显示。这对于日期和时间的格式化、数值的精度和小数位数控制等非常有用</li></ol></blockquote><h4 id="使用案例-3" tabindex="-1">使用案例 <a class="header-anchor" href="#使用案例-3" aria-hidden="true">#</a></h4><blockquote><p>有一个名为 <code>my_table</code> 的表，其中包含一个名为 <code>amount</code> 的列，数据类型为 <code>numeric</code>。</p><p><strong>现将该列的值转换为整数类型，并计算每个值的平方。</strong></p></blockquote><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">-- 创建示例表</span></span>
<span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">my_table</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">    id </span><span style="color:#C792EA;">serial</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PRIMARY KEY</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    amount </span><span style="color:#C792EA;">numeric</span></span>
<span class="line"><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">-- 插入示例数据</span></span>
<span class="line"><span style="color:#F78C6C;">INSERT INTO</span><span style="color:#A6ACCD;"> my_table (amount) </span><span style="color:#F78C6C;">VALUES</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">.</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">), (</span><span style="color:#F78C6C;">15</span><span style="color:#A6ACCD;">.</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">), (</span><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;">.</span><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">-- 查询并转换数据类型</span></span>
<span class="line"><span style="color:#F78C6C;">SELECT</span></span>
<span class="line"><span style="color:#A6ACCD;">    amount,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">CAST</span><span style="color:#A6ACCD;">(amount </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">integer</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> integer_amount,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">POWER</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">CAST</span><span style="color:#A6ACCD;">(amount </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">integer</span><span style="color:#A6ACCD;">), </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> squared_amount</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> my_table;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="_5、扩展" tabindex="-1">5、扩展 <a class="header-anchor" href="#_5、扩展" aria-hidden="true">#</a></h3><blockquote><p>一种用于增加额外功能和功能的机制。通过使用扩展，您可以将第三方模块或自定义功能添加到 PostgreSQL 中，以满足特定的需求。扩展可以提供新的数据类型、函数、操作符、索引类型、语法等，以增强数据库的功能性。</p><ul><li>增加额外功能： 使用扩展，您可以向 PostgreSQL 数据库添加额外的功能和功能，以满足特定的需求。这可以是与<strong>数据处理、查询优化、空间分析、文本搜索、加密</strong>等相关的功能。</li><li>提供新的数据类型和函数： 扩展可以<strong>引入新的数据类型和函数</strong>，以支持特定领域的数据处理需求。例如，PostGIS 扩展引入了地理空间数据类型和相关函数，用于处理地理空间数据。</li><li>改进性能和优化： 一些扩展可以<strong>提供性能改进和查询优化</strong>的功能。它们可能提供更高效的索引类型、查询计划优化器、缓存机制等，以加快查询执行速度和提高数据库性能。</li></ul></blockquote><h4 id="使用案例-4" tabindex="-1">使用案例 <a class="header-anchor" href="#使用案例-4" aria-hidden="true">#</a></h4><h5 id="_1-检查扩展是否安装" tabindex="-1">1.检查扩展是否安装 <a class="header-anchor" href="#_1-检查扩展是否安装" aria-hidden="true">#</a></h5><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> pg_available_extensions </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">postgis</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_2-安装扩展-可选" tabindex="-1">2.安装扩展（可选） <a class="header-anchor" href="#_2-安装扩展-可选" aria-hidden="true">#</a></h5><p>如果PostGIS 扩展未安装，可以执行以下命令进行安装</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> EXTENSION postgis;</span></span>
<span class="line"></span></code></pre></div><h5 id="_3-使用扩展" tabindex="-1">3.使用扩展 <a class="header-anchor" href="#_3-使用扩展" aria-hidden="true">#</a></h5><p>使用 PostGIS 提供的功能，如创建地理空间数据表、执行空间查询等。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">-- 创建示例表</span></span>
<span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">my_table</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">    id </span><span style="color:#C792EA;">serial</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PRIMARY KEY</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    geom </span><span style="color:#F78C6C;">geometry</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">Point</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">4326</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">-- 插入示例数据</span></span>
<span class="line"><span style="color:#F78C6C;">INSERT INTO</span><span style="color:#A6ACCD;"> my_table (geom) </span><span style="color:#F78C6C;">VALUES</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">SRID=4326;POINT(10 20)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">-- 查询示例数据</span></span>
<span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> my_table;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>📖 上述示例创建了一个名为 <code>my_table</code> 的表，其中包含一个名为 <code>geom</code> 的地理空间数据列。然后，插入了一个包含经纬度坐标的示例数据，并执行了查询以查看结果。</p><h3 id="_6、架构" tabindex="-1">6、架构 <a class="header-anchor" href="#_6、架构" aria-hidden="true">#</a></h3><blockquote><p>一种组织和管理数据库对象的方式。架构工具用于创建、修改和管理数据库中的不同架构，以实现逻辑和物理分组、权限控制、命名空间隔离等功能。</p><ul><li><strong>数据分组和隔离</strong>：使用架构，可以将数据库对象（如表、视图、函数等）组织到不同的命名空间中，实现数据的逻辑分组和隔离。这有助于组织大型数据库，并提供更好的可维护性和可扩展性</li><li><strong>权限控制</strong>：用于实现对数据库对象的权限控制。可为不同的架构分配不同的访问权限，以限制用户对特定架构中的对象的访问和操作</li><li><strong>多租户支持</strong>： 使用架构，可实现多租户的数据隔离。每个租户可以在自己的架构中拥有独立的数据库对象，从而实现数据的物理隔离和安全性</li></ul></blockquote><h4 id="使用案例-5" tabindex="-1">使用案例 <a class="header-anchor" href="#使用案例-5" aria-hidden="true">#</a></h4><h5 id="_1-创建架构" tabindex="-1">1.创建架构 <a class="header-anchor" href="#_1-创建架构" aria-hidden="true">#</a></h5><p>在 PostgreSQL 数据库中，执行以下命令以创建一个名为 <code>my_schema</code> 的架构：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">SCHEMA</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">my_schema</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_2-架构中创建表" tabindex="-1">2.架构中创建表 <a class="header-anchor" href="#_2-架构中创建表" aria-hidden="true">#</a></h5><p>创建架构后，可在该架构中创建表或其他数据库对象。如创建一个在 <code>my_schema</code> 架构中的表：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">CREATE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">my_schema</span><span style="color:#A6ACCD;">.my_table (</span></span>
<span class="line"><span style="color:#A6ACCD;">    id </span><span style="color:#C792EA;">serial</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">PRIMARY KEY</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">varchar</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">255</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span></code></pre></div><h5 id="_3-查询架构中的数据" tabindex="-1">3.查询架构中的数据 <a class="header-anchor" href="#_3-查询架构中的数据" aria-hidden="true">#</a></h5><p>查询架构中的数据时，需要在表名前加上架构名称。例如：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> my_schema.my_table;</span></span>
<span class="line"></span></code></pre></div><hr><blockquote><p>本周更新了主机，导致pgAdmin4（本质类似Navicat）无法连接到PostGre，补充以下连接方式</p></blockquote><p><img src="`+e+'" alt="image-20230711160502470"></p><p>填写上表中对应的内容即可链接到本地Postgre服务，当然也可以连接远端服务器</p>',73),t=[o];function c(r,i,C,d,A,y){return n(),a("div",null,t)}const D=s(p,[["render",c]]);export{u as __pageData,D as default};
