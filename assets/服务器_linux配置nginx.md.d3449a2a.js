import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.a7175731.js";const p="/assets/检查nginx.86ed6e30.png",o="/assets/本地校验.abf6a60d.png",e="/assets/image-20230501074928697.2b9c1b09.png",t="/assets/image-20230501074956043.779cde0d.png",c="/assets/开启端口.656f0dbc.png",r="/assets/检查端口.f949ad4c.png",x=JSON.parse('{"title":"linux服务器 --笔记","description":"","frontmatter":{},"headers":[],"relativePath":"服务器/linux配置nginx.md","filePath":"服务器/linux配置nginx.md","lastUpdated":null}'),i={name:"服务器/linux配置nginx.md"},d=l(`<h1 id="linux服务器-笔记" tabindex="-1">linux服务器 --笔记 <a class="header-anchor" href="#linux服务器-笔记" aria-label="Permalink to &quot;linux服务器 --笔记&quot;">​</a></h1><h2 id="yum" tabindex="-1">yum <a class="header-anchor" href="#yum" aria-label="Permalink to &quot;yum&quot;">​</a></h2><h3 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h3><p>“yum,是Yellow dog Updater Modified的简称,起初是由yellow dog这一发行版的开发者Terra Soft研发,用python写成,那时还叫做yup(yellow dog updater),后经杜克大学的Linux@Duke开发团队进行改进,遂有此名。</p><h3 id="作用" tabindex="-1">作用 <a class="header-anchor" href="#作用" aria-label="Permalink to &quot;作用&quot;">​</a></h3><p>添加/删除/更新RPM/rpm包，能自动解决包的依赖性问题</p><ul><li>RPM管理支持事务机制。增强了程序安装卸载的管理。</li><li>RPM的功能：打包、安装、查询、升级、卸载、校验、数据库管理。</li></ul><h2 id="wget" tabindex="-1">wget <a class="header-anchor" href="#wget" aria-label="Permalink to &quot;wget&quot;">​</a></h2><h3 id="定义-1" tabindex="-1">定义 <a class="header-anchor" href="#定义-1" aria-label="Permalink to &quot;定义&quot;">​</a></h3><p>Wget是一个从网络上自动下载文件的自由工具,它支持HTTP,HTTPS和FTP协议,可以使用HTTP代理;Wget主要用于成批量地下载Internet网站上的文件,或制作远程网站的镜像。</p><h2 id="tar" tabindex="-1">tar <a class="header-anchor" href="#tar" aria-label="Permalink to &quot;tar&quot;">​</a></h2><h3 id="作用-压缩解压命令" tabindex="-1">作用：压缩解压命令 <a class="header-anchor" href="#作用-压缩解压命令" aria-label="Permalink to &quot;作用：压缩解压命令&quot;">​</a></h3><p>tar xzvf 压缩文件名称.tar.gz 文件或者目录名称</p><p>x是解压</p><p><strong>如果文件后缀是.tar 用tar xvf来解压</strong></p><p><strong>如果文件后缀是.tar.gz 用tar xzvf来解压</strong></p><p><strong>如果文件后缀是.tar.bz 用tar xjvf来解压</strong></p><h2 id="文件名-如-nginx" tabindex="-1">./文件名，如./nginx <a class="header-anchor" href="#文件名-如-nginx" aria-label="Permalink to &quot;./文件名，如./nginx&quot;">​</a></h2><p>作用： 执行文件</p><h3 id="linux安装nginx" tabindex="-1">Linux安装nginx <a class="header-anchor" href="#linux安装nginx" aria-label="Permalink to &quot;Linux安装nginx&quot;">​</a></h3><blockquote><p><strong>在linux下安装nginx，首先需要安装 gcc-c++编译器。然后安装nginx依赖的pcre和zlib包。最后安装nginx即可。</strong></p><p><strong>ls查看当前文件夹</strong></p></blockquote><p>1.先安装gcc-c++编译器</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">yum install gcc</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">c</span><span style="color:#F97583;">++</span></span>
<span class="line"><span style="color:#E1E4E8;">yum install </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">y openssl openssl</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">devel</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">yum install gcc</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">c</span><span style="color:#D73A49;">++</span></span>
<span class="line"><span style="color:#24292E;">yum install </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">y openssl openssl</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">devel</span></span></code></pre></div><p>2.再安装pcre包</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">yum install </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">y pcre pcre</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">devel</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">yum install </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">y pcre pcre</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">devel</span></span></code></pre></div><p>3.再安装zlib包</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">yum install </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">y zlib zlib</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">devel</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">yum install </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">y zlib zlib</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">devel</span></span></code></pre></div><blockquote><p><strong>下面进行nginx的安装</strong></p></blockquote><p>1.在/usr/local/下创建文件nginx文件</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">mkdir </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">usr</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">local</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">nginx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">mkdir </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">usr</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">local</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">nginx</span></span></code></pre></div><p>2.在网上下nginx包上传至Linux（<a href="https://nginx.org/download/%EF%BC%89%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD" target="_blank" rel="noreferrer">https://nginx.org/download/），也可以直接下载</a></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">wget https</span><span style="color:#F97583;">:</span><span style="color:#6A737D;">//nginx.org/download/nginx-1.19.9.tar.gz</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">wget https</span><span style="color:#D73A49;">:</span><span style="color:#6A737D;">//nginx.org/download/nginx-1.19.9.tar.gz</span></span></code></pre></div><p>3.解压并进入nginx目录</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">tar </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">zxvf nginx</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1.19</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">9</span><span style="color:#E1E4E8;">.tar.gz</span></span>
<span class="line"><span style="color:#E1E4E8;">cd nginx</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1.19</span><span style="color:#E1E4E8;">.</span><span style="color:#FDAEB7;font-style:italic;">9</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">tar </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">zxvf nginx</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1.19</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">9</span><span style="color:#24292E;">.tar.gz</span></span>
<span class="line"><span style="color:#24292E;">cd nginx</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1.19</span><span style="color:#24292E;">.</span><span style="color:#B31D28;font-style:italic;">9</span></span></code></pre></div><p>4.使用nginx默认配置</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">configure</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">.</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">configure</span></span></code></pre></div><p>5.编译安装</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">make</span></span>
<span class="line"><span style="color:#E1E4E8;">make install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">make</span></span>
<span class="line"><span style="color:#24292E;">make install</span></span></code></pre></div><p>6.查找安装路径</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">whereis nginx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">whereis nginx</span></span></code></pre></div><p>7.进入sbin目录，可以看到有一个可执行文件nginx，直接**./nginx**执行就OK了。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">./nginx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">./nginx</span></span></code></pre></div><p>9.查看是否启动成功</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">ps </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">ef </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> grep nginx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">ps </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">ef </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> grep nginx</span></span></code></pre></div><p><img src="`+p+'" alt="检查nginx"></p><p>10.然后在网页上访问自己的IP就可以了默认端口为80（出现如下欢迎界面就成功了！）</p><p><img src="'+o+'" alt="本地校验"></p><blockquote><p>如果此时无法访问部署的页面，可能是ECS没有将安全组的80协议端口打开，如下操作步骤打开即可</p></blockquote><p><img src="'+e+'" alt="image-20230501074928697"></p><p><img src="'+t+`" alt="image-20230501074956043"></p><blockquote><p><strong>注意问题</strong></p></blockquote><p>如以上步骤都完成且没有问题的话，就做如下操作</p><blockquote><p>防火墙</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">查看防火墙是否开启</span></span>
<span class="line"><span style="color:#E1E4E8;">systemctl status firewalld</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">查看防火墙是否开启</span></span>
<span class="line"><span style="color:#24292E;">systemctl status firewalld</span></span></code></pre></div><p><img src="`+c+`" alt="开启端口"></p><p>启动防火墙后，默认没有开启任何端口，需要手动开启端口。<strong>nginx默认是80端口</strong></p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">手动开启端口命令</span></span>
<span class="line"><span style="color:#E1E4E8;">firewall</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">cmd </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">zone</span><span style="color:#F97583;">=public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">add</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">port</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">80</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">tcp </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">permanent</span></span>
<span class="line"><span style="color:#E1E4E8;">命令含义： </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">zone #作用域 </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">add</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">port</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">80</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">tcp #添加端口，格式为：端口</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">通讯协议 </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">permanent #永久生效，没有此参数重启后失效</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">手动开启端口命令</span></span>
<span class="line"><span style="color:#24292E;">firewall</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">cmd </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">zone</span><span style="color:#D73A49;">=public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">add</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">port</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">80</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">tcp </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">permanent</span></span>
<span class="line"><span style="color:#24292E;">命令含义： </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">zone #作用域 </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">add</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">port</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">80</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">tcp #添加端口，格式为：端口</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">通讯协议 </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">permanent #永久生效，没有此参数重启后失效</span></span></code></pre></div><p>开启后需要重启防火墙才生效</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">systemctl restart firewalld.service</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">systemctl restart firewalld.service</span></span></code></pre></div><p>查看防火墙是否开启了80端口的访问</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"> firewall</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">cmd </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">list</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">all</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"> firewall</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">cmd </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">list</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">all</span></span></code></pre></div><p><img src="`+r+'" alt="检查端口"></p><blockquote><p><strong>开启后再次访问！！</strong></p></blockquote>',63),y=[d];function E(g,h,u,v,b,k){return a(),n("div",null,y)}const F=s(i,[["render",E]]);export{x as __pageData,F as default};
