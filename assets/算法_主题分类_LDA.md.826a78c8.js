import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.a7175731.js";const l="/assets/image-20240627103144565.a975539e.png",o="/assets/image-20240624225024132.d2428433.png",e="/assets/image-20240624225351608.b59a8ea8.png",t="/assets/image-20240625111331990.4bfc8991.png",c="/assets/image-20240625111721581.593daaae.png",r="/assets/image-20240625112003238.73c8e6f0.png",y="/assets/image-20240709102550766.f89f1213.png",E="/assets/image-20240709102943161.a54fcd3a.png",i="/assets/image-20240709102904262.c95544c1.png",b=JSON.parse('{"title":"LDA --笔记","description":"","frontmatter":{},"headers":[],"relativePath":"算法/主题分类/LDA.md","filePath":"算法/主题分类/LDA.md","lastUpdated":null}'),d={name:"算法/主题分类/LDA.md"},m=p('<h1 id="lda-笔记" tabindex="-1">LDA --笔记 <a class="header-anchor" href="#lda-笔记" aria-label="Permalink to &quot;LDA --笔记&quot;">​</a></h1><blockquote><p><a href="https://www.bilibili.com/video/BV1wB4y18724/?spm_id_from=333.880.my_history.page.click&amp;vd_source=c3aed98126d5ffa7b2c72cf011d9383c" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1wB4y18724/?spm_id_from=333.880.my_history.page.click&amp;vd_source=c3aed98126d5ffa7b2c72cf011d9383c</a></p></blockquote><h2 id="一、原理步骤" tabindex="-1">一、原理步骤 <a class="header-anchor" href="#一、原理步骤" aria-label="Permalink to &quot;一、原理步骤&quot;">​</a></h2><blockquote><p>步骤总结：</p><p>1、自行确定主题个数</p><p>2、所有文章放进第一个狄利克雷图形中，则每篇文章都有一个最大概率偏向一个主题</p><p>3、每篇文章偏向特定主题表示：该文章内容中的词语大多数和这个主题相关，只是目前不知道这些词具体是哪些</p><p>4、探寻这些词的具体内容：把所有文章所有词放进一个N维空间，之后把主题点放进该空间，则每个词属于特定空间会有一个概率值，该概率值受该词与主题点的距离，因此会得到一个二维矩阵——矩阵的每个主题，所有词都有一个概率值（大概率不同）</p><p>5、再回到原文章，因为词内容不确定。针对内部词语的概率分布，从上述二维矩阵中取最大概率词填充。指导最终填充出一个新文章。</p><p>6、判定新文章与原文章是否相同/相似，如果相同/相似，则两个狄利克雷分布合适。否则继续划分。</p></blockquote><p><img src="'+l+'" alt="image-20240627103144565"></p><p><img src="'+o+'" alt="image-20240624225024132"></p><p><img src="'+e+'" alt="image-20240624225351608"></p><p><img src="'+t+'" alt="image-20240625111331990"></p><p><img src="'+c+'" alt="image-20240625111721581"></p><p><img src="'+r+'" alt="image-20240625112003238"></p><h2 id="二、应用过程-gensim" tabindex="-1">二、应用过程-gensim <a class="header-anchor" href="#二、应用过程-gensim" aria-label="Permalink to &quot;二、应用过程-gensim&quot;">​</a></h2><blockquote><p>原文章：<a href="https://blog.csdn.net/weixin_41168304/article/details/122389948?ops_request_misc=%7B%22request%5Fid%22%3A%22172016325616800215045691%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=172016325616800215045691&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-122389948-null-null.142" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_41168304/article/details/122389948?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522172016325616800215045691%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=172016325616800215045691&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-122389948-null-null.142</a>^v100^control&amp;utm_term=LDA&amp;spm=1018.2226.3001.4187</p></blockquote><h3 id="_2-1-简介" tabindex="-1">2.1 简介 <a class="header-anchor" href="#_2-1-简介" aria-label="Permalink to &quot;2.1 简介&quot;">​</a></h3><h3 id="_2-2-使用" tabindex="-1">2.2 使用 <a class="header-anchor" href="#_2-2-使用" aria-label="Permalink to &quot;2.2 使用&quot;">​</a></h3><p><img src="'+y+`" alt="image-20240709102550766"></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> gensim</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> gensim </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> corpora</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> matplotlib.pyplot </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> plt</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> matplotlib</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> numpy </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> np</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> warnings</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> gensim.models.coherencemodel </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> CoherenceModel</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> gensim.models.ldamodel </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> LdaModel</span></span>
<span class="line"><span style="color:#E1E4E8;">warnings.filterwarnings(</span><span style="color:#9ECBFF;">&#39;ignore&#39;</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;"># To ignore all warnings that arise here to enhance clarity</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">readFile</span><span style="color:#E1E4E8;">(file):</span></span>
<span class="line"><span style="color:#E1E4E8;">    file_object2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">file</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">encoding</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;utf-8&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">errors</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;ignore&#39;</span><span style="color:#E1E4E8;">).read().split(</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;"># 一行行的读取内容</span></span>
<span class="line"><span style="color:#E1E4E8;">    data_set </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []  </span><span style="color:#6A737D;"># 建立存储分词的列表</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">range</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">len</span><span style="color:#E1E4E8;">(file_object2)):</span></span>
<span class="line"><span style="color:#E1E4E8;">        result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#E1E4E8;">        seg_list </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> file_object2[i].split()</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> w </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> seg_list:  </span><span style="color:#6A737D;"># 读取每一行分词</span></span>
<span class="line"><span style="color:#E1E4E8;">            result.append(w)</span></span>
<span class="line"><span style="color:#E1E4E8;">        data_set.append(result)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> data_set</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 计算困惑度</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">perplexity</span><span style="color:#E1E4E8;">(num_topics):</span></span>
<span class="line"><span style="color:#E1E4E8;">    ldamodel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> LdaModel(corpus, </span><span style="color:#FFAB70;">num_topics</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">num_topics, </span><span style="color:#FFAB70;">id2word</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">dictionary, </span><span style="color:#FFAB70;">passes</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(ldamodel.print_topics(</span><span style="color:#FFAB70;">num_topics</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">num_topics, </span><span style="color:#FFAB70;">num_words</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(ldamodel.log_perplexity(corpus))</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ldamodel.log_perplexity(corpus)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 计算coherence</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">coherence</span><span style="color:#E1E4E8;">(num_topics):</span></span>
<span class="line"><span style="color:#E1E4E8;">    ldamodel </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> LdaModel(corpus, </span><span style="color:#FFAB70;">num_topics</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">num_topics, </span><span style="color:#FFAB70;">id2word</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">dictionary, </span><span style="color:#FFAB70;">passes</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">random_state</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(ldamodel.print_topics(</span><span style="color:#FFAB70;">num_topics</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">num_topics, </span><span style="color:#FFAB70;">num_words</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">    ldacm </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> CoherenceModel(</span><span style="color:#FFAB70;">model</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">ldamodel, </span><span style="color:#FFAB70;">texts</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">fileContent, </span><span style="color:#FFAB70;">dictionary</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">dictionary, </span><span style="color:#FFAB70;">coherence</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;c_v&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(ldacm.get_coherence())</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ldacm.get_coherence()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;__main__&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">PATH</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;F:/毕业设计/2、硕士毕业设计/6、Project/jieba/分词结果/0729_output.csv&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    fileContent </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> readFile(</span><span style="color:#79B8FF;">PATH</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    dictionary </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> corpora.Dictionary(fileContent)  </span><span style="color:#6A737D;"># 构建词典</span></span>
<span class="line"><span style="color:#E1E4E8;">    corpus </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [dictionary.doc2bow(text) </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> text </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> fileContent]  </span><span style="color:#6A737D;"># 表示为第几个单词出现了几次</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 困惑度</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># x = range(1, 30)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># z = [perplexity(i) for i in x]  #如果想用困惑度就选这个</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># # y = [coherence(i) for i in x]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># plt.plot(x, z)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># plt.xlabel(&#39;主题数目&#39;)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># plt.ylabel(&#39;perplexity大小&#39;)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># plt.rcParams[&#39;font.sans-serif&#39;] = [&#39;SimHei&#39;]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># matplotlib.rcParams[&#39;axes.unicode_minus&#39;] = False</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># plt.title(&#39;主题-perplexity变化情况&#39;)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># plt.show()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 查看具体主题最靠前的关键词</span></span>
<span class="line"><span style="color:#E1E4E8;">    lda </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> LdaModel(</span><span style="color:#FFAB70;">corpus</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">corpus, </span><span style="color:#FFAB70;">id2word</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">dictionary, </span><span style="color:#FFAB70;">num_topics</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">passes</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">random_state</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># print(lda.print_topics(num_topics=10, num_words=15))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 导出网页</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># import pyLDAvis.gensim</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># data = pyLDAvis.gensim.prepare(lda, corpus, dictionary, n_jobs=1)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># pyLDAvis.display(data, local=True)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># pyLDAvis.save_html(data, &#39;F:/毕业设计/2、硕士毕业设计/6、Project/jieba/分词结果/0728_topic.html&#39;)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># pyLDAvis.save_html(data, &#39;F:/毕业设计/2、硕士毕业设计/6、Project/jieba/分词结果/0728_other_topic.html&#39;)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> gensim</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> gensim </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> corpora</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> matplotlib.pyplot </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> plt</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> matplotlib</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> numpy </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> np</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> warnings</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> gensim.models.coherencemodel </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> CoherenceModel</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> gensim.models.ldamodel </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> LdaModel</span></span>
<span class="line"><span style="color:#24292E;">warnings.filterwarnings(</span><span style="color:#032F62;">&#39;ignore&#39;</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;"># To ignore all warnings that arise here to enhance clarity</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">readFile</span><span style="color:#24292E;">(file):</span></span>
<span class="line"><span style="color:#24292E;">    file_object2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#E36209;">file</span><span style="color:#24292E;">, </span><span style="color:#E36209;">encoding</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;utf-8&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">errors</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;ignore&#39;</span><span style="color:#24292E;">).read().split(</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;"># 一行行的读取内容</span></span>
<span class="line"><span style="color:#24292E;">    data_set </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []  </span><span style="color:#6A737D;"># 建立存储分词的列表</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(file_object2)):</span></span>
<span class="line"><span style="color:#24292E;">        result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">        seg_list </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> file_object2[i].split()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> w </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> seg_list:  </span><span style="color:#6A737D;"># 读取每一行分词</span></span>
<span class="line"><span style="color:#24292E;">            result.append(w)</span></span>
<span class="line"><span style="color:#24292E;">        data_set.append(result)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> data_set</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 计算困惑度</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">perplexity</span><span style="color:#24292E;">(num_topics):</span></span>
<span class="line"><span style="color:#24292E;">    ldamodel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LdaModel(corpus, </span><span style="color:#E36209;">num_topics</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">num_topics, </span><span style="color:#E36209;">id2word</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">dictionary, </span><span style="color:#E36209;">passes</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(ldamodel.print_topics(</span><span style="color:#E36209;">num_topics</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">num_topics, </span><span style="color:#E36209;">num_words</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">15</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(ldamodel.log_perplexity(corpus))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ldamodel.log_perplexity(corpus)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 计算coherence</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">coherence</span><span style="color:#24292E;">(num_topics):</span></span>
<span class="line"><span style="color:#24292E;">    ldamodel </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LdaModel(corpus, </span><span style="color:#E36209;">num_topics</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">num_topics, </span><span style="color:#E36209;">id2word</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">dictionary, </span><span style="color:#E36209;">passes</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">, </span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(ldamodel.print_topics(</span><span style="color:#E36209;">num_topics</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">num_topics, </span><span style="color:#E36209;">num_words</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    ldacm </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> CoherenceModel(</span><span style="color:#E36209;">model</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">ldamodel, </span><span style="color:#E36209;">texts</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">fileContent, </span><span style="color:#E36209;">dictionary</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">dictionary, </span><span style="color:#E36209;">coherence</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;c_v&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(ldacm.get_coherence())</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ldacm.get_coherence()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;__main__&#39;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">PATH</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;F:/毕业设计/2、硕士毕业设计/6、Project/jieba/分词结果/0729_output.csv&quot;</span></span>
<span class="line"><span style="color:#24292E;">    fileContent </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> readFile(</span><span style="color:#005CC5;">PATH</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    dictionary </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> corpora.Dictionary(fileContent)  </span><span style="color:#6A737D;"># 构建词典</span></span>
<span class="line"><span style="color:#24292E;">    corpus </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [dictionary.doc2bow(text) </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> text </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> fileContent]  </span><span style="color:#6A737D;"># 表示为第几个单词出现了几次</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 困惑度</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># x = range(1, 30)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># z = [perplexity(i) for i in x]  #如果想用困惑度就选这个</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># # y = [coherence(i) for i in x]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># plt.plot(x, z)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># plt.xlabel(&#39;主题数目&#39;)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># plt.ylabel(&#39;perplexity大小&#39;)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># plt.rcParams[&#39;font.sans-serif&#39;] = [&#39;SimHei&#39;]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># matplotlib.rcParams[&#39;axes.unicode_minus&#39;] = False</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># plt.title(&#39;主题-perplexity变化情况&#39;)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># plt.show()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 查看具体主题最靠前的关键词</span></span>
<span class="line"><span style="color:#24292E;">    lda </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> LdaModel(</span><span style="color:#E36209;">corpus</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">corpus, </span><span style="color:#E36209;">id2word</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">dictionary, </span><span style="color:#E36209;">num_topics</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#E36209;">passes</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">30</span><span style="color:#24292E;">, </span><span style="color:#E36209;">random_state</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># print(lda.print_topics(num_topics=10, num_words=15))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 导出网页</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># import pyLDAvis.gensim</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># data = pyLDAvis.gensim.prepare(lda, corpus, dictionary, n_jobs=1)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># pyLDAvis.display(data, local=True)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># pyLDAvis.save_html(data, &#39;F:/毕业设计/2、硕士毕业设计/6、Project/jieba/分词结果/0728_topic.html&#39;)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># pyLDAvis.save_html(data, &#39;F:/毕业设计/2、硕士毕业设计/6、Project/jieba/分词结果/0728_other_topic.html&#39;)</span></span></code></pre></div><p>困惑度曲线</p><p><img src="`+E+'" alt="image-20240709102943161"></p><p>导出网页截图</p><p><img src="'+i+'" alt="image-20240709102904262"></p>',20),F=[m];function _(A,D,u,g,h,f){return n(),a("div",null,F)}const B=s(d,[["render",_]]);export{b as __pageData,B as default};
