import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.a7175731.js";const F=JSON.parse('{"title":"前端面试题","description":"","frontmatter":{},"headers":[],"relativePath":"面试题/2022/lecture.md","filePath":"面试题/2022/lecture.md","lastUpdated":null}'),p={name:"面试题/2022/lecture.md"},o=l(`<h1 id="前端面试题" tabindex="-1">前端面试题 <a class="header-anchor" href="#前端面试题" aria-label="Permalink to &quot;前端面试题&quot;">​</a></h1><h2 id="_2022-12-28" tabindex="-1">2022.12.28 <a class="header-anchor" href="#_2022-12-28" aria-label="Permalink to &quot;2022.12.28&quot;">​</a></h2><h3 id="_1-nexttick" tabindex="-1">1.nextTick <a class="header-anchor" href="#_1-nexttick" aria-label="Permalink to &quot;1.nextTick&quot;">​</a></h3><ul><li>vue异步更新DOM <ul><li>created初始化data，挂载到Vue实例前； mounted挂载后</li></ul></li><li>如果需要在更新DOM后即刻获得data数据值，需要使用nextTikc() <ul><li>更改组件的data值，Vue不会立即更新，先将该操作放入队列，等待同一事件的数据都变化完成后，将队列内的事件再处理</li><li>目的：提升性能，等异步操作都更改完成后，统一刷新DOM</li></ul></li></ul><p>不使用nextTick</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Vue</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	el: </span><span style="color:#9ECBFF;">&#39;#app&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			msg: </span><span style="color:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">	},</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">mounted</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.msg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;测试文字&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(msg)   </span><span style="color:#6A737D;">//此时会打印空值</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Vue</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	el: </span><span style="color:#032F62;">&#39;#app&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			msg: </span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	},</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">mounted</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.msg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;测试文字&#39;</span></span>
<span class="line"><span style="color:#24292E;">		console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(msg)   </span><span style="color:#6A737D;">//此时会打印空值</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>使用nextTick 不使用nextTick</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Vue</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	el: </span><span style="color:#9ECBFF;">&#39;#app&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			msg: </span><span style="color:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">	},</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">mounted</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.msg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;测试文字&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(msg)   </span><span style="color:#6A737D;">//此时会打印空值</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">$nextTick</span><span style="color:#E1E4E8;">( () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">			consolo.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(msg)  </span><span style="color:#6A737D;">//会打印测试文字</span></span>
<span class="line"><span style="color:#E1E4E8;">		})</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Vue</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	el: </span><span style="color:#032F62;">&#39;#app&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			msg: </span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	},</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">mounted</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.msg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;测试文字&#39;</span></span>
<span class="line"><span style="color:#24292E;">		console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(msg)   </span><span style="color:#6A737D;">//此时会打印空值</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">$nextTick</span><span style="color:#24292E;">( () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">			consolo.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(msg)  </span><span style="color:#6A737D;">//会打印测试文字</span></span>
<span class="line"><span style="color:#24292E;">		})</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="_2-改变数组并且会被vue监听到的方法" tabindex="-1">2.改变数组并且会被vue监听到的方法 <a class="header-anchor" href="#_2-改变数组并且会被vue监听到的方法" aria-label="Permalink to &quot;2.改变数组并且会被vue监听到的方法&quot;">​</a></h3><p>push()在末尾添加一个 pop()在末尾删除一个 shift()头部删除 unshift()头部添加 splice()删除，插入，替换 sort()排序 reverse() 颠倒原来顺序</p><h2 id="_2022-12-29" tabindex="-1">2022.12.29 <a class="header-anchor" href="#_2022-12-29" aria-label="Permalink to &quot;2022.12.29&quot;">​</a></h2><h3 id="_1-activated-deactvated" tabindex="-1">1.activated &amp; deactvated <a class="header-anchor" href="#_1-activated-deactvated" aria-label="Permalink to &quot;1.activated &amp; deactvated&quot;">​</a></h3><p>当组件使用keep-alive时，进入组件 和 离开组件会触发的两个函数</p><h2 id="_2022-12-30" tabindex="-1">2022.12.30 <a class="header-anchor" href="#_2022-12-30" aria-label="Permalink to &quot;2022.12.30&quot;">​</a></h2><h3 id="_1-vue-lazyload" tabindex="-1">1.vue-lazyload <a class="header-anchor" href="#_1-vue-lazyload" aria-label="Permalink to &quot;1.vue-lazyload&quot;">​</a></h3><ul><li>该指令可实现图片的懒加载</li><li>key属性可有可无，用于标识图片的id</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//安装</span></span>
<span class="line"><span style="color:#E1E4E8;">npm install vue</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">lazyload </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">save</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//安装</span></span>
<span class="line"><span style="color:#24292E;">npm install vue</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">lazyload </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">save</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">dev</span></span></code></pre></div><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//main.ts</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> VueLazyLoad </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;vue-lazyload&#39;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">Vue.</span><span style="color:#B392F0;">use</span><span style="color:#E1E4E8;">(VueLazyLoad,  { preLoad:  </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, error:  		      	</span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./assets/imgError.png&#39;</span><span style="color:#E1E4E8;">),  </span><span style="color:#6A737D;">// 错误图片 loading:   require(&#39;./assets/imgLoading.png&#39;),  // 加载中图片 attempt:  2,  </span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//main.ts</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> VueLazyLoad </span><span style="color:#D73A49;">from</span><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;vue-lazyload&#39;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">Vue.</span><span style="color:#6F42C1;">use</span><span style="color:#24292E;">(VueLazyLoad,  { preLoad:  </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, error:  		      	</span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./assets/imgError.png&#39;</span><span style="color:#24292E;">),  </span><span style="color:#6A737D;">// 错误图片 loading:   require(&#39;./assets/imgLoading.png&#39;),  // 加载中图片 attempt:  2,  </span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;  </span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;  </span></span>
<span class="line"><span style="color:#E1E4E8;">   	&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;lazyload&quot;</span><span style="color:#E1E4E8;">&gt;  	</span></span>
<span class="line"><span style="color:#E1E4E8;">   	  &lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;img&quot;</span><span style="color:#E1E4E8;">&gt;  </span></span>
<span class="line"><span style="color:#E1E4E8;">   	  	&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;margin: 20px;&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">v-for</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;(item, index) in imgList&quot;</span><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">:key</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;index&quot;</span><span style="color:#E1E4E8;">&gt;  </span></span>
<span class="line"><span style="color:#E1E4E8;">   	  	  &lt;</span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">v-lazy</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;item&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">alt</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;width: 50px;&quot;</span><span style="color:#E1E4E8;">&gt; &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;  </span></span>
<span class="line"><span style="color:#E1E4E8;">   	  	&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   	  &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;  </span></span>
<span class="line"><span style="color:#E1E4E8;">   &lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;  </span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">&gt;  </span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;  </span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">  { </span></span>
<span class="line"><span style="color:#E1E4E8;">	name:  </span><span style="color:#9ECBFF;">&#39;Lazyload&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">	components:  {}, </span></span>
<span class="line"><span style="color:#E1E4E8;">	props:  {},  </span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">data</span><span style="color:#E1E4E8;">()  { </span></span>
<span class="line"><span style="color:#E1E4E8;">	  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">  { </span></span>
<span class="line"><span style="color:#E1E4E8;">	    imgList:[  </span></span>
<span class="line"><span style="color:#E1E4E8;">	      </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;../assets/weatherIcon/W0.png&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">	      </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;../assets/weatherIcon/W1.png&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">	      </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;../assets/weatherIcon/W10.png&#39;</span><span style="color:#E1E4E8;">)]  </span></span>
<span class="line"><span style="color:#E1E4E8;">	  }  </span></span>
<span class="line"><span style="color:#E1E4E8;">	}, </span></span>
<span class="line"><span style="color:#E1E4E8;">	filters:  {},  </span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">mounted</span><span style="color:#E1E4E8;">()  {},</span></span>
<span class="line"><span style="color:#E1E4E8;">	methods:  {}  </span></span>
<span class="line"><span style="color:#E1E4E8;">}  </span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;  </span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">scoped</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">lang</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;less&quot;</span><span style="color:#E1E4E8;">&gt; </span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">#lazyload</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">background-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#ccc</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">margin</span><span style="color:#E1E4E8;">:  </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">;  </span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">.img</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">background-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#ccc</span><span style="color:#E1E4E8;">;  </span></span>
<span class="line"><span style="color:#E1E4E8;">	} </span></span>
<span class="line"><span style="color:#E1E4E8;">}  </span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">style</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;  </span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;  </span></span>
<span class="line"><span style="color:#24292E;">   	&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;lazyload&quot;</span><span style="color:#24292E;">&gt;  	</span></span>
<span class="line"><span style="color:#24292E;">   	  &lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;img&quot;</span><span style="color:#24292E;">&gt;  </span></span>
<span class="line"><span style="color:#24292E;">   	  	&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;margin: 20px;&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-for</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;(item, index) in imgList&quot;</span><span style="color:#24292E;">  </span><span style="color:#6F42C1;">:key</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;index&quot;</span><span style="color:#24292E;">&gt;  </span></span>
<span class="line"><span style="color:#24292E;">   	  	  &lt;</span><span style="color:#22863A;">img</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-lazy</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;item&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">alt</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;width: 50px;&quot;</span><span style="color:#24292E;">&gt; &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;  </span></span>
<span class="line"><span style="color:#24292E;">   	  	&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">   	  &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;  </span></span>
<span class="line"><span style="color:#24292E;">   &lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;  </span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">template</span><span style="color:#24292E;">&gt;  </span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;  </span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">default</span><span style="color:#24292E;">  { </span></span>
<span class="line"><span style="color:#24292E;">	name:  </span><span style="color:#032F62;">&#39;Lazyload&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">	components:  {}, </span></span>
<span class="line"><span style="color:#24292E;">	props:  {},  </span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">data</span><span style="color:#24292E;">()  { </span></span>
<span class="line"><span style="color:#24292E;">	  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">  { </span></span>
<span class="line"><span style="color:#24292E;">	    imgList:[  </span></span>
<span class="line"><span style="color:#24292E;">	      </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;../assets/weatherIcon/W0.png&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">	      </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;../assets/weatherIcon/W1.png&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">	      </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;../assets/weatherIcon/W10.png&#39;</span><span style="color:#24292E;">)]  </span></span>
<span class="line"><span style="color:#24292E;">	  }  </span></span>
<span class="line"><span style="color:#24292E;">	}, </span></span>
<span class="line"><span style="color:#24292E;">	filters:  {},  </span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">mounted</span><span style="color:#24292E;">()  {},</span></span>
<span class="line"><span style="color:#24292E;">	methods:  {}  </span></span>
<span class="line"><span style="color:#24292E;">}  </span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;  </span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">style</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">scoped</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">lang</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;less&quot;</span><span style="color:#24292E;">&gt; </span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">#lazyload</span><span style="color:#24292E;"> { </span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#ccc</span><span style="color:#24292E;">; </span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">margin</span><span style="color:#24292E;">:  </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">;  </span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">.img</span><span style="color:#24292E;"> { </span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#ccc</span><span style="color:#24292E;">;  </span></span>
<span class="line"><span style="color:#24292E;">	} </span></span>
<span class="line"><span style="color:#24292E;">}  </span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">style</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="_2022-12-31" tabindex="-1">2022.12.31 <a class="header-anchor" href="#_2022-12-31" aria-label="Permalink to &quot;2022.12.31&quot;">​</a></h2><h3 id="_1-vue-router" tabindex="-1">1.vue-router <a class="header-anchor" href="#_1-vue-router" aria-label="Permalink to &quot;1.vue-router&quot;">​</a></h3><ul><li>router <ul><li>VueRouter的实例，一个全局对象</li><li>this.$router.push()、this.$router.replace、this.$router.go()</li><li>hash / history <ul><li>hash 通过onhashchange监听</li><li>history通过history.pushState 和 history.replaceState</li></ul></li></ul></li><li>route <ul><li>正在跳转的路由，一个局部对象，可以获取该路由的name、path、params和id等</li></ul></li></ul><h3 id="_2-父子组件创建销毁的生命周期" tabindex="-1">2.父子组件创建销毁的生命周期 <a class="header-anchor" href="#_2-父子组件创建销毁的生命周期" aria-label="Permalink to &quot;2.父子组件创建销毁的生命周期&quot;">​</a></h3><p>父beforecreate -&gt; 父created -&gt; 父beforemount -&gt; 子beforecreate -&gt; 子created -&gt; 子beforemount -&gt; 子mounted -&gt;父mounted -&gt; 父beforeDestroy -&gt; 子berforeDestroy -&gt; 子destroyed -&gt; 父destroyed</p>`,24),t=[o];function e(c,r,E,y,i,d){return a(),n("div",null,t)}const g=s(p,[["render",e]]);export{F as __pageData,g as default};
