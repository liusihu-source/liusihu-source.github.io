import{_ as s,c as a,o as n,a as l}from"./app.570737f8.js";const A=JSON.parse('{"title":"前端面试题","description":"","frontmatter":{},"headers":[{"level":2,"title":"2023.01.16","slug":"_2023-01-16","link":"#_2023-01-16","children":[{"level":3,"title":"1.类方法 和 对象方法","slug":"_1-类方法-和-对象方法","link":"#_1-类方法-和-对象方法","children":[]}]},{"level":2,"title":"2023.01.17","slug":"_2023-01-17","link":"#_2023-01-17","children":[{"level":3,"title":"1.arr.forEach()","slug":"_1-arr-foreach","link":"#_1-arr-foreach","children":[]},{"level":3,"title":"2.NaN","slug":"_2-nan","link":"#_2-nan","children":[]},{"level":3,"title":"3.process.nextTick() & pormise.then()","slug":"_3-process-nexttick-pormise-then","link":"#_3-process-nexttick-pormise-then","children":[]}]},{"level":2,"title":"2023.01.18","slug":"_2023-01-18","link":"#_2023-01-18","children":[{"level":3,"title":"1.原始值（简单类型） 和 引用值（对象类型）","slug":"_1-原始值-简单类型-和-引用值-对象类型","link":"#_1-原始值-简单类型-和-引用值-对象类型","children":[]},{"level":3,"title":"2.Math.max","slug":"_2-math-max","link":"#_2-math-max","children":[]}]},{"level":2,"title":"2023.01.19","slug":"_2023-01-19","link":"#_2023-01-19","children":[{"level":3,"title":"1.arr.filter/some/every/map","slug":"_1-arr-filter-some-every-map","link":"#_1-arr-filter-some-every-map","children":[]},{"level":3,"title":"2.加法 、字符串合并与一元操作符","slug":"_2-加法-、字符串合并与一元操作符","link":"#_2-加法-、字符串合并与一元操作符","children":[]}]},{"level":2,"title":"2023.01.20","slug":"_2023-01-20","link":"#_2023-01-20","children":[{"level":3,"title":"1.Object.is() 和 ===","slug":"_1-object-is-和","link":"#_1-object-is-和","children":[]},{"level":3,"title":"2.reflow回流 和 repaint重绘","slug":"_2-reflow回流-和-repaint重绘","link":"#_2-reflow回流-和-repaint重绘","children":[]}]},{"level":2,"title":"2023.01.21","slug":"_2023-01-21","link":"#_2023-01-21","children":[{"level":3,"title":"1.Math","slug":"_1-math","link":"#_1-math","children":[]}]},{"level":2,"title":"2023.01.22","slug":"_2023-01-22","link":"#_2023-01-22","children":[{"level":3,"title":"1.新年快乐","slug":"_1-新年快乐","link":"#_1-新年快乐","children":[]}]},{"level":2,"title":"2023.01.25","slug":"_2023-01-25","link":"#_2023-01-25","children":[{"level":3,"title":"1.undefined 和 null","slug":"_1-undefined-和-null","link":"#_1-undefined-和-null","children":[]}]},{"level":2,"title":"2023.01.26","slug":"_2023-01-26","link":"#_2023-01-26","children":[{"level":3,"title":"1.tagName","slug":"_1-tagname","link":"#_1-tagname","children":[]},{"level":3,"title":"2.例题","slug":"_2-例题","link":"#_2-例题","children":[]}]},{"level":2,"title":"2023.01.27","slug":"_2023-01-27","link":"#_2023-01-27","children":[{"level":3,"title":"1.遍历对象属性","slug":"_1-遍历对象属性","link":"#_1-遍历对象属性","children":[]},{"level":3,"title":"2.hasOwnProperty","slug":"_2-hasownproperty","link":"#_2-hasownproperty","children":[]}]},{"level":2,"title":"2023.01.28","slug":"_2023-01-28","link":"#_2023-01-28","children":[{"level":3,"title":"1.包装类的对象","slug":"_1-包装类的对象","link":"#_1-包装类的对象","children":[]},{"level":3,"title":"2.Cookie","slug":"_2-cookie","link":"#_2-cookie","children":[]},{"level":3,"title":"3.","slug":"_3","link":"#_3","children":[]}]},{"level":2,"title":"2023.01.29","slug":"_2023-01-29","link":"#_2023-01-29","children":[{"level":3,"title":"1.例题","slug":"_1-例题","link":"#_1-例题","children":[]},{"level":3,"title":"2.false值","slug":"_2-false值","link":"#_2-false值","children":[]}]},{"level":2,"title":"2023.01.30","slug":"_2023-01-30","link":"#_2023-01-30","children":[{"level":3,"title":"无","slug":"无","link":"#无","children":[]}]}],"relativePath":"面试题/2023/20230116.md","lastUpdated":null}'),p={name:"面试题/2023/20230116.md"},o=l(`<h1 id="前端面试题" tabindex="-1">前端面试题 <a class="header-anchor" href="#前端面试题" aria-hidden="true">#</a></h1><h2 id="_2023-01-16" tabindex="-1">2023.01.16 <a class="header-anchor" href="#_2023-01-16" aria-hidden="true">#</a></h2><h3 id="_1-类方法-和-对象方法" tabindex="-1">1.类方法 和 对象方法 <a class="header-anchor" href="#_1-类方法-和-对象方法" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Dog</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">dog</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">bark</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bark</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>dog方法为静态方法 <ul><li>静态方法不能使用实例对象调用，所以this不会指向实例对象</li><li>静态方法只能通过类调用</li></ul></li><li>bark为实例方法 <ul><li>实例方法只能实例对象调用</li></ul></li><li>因为类静态方法 和 实例方法调用者不同，所以这两种方法名可以同名（尽量不要）</li></ul><h2 id="_2023-01-17" tabindex="-1">2023.01.17 <a class="header-anchor" href="#_2023-01-17" aria-hidden="true">#</a></h2><h3 id="_1-arr-foreach" tabindex="-1">1.arr.forEach() <a class="header-anchor" href="#_1-arr-foreach" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> count </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">val1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">val2</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">count</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">count</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">%</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">val1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>2159</p><ul><li>arrForEach()循环遍历数组，参数是==一个函数==，迭代以此数组，函数执行以此。</li><li>函数内部有return，只是相当于当前迭代结束，不会影响下次迭代</li></ul><h3 id="_2-nan" tabindex="-1">2.NaN <a class="header-anchor" href="#_2-nan" aria-hidden="true">#</a></h3><p>NaN无论和谁比较（包括自己），都是false</p><h3 id="_3-process-nexttick-pormise-then" tabindex="-1">3.process.nextTick() &amp; pormise.then() <a class="header-anchor" href="#_3-process-nexttick-pormise-then" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">p1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">p2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">process</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">nextTick</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">n1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">process</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">nextTick</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">n2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>n1,n2,p1,p2 两者都属于微任务，只是nextTick优先级更高</p><h2 id="_2023-01-18" tabindex="-1">2023.01.18 <a class="header-anchor" href="#_2023-01-18" aria-hidden="true">#</a></h2><h3 id="_1-原始值-简单类型-和-引用值-对象类型" tabindex="-1">1.原始值（简单类型） 和 引用值（对象类型） <a class="header-anchor" href="#_1-原始值-简单类型-和-引用值-对象类型" aria-hidden="true">#</a></h3><p>原始值：存储栈中</p><ul><li>undefined</li><li>null</li><li>boolean</li><li>number</li><li>string 引用值：存储堆中</li></ul><h3 id="_2-math-max" tabindex="-1">2.Math.max <a class="header-anchor" href="#_2-math-max" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">//第一种方式</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">max</span><span style="color:#A6ACCD;">(arr[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">arr[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">arr[</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">arr[</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//第二种方式</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">max</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">call</span><span style="color:#A6ACCD;">(Math</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">arr[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">arr[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">arr[</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">arr[</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//第三种方式</span></span>
<span class="line"><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">max</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">apply</span><span style="color:#A6ACCD;">(Math</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">arr)</span></span>
<span class="line"></span></code></pre></div><ul><li>call 第一个参数是调用对象，第二个至后可以直接讲数组项带入</li><li>apply第一个参数是调用对象，第二个参数是数组</li></ul><h2 id="_2023-01-19" tabindex="-1">2023.01.19 <a class="header-anchor" href="#_2023-01-19" aria-hidden="true">#</a></h2><h3 id="_1-arr-filter-some-every-map" tabindex="-1">1.arr.filter/some/every/map <a class="header-anchor" href="#_1-arr-filter-some-every-map" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">9</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">val1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">val2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">val1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#FF9CAC;">true</span></span>
<span class="line"></span></code></pre></div><ul><li>filter用于筛选出符合满足要求的数组，返回一个新的数组 [20,12]</li><li>some用于监测数组是否有满足条件的元素，有则返回true，否则false;true</li><li>every用于监测数组是否都符合条件，都满足才返回true ;false</li><li>map用于对每个元素进行单独判断，返回一个新数组[f,t,f,t,f]</li></ul><h3 id="_2-加法-、字符串合并与一元操作符" tabindex="-1">2.加法 、字符串合并与一元操作符 <a class="header-anchor" href="#_2-加法-、字符串合并与一元操作符" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">B</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">B</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>122; 做加法有双引号默认是字符串合并，所以122 32；+ 2是一元+操作符，所以会变成3 + “2”，所以32 NaN2；做减法只能是加减运算，所以转Number，结果NaN，加上字符串2 NaN；NaN + 任何都是 NaN</p><h2 id="_2023-01-20" tabindex="-1">2023.01.20 <a class="header-anchor" href="#_2023-01-20" aria-hidden="true">#</a></h2><h3 id="_1-object-is-和" tabindex="-1">1.Object.is() 和 === <a class="header-anchor" href="#_1-object-is-和" aria-hidden="true">#</a></h3><p>Object.is() 和 === 都是判断两个数是否严格相等 去呗在于 NaN 和 +0 和 -0的区别</p><h3 id="_2-reflow回流-和-repaint重绘" tabindex="-1">2.reflow回流 和 repaint重绘 <a class="header-anchor" href="#_2-reflow回流-和-repaint重绘" aria-hidden="true">#</a></h3><ul><li>reflow：几乎无法避免，比如页面中树桩目录的折叠、展开、都回引起整个页面的重新渲染，如以下几种情况会导致reflow发生 <ul><li>改变窗口大小</li><li>改变文字大小</li><li>内容改变</li><li>激活伪类（如hover）</li><li>操作class属性</li><li>脚本操作DOM</li><li>计算offsetWidth 和 offsetHeight</li><li>设置style属性</li></ul></li><li>repaint：一般只是改变元素的背景颜色、文字颜色、边框颜色等会触发</li></ul><h2 id="_2023-01-21" tabindex="-1">2023.01.21 <a class="header-anchor" href="#_2023-01-21" aria-hidden="true">#</a></h2><h3 id="_1-math" tabindex="-1">1.Math <a class="header-anchor" href="#_1-math" aria-hidden="true">#</a></h3><ul><li>Math.ceil()向上取整，即总是将数值向上舍入为最接近的整数</li><li>Math.floor()向下取整，总是将数值向下舍入为最接近的整数</li><li>Math.round()标准取整，四舍五入</li></ul><h2 id="_2023-01-22" tabindex="-1">2023.01.22 <a class="header-anchor" href="#_2023-01-22" aria-hidden="true">#</a></h2><h3 id="_1-新年快乐" tabindex="-1">1.新年快乐 <a class="header-anchor" href="#_1-新年快乐" aria-hidden="true">#</a></h3><p>​🐰 ​🐰</p><h2 id="_2023-01-25" tabindex="-1">2023.01.25 <a class="header-anchor" href="#_2023-01-25" aria-hidden="true">#</a></h2><h3 id="_1-undefined-和-null" tabindex="-1">1.undefined 和 null <a class="header-anchor" href="#_1-undefined-和-null" aria-hidden="true">#</a></h3><ul><li>underfined 和 null与任何有意义的值比较返回都是false</li><li>null与underfined之间互相比较是true</li></ul><h2 id="_2023-01-26" tabindex="-1">2023.01.26 <a class="header-anchor" href="#_2023-01-26" aria-hidden="true">#</a></h2><h3 id="_1-tagname" tabindex="-1">1.tagName <a class="header-anchor" href="#_1-tagname" aria-hidden="true">#</a></h3><ul><li>tagName()用于返回当前标签的名字</li></ul><h3 id="_2-例题" tabindex="-1">2.例题 <a class="header-anchor" href="#_2-例题" aria-hidden="true">#</a></h3><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">点击</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">a</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">b</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> btn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">button</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">btn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">onclick </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">a</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">①</span></span>
<span class="line"><span style="color:#A6ACCD;">btn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">onclick </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">② </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><ul><li>注释① <ul><li>不会立即执行a()，点击按钮输出1，return语句不会执行</li></ul></li><li>注释② <ul><li>a()方法即刻执行，直接输出1，点击事件对应return内方法，当点击触发则输出2</li></ul></li></ul><h2 id="_2023-01-27" tabindex="-1">2023.01.27 <a class="header-anchor" href="#_2023-01-27" aria-hidden="true">#</a></h2><h3 id="_1-遍历对象属性" tabindex="-1">1.遍历对象属性 <a class="header-anchor" href="#_1-遍历对象属性" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> my_data</span><span style="color:#89DDFF;">={</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">’Ape’</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">’Banana’</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">c</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">’Citronella’</span><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p>for(var key in my_data){}</p><h3 id="_2-hasownproperty" tabindex="-1">2.hasOwnProperty <a class="header-anchor" href="#_2-hasownproperty" aria-hidden="true">#</a></h3><p>用于判断一个对象是否有给出指定名称的属性，但无法检查该对象的原型链是否有该指定属性。</p><h2 id="_2023-01-28" tabindex="-1">2023.01.28 <a class="header-anchor" href="#_2023-01-28" aria-hidden="true">#</a></h2><h3 id="_1-包装类的对象" tabindex="-1">1.包装类的对象 <a class="header-anchor" href="#_1-包装类的对象" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Object</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1.0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">constructor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">Number[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">123</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Object</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1.0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">constructor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><ul><li>constructor 是构造函数属性。它是谁的属性？它<strong>是原型属性 prototype 所指向的那个对象的属性</strong>。</li><li>Object(1.0).constructor 的原型是 Number 对象。</li><li>Number 对象本身可作为构造函数，所以 Object(1.0).constructor 就是 Number 对象本身。</li></ul><h3 id="_2-cookie" tabindex="-1">2.Cookie <a class="header-anchor" href="#_2-cookie" aria-hidden="true">#</a></h3><ul><li>Cookie是不超过4KB的小型文本数据，由名称Name，值Value和其他用于控制Cookie有效性、安全性、使用范围的可选属性组成；</li><li>Cookie的过期时间如果不做设置，默认浏览器关闭时结束</li></ul><h3 id="_3" tabindex="-1">3. <a class="header-anchor" href="#_3" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> o </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;"> 	</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">fn</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">age</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">o</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fn</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">//undefined</span></span>
<span class="line"></span></code></pre></div><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> person </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">sex</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">女</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">fn</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">sex</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">person</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fn</span><span style="color:#A6ACCD;">()  </span><span style="color:#676E95;font-style:italic;">//女</span></span>
<span class="line"></span></code></pre></div><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">w</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">o</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">a</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">print2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">a</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> p </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">print</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> p2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">print2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">print2</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">p</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">p2</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">// o w w w</span></span>
<span class="line"></span></code></pre></div><h2 id="_2023-01-29" tabindex="-1">2023.01.29 <a class="header-anchor" href="#_2023-01-29" aria-hidden="true">#</a></h2><h3 id="_1-例题" tabindex="-1">1.例题 <a class="header-anchor" href="#_1-例题" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">num1</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">117</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> res </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">child </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> obj </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">num2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">935</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> y </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">child</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">num2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">child)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//undefined</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(res</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">num1)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//117</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(y)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//935</span></span>
<span class="line"></span></code></pre></div><p><img src="http://liusihu.gitee.io/nutcloud/202301291.jpg" alt="输入图片描述"><img src="http://liusihu.gitee.io/nutcloud/202301292.jpg" alt="输入图片描述"><img src="http://liusihu.gitee.io/nutcloud/202301293.jpg" alt="输入图片描述"><img src="http://liusihu.gitee.io/nutcloud/202301294.jpg" alt="输入图片描述"></p><h3 id="_2-false值" tabindex="-1">2.false值 <a class="header-anchor" href="#_2-false值" aria-hidden="true">#</a></h3><ul><li>undefined</li><li>null</li><li>+0</li><li>-0</li><li>NaN</li></ul><h2 id="_2023-01-30" tabindex="-1">2023.01.30 <a class="header-anchor" href="#_2023-01-30" aria-hidden="true">#</a></h2><h3 id="无" tabindex="-1">无 <a class="header-anchor" href="#无" aria-hidden="true">#</a></h3>`,73),e=[o];function t(r,c,y,D,i,F){return n(),a("div",null,e)}const h=s(p,[["render",t]]);export{A as __pageData,h as default};
