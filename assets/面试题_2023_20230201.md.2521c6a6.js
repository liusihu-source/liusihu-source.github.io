import{_ as s,c as n,o as a,a as l}from"./app.be2db5e6.js";const C=JSON.parse('{"title":"前端面试题","description":"","frontmatter":{},"headers":[{"level":2,"title":"2023.02.03","slug":"_2023-02-03","link":"#_2023-02-03","children":[{"level":3,"title":"1.部分js事件触发情况","slug":"_1-部分js事件触发情况","link":"#_1-部分js事件触发情况","children":[]},{"level":3,"title":"2.例题","slug":"_2-例题","link":"#_2-例题","children":[]}]}],"relativePath":"面试题/2023/20230201.md","lastUpdated":null}'),o={name:"面试题/2023/20230201.md"},p=l(`<h1 id="前端面试题" tabindex="-1">前端面试题 <a class="header-anchor" href="#前端面试题" aria-hidden="true">#</a></h1><h2 id="_2023-02-03" tabindex="-1">2023.02.03 <a class="header-anchor" href="#_2023-02-03" aria-hidden="true">#</a></h2><h3 id="_1-部分js事件触发情况" tabindex="-1">1.部分js事件触发情况 <a class="header-anchor" href="#_1-部分js事件触发情况" aria-hidden="true">#</a></h3><ul><li>obblur 元素获得焦点</li><li>onkeypress 键盘按键被按下或者按住</li><li>onmousedown 鼠标按键被按下</li><li>onchange 用户改变域的内容</li></ul><h3 id="_2-例题" tabindex="-1">2.例题 <a class="header-anchor" href="#_2-例题" aria-hidden="true">#</a></h3><p>解释</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">father</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">num</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">935</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">work</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">read</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">write</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">listen</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">son</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#FFCB6B;">son</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">father</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// son.prototype = {  num:935, work:[&#39;read&#39;,&#39;write&#39;,&#39;listen&#39;] }</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> son1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">son</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// son1 = { }</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> son2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">son</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// son2 = { }</span></span>
<span class="line"><span style="color:#A6ACCD;">son1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">117</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// son1 = { num: 117 }</span></span>
<span class="line"><span style="color:#A6ACCD;">son1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">work</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//son1自己没有work，去原型里找到work,并删除work里的最后一项，</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//此时son.prototype = {  num:935, work:[&#39;read&#39;,&#39;write&#39;] }</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(son2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">num)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// son2自己没有num，去原型里找，有num:935</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(son2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">work)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//son1和son2原型是同一个，所以此时原型里的work是[&#39;read&#39;, &#39;write&#39;]</span></span>
<span class="line"></span></code></pre></div>`,7),e=[p];function t(r,c,y,D,F,i){return a(),n("div",null,e)}const d=s(o,[["render",t]]);export{C as __pageData,d as default};
