import{_ as i,c as a,a2 as n,o as t}from"./chunks/framework.BQmytedh.js";const l="/assets/image-20240812153441243.DJk8GA2W.png",h="/assets/image-20240812153454647.CjUlJZQY.png",c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"面试题/面试题-CSS/202408.md","filePath":"面试题/面试题-CSS/202408.md","lastUpdated":null}'),e={name:"面试题/面试题-CSS/202408.md"};function p(k,s,r,d,o,E){return t(),a("div",null,s[0]||(s[0]=[n('<h2 id="面试题" tabindex="-1">面试题 <a class="header-anchor" href="#面试题" aria-label="Permalink to &quot;面试题&quot;">​</a></h2><h3 id="_0812" tabindex="-1">0812 <a class="header-anchor" href="#_0812" aria-label="Permalink to &quot;0812&quot;">​</a></h3><h4 id="_1、position值分别是相对哪个位置定位的" tabindex="-1">1、position值分别是相对哪个位置定位的 <a class="header-anchor" href="#_1、position值分别是相对哪个位置定位的" aria-label="Permalink to &quot;1、position值分别是相对哪个位置定位的&quot;">​</a></h4><ul><li>relative：相对自己本身所在正常文档流的位置进行定位</li><li>absolute：相对于最近一级的父元素</li><li>static：默认值</li><li>sticky：生成粘性定位的元素</li></ul><p>💡 粘性定位的元素是依赖于用户的滚动，在 <strong>position:relative</strong> 与 <strong>position:fixed</strong> 定位之间切换。它的行为就像 <strong>position:relative;</strong> 而当页面滚动超出目标区域时，它的表现就像 <strong>position:fixed;</strong>，它会固定在目标位置。</p><p><img src="'+l+'" alt="image-20240812153441243"></p><p><img src="'+h+`" alt="image-20240812153454647"></p><h4 id="_2、em-和-rem" tabindex="-1">2、em 和 rem <a class="header-anchor" href="#_2、em-和-rem" aria-label="Permalink to &quot;2、em 和 rem&quot;">​</a></h4><p>em: 相对父元素</p><p>rem: 相对根元素（HTML元素）</p><h4 id="_3、opacity-和-rgba区别" tabindex="-1">3、opacity 和 rgba区别 <a class="header-anchor" href="#_3、opacity-和-rgba区别" aria-label="Permalink to &quot;3、opacity 和 rgba区别&quot;">​</a></h4><ol><li><strong>作用范围</strong>：<code>opacity</code>影响整个元素，包括内容和边框；而<code>rgba</code>只影响元素的填充色。</li><li><strong>使用场景</strong>：如果你需要设置整个元素的透明度，使用<code>opacity</code>；如果你需要设置元素的颜色和填充透明度，使用<code>rgba</code>。</li></ol><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  opacity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 元素50%透明 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rgba</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 背景颜色为白色，50%透明 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_4、canvas-和-svg" tabindex="-1">4、Canvas 和 SVG <a class="header-anchor" href="#_4、canvas-和-svg" aria-label="Permalink to &quot;4、Canvas 和 SVG&quot;">​</a></h4><p>Canvas：</p><ul><li>绘制完成后不能访问像素或操作该对象，适于游戏动画（因不需要后续操作）</li><li>结果是位图</li></ul><p>SVG：</p><ul><li>SVG需要记录坐标，同时可绑定事件</li><li>结果是矢量图</li></ul><h4 id="_5、rem使用方式" tabindex="-1">5、rem使用方式 <a class="header-anchor" href="#_5、rem使用方式" aria-label="Permalink to &quot;5、rem使用方式&quot;">​</a></h4><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@media</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">max-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">600</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 在小屏幕上减小字体大小 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 相当于20 * 16px = 320px */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 相当于16px */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 相当于24px */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,20)]))}const y=i(e,[["render",p]]);export{c as __pageData,y as default};
